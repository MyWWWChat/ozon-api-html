{
    "openapi": "3.0.0",
    "info": {
      "title": "Документация Ozon Seller API",
      "version": 2.1,
      "x-logo": {
        "url": "https://cdn1.ozonusercontent.com/s3/redoc/ozon-seller-logo.svg",
        "backgroundColor": null,
        "altText": "Ozon logo"
      },
      "description": "По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.\n\n> [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)\n\n> [Информационная платформа и сообщество разработчиков Ozon for dev](https://dev.ozon.ru/)\n"
    },
    "components": {
      "parameters": {
        "Client-Id": {
          "description": "Идентификатор клиента.",
          "in": "header",
          "name": "Client-Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "Api-Key": {
          "description": "API-ключ.",
          "in": "header",
          "name": "Api-Key",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      },
      "schemas": {
        "languageLanguage": {
          "default": "DEFAULT",
          "enum": [
            "DEFAULT",
            "RU",
            "EN",
            "TR",
            "ZH_HANS"
          ],
          "description": "Язык в ответе:\n- `EN` — английский,\n- `RU` — русский,\n- `TR` — турецкий,\n- `ZH_HANS` — китайский.\n\nПо умолчанию используется русский язык.\n",
          "type": "string",
          "title": "object"
        },
        "v1GetTreeRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "language": {
              "$ref": "#/components/schemas/languageLanguage"
            }
          }
        },
        "protobufAny": {
          "type": "object",
          "title": "object",
          "properties": {
            "typeUrl": {
              "type": "string",
              "description": "Тип протокола передачи данных."
            },
            "value": {
              "type": "string",
              "format": "byte",
              "description": "Значение ошибки."
            }
          }
        },
        "rpcStatus": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Дополнительная информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Описание ошибки."
            }
          }
        },
        "v1GetTreeResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории."
            },
            "category_name": {
              "type": "string",
              "description": "Название категории."
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetTreeResponseItem"
              },
              "description": "Дерево подкатегорий."
            },
            "disabled": {
              "type": "boolean",
              "description": "`true`, если в категории нельзя создавать товары. `false`, если можно.\n"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара."
            },
            "type_name": {
              "type": "string",
              "description": "Название типа товара."
            }
          }
        },
        "v1GetTreeResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Список категорий.",
              "items": {
                "$ref": "#/components/schemas/v1GetTreeResponseItem"
              }
            }
          }
        },
        "v1GetAttributesRequest": {
          "required": [
            "description_category_id",
            "type_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            },
            "language": {
              "$ref": "#/components/schemas/languageLanguage"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            }
          }
        },
        "v1GetAttributesResponseAttribute": {
          "type": "object",
          "title": "object",
          "properties": {
            "category_dependent": {
              "type": "boolean",
              "description": "Признак, что значения словарного атрибута зависят от категории:\n- `true` — у атрибута разные значения для каждой категории.\n- `false` — у атрибута одинаковые значения для всех категорий.\n"
            },
            "description": {
              "type": "string",
              "description": "Описание характеристики."
            },
            "dictionary_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор справочника."
            },
            "group_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор группы характеристик."
            },
            "group_name": {
              "type": "string",
              "description": "Название группы характеристик."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на формирование документов."
            },
            "is_aspect": {
              "type": "boolean",
              "description": "Признак аспектного атрибута. Аспектный атрибут — характеристика, по которой отличаются товары одной модели. \n\nНапример, у одежды и обуви одной модели могут быть разные расцветки и размеры. То есть цвет и размер — это аспектные атрибуты.\n\nЗначения поля:\n  - `true` — атрибут аспектный и его нельзя изменить после поставки товара на склад или продажи со своего склада.\n  - `false` — атрибут не аспектный, можно изменить в любое время.\n"
            },
            "is_collection": {
              "type": "boolean",
              "description": "- `true`, если характеристика — набор значений.\n- `false`, если характеристика — одно значение.\n"
            },
            "is_required": {
              "type": "boolean",
              "description": "Признак обязательной характеристики:\n  - `true` — обязательная характеристика,\n  - `false` — характеристику можно не указывать.\n"
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "type": {
              "type": "string",
              "description": "Тип характеристики."
            },
            "attribute_complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор комплексного атрибута."
            },
            "max_value_count": {
              "format": "int64",
              "type": "integer",
              "description": "Максимальное количество значений для атрибута."
            },
            "complex_is_collection": {
              "type": "boolean",
              "description": "Признак, что комплексная характеристика — набор значений:\n- `true`, если комплексная характеристика — набор значений,\n- `false`, если комплексная характеристика — одно значение.\n"
            }
          }
        },
        "v1GetAttributesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/v1GetAttributesResponseAttribute"
              }
            }
          }
        },
        "v1GetAttributeValuesRequest": {
          "required": [
            "attribute_id",
            "description_category_id",
            "limit",
            "type_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор характеристики. Можно получить с помощью метода [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes)."
            },
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            },
            "language": {
              "$ref": "#/components/schemas/languageLanguage"
            },
            "last_value_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор справочника, с которого нужно начать ответ. Если `last_value_id` — 10, то в ответе будут справочники, начиная с одиннадцатого."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений в ответе:\n- максимум — 2000,\n- минимум — 1.\n"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            }
          }
        },
        "v1GetAttributeValuesResponseDictionaryValue": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор значения характеристики."
            },
            "info": {
              "type": "string",
              "description": "Дополнительное описание."
            },
            "picture": {
              "type": "string",
              "description": "Ссылка на изображение."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          }
        },
        "v1GetAttributeValuesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернулась только часть значений характеристики:\n- `true` — сделайте повторный запрос с новым параметром `last_value_id` для получения остальных значений;\n- `false` — ответ содержит все значения характеристики.\n"
            },
            "result": {
              "type": "array",
              "description": "Значения характеристики.",
              "items": {
                "$ref": "#/components/schemas/v1GetAttributeValuesResponseDictionaryValue"
              }
            }
          }
        },
        "v1SearchAttributeValuesRequest": {
          "required": [
            "attribute_id",
            "description_category_id",
            "limit",
            "type_id",
            "value"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор характеристики. Можно получить с помощью метода [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes)."
            },
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений в ответе:\n- максимум — 100,\n- минимум — 1.\n"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            },
            "value": {
              "type": "string",
              "description": "Значение, по которому система будет искать справочные значения. Минимум — 2 символа."
            }
          }
        },
        "SearchAttributeValuesResponseValue": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор значения характеристики."
            },
            "info": {
              "type": "string",
              "description": "Дополнительная информация."
            },
            "picture": {
              "type": "string",
              "description": "Ссылка на изображение."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          }
        },
        "v1SearchAttributeValuesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Значения характеристики.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SearchAttributeValuesResponseValue"
              }
            }
          }
        },
        "v3ImportProductsRequestDictionaryValue": {
          "type": "object",
          "title": "object",
          "properties": {
            "dictionary_value_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор справочника."
            },
            "value": {
              "type": "string",
              "description": "Значение из справочника."
            }
          }
        },
        "v3ImportProductsRequestAttribute": {
          "type": "object",
          "title": "object",
          "properties": {
            "complex_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель», «L2 Cache» и другие. У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор характеристики."
            },
            "values": {
              "type": "array",
              "description": "Массив вложенных значений характеристики.",
              "items": {
                "$ref": "#/components/schemas/v3ImportProductsRequestDictionaryValue"
              }
            }
          }
        },
        "v3ImportProductsRequestComplexAttribute": {
          "type": "object",
          "properties": {
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ImportProductsRequestAttribute"
              }
            }
          }
        },
        "ImportProductsRequestPdfList": {
          "properties": {
            "index": {
              "format": "int64",
              "type": "integer",
              "description": "Индекс документа в хранилище, который задаёт порядок."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            },
            "src_url": {
              "type": "string",
              "description": "Адрес файла."
            }
          },
          "type": "object",
          "title": "object"
        },
        "ImportProductRequestPromotion": {
          "properties": {
            "operation": {
              "type": "string",
              "description": "Атрибут для действий с акцией:\n- `ENABLE` — включить,\n- `DISABLE` — выключить,\n- `UNKNOWN` — ничего не менять, передаётся по умолчанию.\n",
              "default": "UNKNOWN",
              "enum": [
                "UNKNOWN",
                "ENABLE",
                "DISABLE"
              ]
            },
            "type": {
              "type": "string",
              "description": "Тип акции:\n- `REVIEWS_PROMO` — акция «Баллы за отзывы».\n",
              "default": "REVIEWS_PROMO",
              "enum": [
                "REVIEWS_PROMO"
              ]
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3ServiceType": {
          "type": "string",
          "default": "IS_CODE_SERVICE",
          "enum": [
            "IS_CODE_SERVICE",
            "IS_NO_CODE_SERVICE"
          ]
        },
        "v3ImportProductsRequestItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ImportProductsRequestAttribute"
              },
              "description": "Массив с характеристиками товара. Характеристики отличаются для разных категорий — их можно посмотреть в [Базе знаний продавца](https://seller-edu.ozon.ru/) или через API."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод товара."
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "complex_attributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ImportProductsRequestComplexAttribute"
              },
              "description": "Массив характеристик, у которых есть вложенные атрибуты."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "depth": {
              "type": "integer",
              "format": "int32",
              "description": "Глубина упаковки."
            },
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории. Можно получить с помощью метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree)."
            },
            "new_description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Новый идентификатор категории. Укажите его, если нужно изменить текущую категорию товара."
            },
            "dimension_unit": {
              "type": "string",
              "description": "Единица измерения габаритов:\n  - `mm` — миллиметры,\n  - `cm` — сантиметры,\n  - `in` — дюймы.\n"
            },
            "geo_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Геоограничения — при необходимости заполните параметр в личном кабинете при создании или редактировании товара.\n\nНеобязательный параметр.\n"
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Высота упаковки."
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Массив изображений. До 15 штук. Изображения показываются на сайте в таком же порядке, как в массиве.\n\nЕсли не передать значение `primary_image`, первое изображение в массиве будет главным для товара.\n\nЕсли вы передали значение `primary_image`, передайте до 14 изображений.\nЕсли параметр `primary_image` пустой, передайте до 15 изображений.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG или PNG.\n"
            },
            "images360": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Массив изображений 360. До 70 штук.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "name": {
              "type": "string",
              "description": "Название товара. До 500 символов."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (будет зачёркнута на карточке товара). Указывается в рублях. Разделитель дробной\nчасти — точка, до двух знаков после точки.\n\nЕсли вы раньше передавали `old_price`, то при обновлении `price` также обновите `old_price`.\n"
            },
            "pdf_list": {
              "type": "array",
              "description": "Список PDF-файлов.",
              "items": {
                "$ref": "#/components/schemas/ImportProductsRequestPdfList"
              }
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара. Если на товар нет скидок, укажите\nзначение `old_price` в этом параметре.\n"
            },
            "primary_image": {
              "type": "string",
              "description": "Ссылка на главное изображение товара."
            },
            "promotions": {
              "type": "array",
              "description": "Акции.",
              "items": {
                "$ref": "#/components/schemas/ImportProductRequestPromotion"
              }
            },
            "service_type": {
              "$ref": "#/components/schemas/v3ServiceType"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара. \nЗначения можно получить из такого же параметра `type_id` в ответе метода [/v1/description-category/tree](#operation/DescriptionCategoryAPI_GetTree).\nПри заполнении этого параметра можно не указывать в `attibutes ` атрибут с параметром `id:8229`, `type_id` будет использоваться в приоритете.\n"
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара:\n  - `0` — не облагается НДС,\n  - `0.05` — 5%,\n  - `0.07` — 7%,\n  - `0.1` — 10%,\n  - `0.2` — 20%.\n\nПередавайте значение ставки, актуальное на данный момент.\n"
            },
            "weight": {
              "type": "integer",
              "format": "int32",
              "description": "Вес товара в упаковке. Предельное значение — 1000 килограммов или конвертированная величина в других\nединицах измерения.\n"
            },
            "weight_unit": {
              "type": "string",
              "description": "Единица измерения веса:\n  - `g` — граммы,\n  - `kg` — килограммы,\n  - `lb` — фунты.\n"
            },
            "width": {
              "type": "integer",
              "format": "int32",
              "description": "Ширина упаковки."
            }
          },
          "required": [
            "description_category_id"
          ]
        },
        "v3ImportProductsRequest": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ImportProductsRequestItem"
              },
              "description": "Массив данных."
            }
          },
          "title": "object"
        },
        "v3ImportProductsResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на загрузку товаров."
            }
          },
          "description": "Результаты запроса."
        },
        "v3ImportProductsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3ImportProductsResponseResult"
            }
          }
        },
        "productGetImportProductsInfoRequest": {
          "required": [
            "task_id"
          ],
          "properties": {
            "task_id": {
              "format": "int64",
              "type": "integer",
              "description": "Код задачи на импорт товаров. Можно получить с помощью метода [/v3/product/import](#operation/ProductAPI_ImportProductsV3)."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1ItemError": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Техническое описание ошибки."
            },
            "state": {
              "type": "string",
              "description": "Состояние товара, в котором произошла ошибка."
            },
            "level": {
              "type": "string",
              "description": "Уровень ошибки."
            },
            "description": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "field": {
              "type": "string",
              "description": "Поле, в котором произошла ошибка."
            },
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Атрибут, в котором произошла ошибка."
            },
            "attribute_name": {
              "type": "string",
              "description": "Название атрибута, в котором произошла ошибка."
            }
          }
        },
        "GetImportProductsInfoResponseResultItem": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки в значении поля — 50 символов.\n"
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "status": {
              "type": "string",
              "description": "Статус создания или обновления товара. Информация о товаре обрабатывается очередями.\nВозможные значения параметра:\n- `pending` — товар в очереди на обработку;\n- `imported` — товар успешно загружен;\n- `failed` — товар загружен с ошибками;\n- `skipped` — товар не был обновлен, так как запрос не содержал изменений.\n"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1ItemError"
              },
              "description": "Массив ошибок."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetImportProductsInfoResponseResult": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/GetImportProductsInfoResponseResultItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "total": {
              "format": "int32",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetImportProductsInfoResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productGetImportProductsInfoResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsBySKURequestItem": {
          "required": [
            "sku"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара. До 500 символов."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (будет зачеркнута на карточке товара). Указывается в рублях. Разделитель дробной части — точка, до двух знаков после точки."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара. Если на товар нет скидок, укажите значение `old_price` в этом параметре."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара:\n  - `0` — не облагается НДС,\n  - `0.05` — 5%,\n  - `0.07` — 7%,\n  - `0.1` — 10%,\n  - `0.2` — 20%.\n\nПередавайте значение ставки, актуальное на данный момент.\n"
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsBySKURequest": {
          "properties": {
            "items": {
              "maxItems": 1000,
              "items": {
                "$ref": "#/components/schemas/productImportProductsBySKURequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsBySKUResponseResult": {
          "properties": {
            "task_id": {
              "format": "int64",
              "type": "integer",
              "description": "Код задачи на импорт товаров."
            },
            "unmatched_sku_list": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Список идентификаторов товаров в системе продавца — `product_id`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsBySKUResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productImportProductsBySKUResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1ProductUpdateAttributesRequestValue": {
          "type": "object",
          "title": "object",
          "properties": {
            "dictionary_value_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики в словаре."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          }
        },
        "v1ProductUpdateAttributesRequestAttribute": {
          "type": "object",
          "title": "object",
          "properties": {
            "complex_id": {
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. У каждой из вложенных характеристик может быть несколько вариантов значений.",
              "type": "integer",
              "format": "int64"
            },
            "id": {
              "description": "Идентификатор характеристики.",
              "type": "integer",
              "format": "int64"
            },
            "values": {
              "description": "Массив вложенных значений характеристики.",
              "items": {
                "$ref": "#/components/schemas/v1ProductUpdateAttributesRequestValue"
              }
            }
          }
        },
        "v1ProductUpdateAttributesRequestItem": {
          "required": [
            "offer_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "attributes": {
              "description": "Характеристики товара.",
              "items": {
                "$ref": "#/components/schemas/v1ProductUpdateAttributesRequestAttribute"
              }
            },
            "offer_id": {
              "description": "Идентификатор товара в системе продавца — артикул.",
              "type": "string"
            }
          }
        },
        "v1ProductUpdateAttributesRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "description": "Товары и характеристики, которые нужно обновить.",
              "items": {
                "$ref": "#/components/schemas/v1ProductUpdateAttributesRequestItem"
              }
            }
          }
        },
        "v1ProductUpdateAttributesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "description": "Номер задания на обновление товаров. \n\nЧтобы проверить статус обновления, передайте полученное значение в метод [/v1/product/import/info](#operation/ProductAPI_GetImportProductsInfo).\n",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "productv1ProductImportPicturesRequest": {
          "required": [
            "product_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "images": {
              "description": "Массив ссылок на изображения. \nИзображения в массиве расположены в порядке их расположения на сайте. \nПервое изображение в массиве будет главным.\n",
              "items": {
                "type": "string"
              }
            },
            "images360": {
              "items": {
                "type": "string"
              },
              "description": "Массив изображений 360. До 70 штук.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "productProductInfoPicturesResponsePicture": {
          "type": "object",
          "title": "object",
          "properties": {
            "is_360": {
              "type": "boolean",
              "description": "Признак, что картинка — изображение 360."
            },
            "is_color": {
              "type": "boolean",
              "description": "Признак, что картинка — образец цвета."
            },
            "is_primary": {
              "type": "boolean",
              "description": "Признак, что картинка — главное изображение."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "state": {
              "type": "string",
              "description": "Статус загрузки изображения. \n\nЕсли вызывали метод [/v1/product/pictures/import](#operation/ProductAPI_ProductImportPictures), то в ответе метода всегда будет `imported` — картинка не обработана.\nЧтобы посмотреть финальный статус, примерно через 10 секунд вызовите метод [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures).\n\nЕсли вызывали метод [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures), вы увидите один из статусов:\n- `uploaded` — изображение загружено;\n- `pending` — при загрузке изображения возникла ошибка. Повторите попытку позже.\n"
            },
            "url": {
              "description": "Адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG или PNG.",
              "type": "string"
            }
          }
        },
        "productv1ProductInfoPicturesResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "pictures": {
              "items": {
                "$ref": "#/components/schemas/productProductInfoPicturesResponsePicture"
              }
            }
          }
        },
        "productv1ProductInfoPicturesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv1ProductInfoPicturesResponseResult"
            }
          }
        },
        "productv3GetProductListRequestFilterFilterVisibility": {
          "default": "ALL",
          "enum": [
            "ALL",
            "VISIBLE",
            "INVISIBLE",
            "EMPTY_STOCK",
            "NOT_MODERATED",
            "MODERATED",
            "DISABLED",
            "STATE_FAILED",
            "READY_TO_SUPPLY",
            "VALIDATION_STATE_PENDING",
            "VALIDATION_STATE_FAIL",
            "VALIDATION_STATE_SUCCESS",
            "TO_SUPPLY",
            "IN_SALE",
            "REMOVED_FROM_SALE",
            "OVERPRICED",
            "CRITICALLY_OVERPRICED",
            "EMPTY_BARCODE",
            "BARCODE_EXISTS",
            "QUARANTINE",
            "ARCHIVED",
            "OVERPRICED_WITH_STOCK",
            "PARTIAL_APPROVED"
          ],
          "type": "string",
          "title": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n  - `ARCHIVED` — товары в архиве.\n  - `OVERPRICED_WITH_STOCK` — товары в продаже со стоимостью выше, чем у конкурентов.\n  - `PARTIAL_APPROVED` — товары в продаже с пустым или неполным описанием.\n"
        },
        "productv3GetProductListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Вы можете передавать список значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Вы можете передавать список значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/productv3GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv3GetProductListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv3GetProductListRequestFilter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. При первом запросе оставьте это поле пустым.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            }
          }
        },
        "productv3GetProductListResponseItemQuant": {
          "type": "object",
          "title": "object",
          "properties": {
            "quant_code": {
              "type": "string",
              "description": "Идентификатор эконом-товара."
            },
            "quant_size": {
              "type": "integer",
              "format": "int64",
              "description": "Размер кванта."
            }
          }
        },
        "productv3GetProductListResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "archived": {
              "type": "boolean",
              "description": "Товар в архиве."
            },
            "has_fbo_stocks": {
              "type": "boolean",
              "description": "Есть остатки на складах FBO."
            },
            "has_fbs_stocks": {
              "type": "boolean",
              "description": "Есть остатки на складах FBS."
            },
            "is_discounted": {
              "type": "boolean",
              "description": "Уценённый товар."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quants": {
              "description": "Список квантов.",
              "$ref": "#/components/schemas/productv3GetProductListResponseItemQuant"
            }
          }
        },
        "productv3GetProductListResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат.",
          "properties": {
            "items": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/productv3GetProductListResponseItem"
              }
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "description": "Всего товаров.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "productv3GetProductListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv3GetProductListResponseResult"
            }
          }
        },
        "v1GetProductRatingBySkuRequest": {
          "required": [
            "skus"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "skus": {
              "description": "Идентификаторы товаров в системе Ozon — SKU,  для которых нужно вернуть контент-рейтинг.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "GetProductRatingBySkuResponseRatingCondition": {
          "type": "object",
          "title": "object",
          "properties": {
            "cost": {
              "type": "number",
              "format": "float",
              "description": "Количество баллов контент-рейтинга, которое даёт выполнение условия."
            },
            "description": {
              "type": "string",
              "description": "Описание условия."
            },
            "fulfilled": {
              "type": "boolean",
              "description": "Признак, что условие выполнено."
            },
            "key": {
              "type": "string",
              "description": "Идентификатор условия."
            }
          }
        },
        "GetProductRatingBySkuResponseRatingImproveAttribute": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор атрибута."
            },
            "name": {
              "type": "string",
              "description": "Название атрибута."
            }
          }
        },
        "GetProductRatingBySkuResponseRatingGroup": {
          "type": "object",
          "title": "object",
          "properties": {
            "conditions": {
              "description": "Список условий, увеличивающих контент-рейтинг товара.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingCondition"
              }
            },
            "improve_at_least": {
              "type": "integer",
              "foramt": "int64",
              "description": "Количество атрибутов, которые нужно заполнить для получения максимального балла в этой группе характеристик."
            },
            "improve_attributes": {
              "description": "Cписок атрибутов, заполнение которых может увеличить контент-рейтинг товара.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingImproveAttribute"
              }
            },
            "key": {
              "type": "string",
              "description": "Идентификатор группы."
            },
            "name": {
              "type": "string",
              "description": "Название группы."
            },
            "rating": {
              "type": "number",
              "format": "float",
              "description": "Рейтинг в группе."
            },
            "weight": {
              "type": "number",
              "format": "float",
              "description": "Процент влияния характеристик группы на контент-рейтинг."
            }
          }
        },
        "GetProductRatingBySkuResponseProductRating": {
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара на Ozon."
            },
            "rating": {
              "type": "number",
              "format": "float",
              "description": "Контент-рейтинг товара: от 0 до 100.\n"
            },
            "groups": {
              "description": "Группы характеристик, из которых складывается контент-рейтинг.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingGroup"
              }
            }
          }
        },
        "v1GetProductRatingBySkuResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "products": {
              "description": "Контент-рейтинг товаров.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseProductRating"
              }
            }
          }
        },
        "v3GetProductInfoListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "offer_id": {
              "description": "Идентификатор товара в системе продавца — артикул.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "GetProductInfoListResponseCommission": {
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_amount": {
              "type": "number",
              "format": "double",
              "description": "Стоимость доставки."
            },
            "percent": {
              "type": "number",
              "format": "double",
              "description": "Процент комиссии."
            },
            "return_amount": {
              "description": "Стоимость возврата.",
              "type": "number",
              "format": "double"
            },
            "sale_schema": {
              "type": "string",
              "description": "Схема продажи."
            },
            "value": {
              "type": "number",
              "format": "double",
              "description": "Сумма комиссии."
            }
          }
        },
        "ErrorErrorLevel": {
          "type": "string",
          "title": "object",
          "default": "ERROR_LEVEL_UNSPECIFIED",
          "enum": [
            "ERROR_LEVEL_UNSPECIFIED",
            "ERROR_LEVEL_ERROR",
            "ERROR_LEVEL_WARNING",
            "ERROR_LEVEL_INTERNAL"
          ],
          "description": "Описание уровней ошибок: \n  - `ERROR_LEVEL_UNSPECIFIED` — не определён;\n  - `ERROR_LEVEL_ERROR` — критичная ошибка, товар нельзя продавать;\n  - `ERROR_LEVEL_INTERNAL` — критичная ошибка, товар нельзя продавать.\n  - `ERROR_LEVEL_WARNING` — некритичная ошибка, товар можно продавать.\n\n[Подробнее об ошибках при создании товара в Базе знаний продавца](https://seller-edu.ozon.ru/work-with-goods/zagruzka-tovarov/creating-goods/oshibki-pri-rabote-s-kartochkami)             \n"
        },
        "HumanTextsParam": {
          "type": "object",
          "title": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название параметра."
            },
            "value": {
              "type": "string",
              "description": "Значение параметра."
            }
          }
        },
        "ErrorHumanTexts": {
          "type": "object",
          "title": "object",
          "description": "Описание ошибок.",
          "properties": {
            "attribute_name": {
              "type": "string",
              "description": "Название атрибута, в котором произошла ошибка."
            },
            "description": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "hint_code": {
              "description": "Код ошибки в системе Ozon.",
              "type": "string"
            },
            "message": {
              "description": "Текст ошибки.",
              "type": "string"
            },
            "params": {
              "description": "В каких параметрах допущена ошибка.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HumanTextsParam"
              }
            },
            "short_description": {
              "description": "Краткое описание ошибки.",
              "type": "string"
            }
          }
        },
        "GetProductInfoListResponseError": {
          "type": "object",
          "title": "object",
          "properties": {
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор характеристики."
            },
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "field": {
              "type": "string",
              "description": "Поле, в котором найдена ошибка."
            },
            "level": {
              "$ref": "#/components/schemas/ErrorErrorLevel"
            },
            "state": {
              "type": "string",
              "description": "Статус товара, в котором произошла ошибка."
            },
            "texts": {
              "$ref": "#/components/schemas/ErrorHumanTexts"
            }
          }
        },
        "GetProductInfoListResponseModelInfo": {
          "type": "object",
          "title": "object",
          "description": "Информация о модели товара.",
          "properties": {
            "count": {
              "description": "Количество товаров в ответе.",
              "type": "integer",
              "format": "int64"
            },
            "model_id": {
              "description": "Идентификатор модели товара.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "PriceIndexesColorIndex": {
          "type": "string",
          "title": "string",
          "default": "COLOR_INDEX_UNSPECIFIED",
          "enum": [
            "COLOR_INDEX_UNSPECIFIED",
            "COLOR_INDEX_WITHOUT_INDEX",
            "COLOR_INDEX_GREEN",
            "COLOR_INDEX_YELLOW",
            "COLOR_INDEX_RED"
          ],
          "description": "Виды индекса цен:\n- `COLOR_INDEX_UNSPECIFIED` — не определён,\n- `COLOR_INDEX_WITHOUT_INDEX` — отсутствует,\n- `COLOR_INDEX_GREEN` — выгодный,\n- `COLOR_INDEX_YELLOW` — умеренный,\n- `COLOR_INDEX_RED` — невыгодный.\n\n[Подробнее об индексе цен в Базе знаний продавца](https://seller-edu.ozon.ru/ceny-i-akcii/rabota-s-cenami/price-index)\n"
        },
        "PriceIndexesIndexDataExternal": {
          "type": "object",
          "title": "object",
          "description": "Цена товара у конкурентов на других площадках.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на другой площадке."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexDataOzon": {
          "type": "object",
          "title": "object",
          "description": "Цена товара у конкурентов на Ozon.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на Ozon."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexDataSelf": {
          "type": "object",
          "title": "object",
          "description": "Цена вашего товара на других площадках.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена вашего товара на других площадках."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "GetProductInfoListResponsePriceIndexes": {
          "type": "object",
          "title": "object",
          "description": "Ценовые индексы товара.",
          "properties": {
            "color_index": {
              "$ref": "#/components/schemas/PriceIndexesColorIndex"
            },
            "external_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataExternal"
            },
            "ozon_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataOzon"
            },
            "self_marketplaces_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataSelf"
            }
          }
        },
        "SourceShipmentType": {
          "type": "string",
          "title": "string",
          "default": "SHIPMENT_TYPE_UNSPECIFIED",
          "enum": [
            "SHIPMENT_TYPE_UNSPECIFIED",
            "SHIPMENT_TYPE_GENERAL",
            "SHIPMENT_TYPE_BOX",
            "SHIPMENT_TYPE_PALLET"
          ],
          "description": "Тип упаковки:\n- `SHIPMENT_TYPE_UNSPECIFIED` — не указано;\n- `SHIPMENT_TYPE_GENERAL` — обычный товар;\n- `SHIPMENT_TYPE_BOX` — коробка;\n- `SHIPMENT_TYPE_PALLET` — палета.\n"
        },
        "GetProductInfoListResponseSource": {
          "type": "object",
          "title": "object",
          "properties": {
            "created_at": {
              "description": "Дата создания товара.",
              "type": "string",
              "format": "date-time"
            },
            "quant_code": {
              "description": "Список квантов с товарами.",
              "type": "string"
            },
            "shipment_type": {
              "$ref": "#/components/schemas/SourceShipmentType"
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара на Ozon — SKU."
            },
            "source": {
              "type": "string",
              "description": "Схема продажи:\n- `SDS` — FBO и FBS с одинаковым SKU;\n- `FBO`;\n- `FBS`.\n"
            }
          }
        },
        "GetProductInfoListResponseStatuses": {
          "type": "object",
          "title": "object",
          "description": "Информация о статусах товара.",
          "properties": {
            "is_created": {
              "description": "`true`, если товар создан корректно.\n",
              "type": "boolean"
            },
            "moderate_status": {
              "type": "string",
              "description": "Статус модерации."
            },
            "status": {
              "type": "string",
              "description": "Статус товара."
            },
            "status_description": {
              "type": "string",
              "description": "Описание статуса товара."
            },
            "status_failed": {
              "type": "string",
              "description": "Статус товара, в котором возникла ошибка."
            },
            "status_name": {
              "type": "string",
              "description": "Название статуса товара."
            },
            "status_tooltip": {
              "type": "string",
              "description": "Описание статуса."
            },
            "status_updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время последнего изменения статуса."
            },
            "validation_status": {
              "type": "string",
              "description": "Статус валидации."
            }
          }
        },
        "GetProductInfoListResponseStocksStock": {
          "type": "object",
          "title": "object",
          "properties": {
            "present": {
              "type": "integer",
              "format": "int32",
              "description": "Сейчас на складе."
            },
            "reserved": {
              "type": "integer",
              "format": "int32",
              "description": "Зарезервировано."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "source": {
              "type": "string",
              "description": "Схема продажи."
            }
          }
        },
        "GetProductInfoListResponseStocks": {
          "type": "object",
          "title": "object",
          "description": "Информация об остатках товара.",
          "properties": {
            "has_stock": {
              "type": "boolean",
              "description": "`true`, если есть остаток на складах.\n"
            },
            "stocks": {
              "description": "Статус остатков товара.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetProductInfoListResponseStocksStock"
              }
            }
          }
        },
        "GetProductInfoListResponseVisibilityDetails": {
          "type": "object",
          "title": "object",
          "description": "Настройки видимости товара.",
          "properties": {
            "has_price": {
              "type": "boolean",
              "description": "Если установлена цена — `true`."
            },
            "has_stock": {
              "type": "boolean",
              "description": "Если есть остаток на складах — `true`."
            }
          }
        },
        "v3GetProductInfoListResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "barcodes": {
              "description": "Все штрихкоды товара.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "color_image": {
              "description": "Изображение цвета товара.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "commissions": {
              "description": "Информация о комиссиях.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetProductInfoListResponseCommission"
              }
            },
            "created_at": {
              "description": "Дата и время создания товара.",
              "type": "string",
              "format": "date-time"
            },
            "currency_code": {
              "description": "Валюта.",
              "type": "string"
            },
            "description_category_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор категории.\nИспользуйте его с методами [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes) и [/v1/description-category/attribute/values](#operation/DescriptionCategoryAPI_GetAttributeValues).\n"
            },
            "discounted_fbo_stocks": {
              "type": "integer",
              "format": "int32",
              "description": "Остатки уценённого товара на складе Ozon."
            },
            "errors": {
              "description": "Информация об ошибках при создании или валидации товара.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetProductInfoListResponseError"
              }
            },
            "has_discounted_fbo_item": {
              "type": "boolean",
              "description": "Признак, что у товара есть уценённые аналоги на складе Ozon."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Массив ссылок на изображения. Изображения в массиве расположены в порядке их расположения на сайте. Если параметр\n`primary_image` не указан, первое изображение в массиве главное для товара.\n"
            },
            "images360": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Массив изображений 360."
            },
            "is_archived": {
              "type": "boolean",
              "description": "`true`, если товар архивирован вручную.\n"
            },
            "is_autoarchived": {
              "type": "boolean",
              "description": "`true`, если товар архивирован автоматически.\n"
            },
            "is_discounted": {
              "type": "boolean",
              "description": "Признак, является ли товар уценённым:\n  - Если товар создавался продавцом как уценённый — `true`. \n  - Если товар не уценённый или был уценён Ozon — `false`.\n"
            },
            "is_kgt": {
              "type": "boolean",
              "description": "Признак крупногабаритного товара."
            },
            "is_prepayment_allowed": {
              "description": "`true`, если возможна предоплата.\n",
              "type": "boolean"
            },
            "is_super": {
              "type": "boolean",
              "description": "Признак супер-товара.\n\n[Подробнее о супер-товарах в Базе знаний продавца](https://seller-edu.ozon.ru/fbo/rabota-so-stokom/super-tovary)\n"
            },
            "marketing_price": {
              "description": "Цена на товар с учётом всех акций, которая будет указана на витрине Ozon, без учёта скидки по Ozon Карте.",
              "type": "string"
            },
            "min_price": {
              "description": "Минимальная цена товара после применения акций.",
              "type": "string"
            },
            "model_info": {
              "$ref": "#/components/schemas/GetProductInfoListResponseModelInfo"
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "price_indexes": {
              "$ref": "#/components/schemas/GetProductInfoListResponsePriceIndexes"
            },
            "primary_image": {
              "description": "Главное изображение товара.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sources": {
              "description": "Информация об источниках создания товара.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetProductInfoListResponseSource"
              }
            },
            "statuses": {
              "$ref": "#/components/schemas/GetProductInfoListResponseStatuses"
            },
            "stocks": {
              "$ref": "#/components/schemas/GetProductInfoListResponseStocks"
            },
            "type_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор типа товара."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата последнего обновления товара."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара."
            },
            "visibility_details": {
              "$ref": "#/components/schemas/GetProductInfoListResponseVisibilityDetails"
            },
            "volume_weight": {
              "description": "Объёмный вес товара.",
              "type": "number",
              "format": "double"
            }
          }
        },
        "v3GetProductInfoListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "description": "Массив данных.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3GetProductInfoListResponseItem"
              }
            }
          }
        },
        "productv2GetProductListRequestFilterFilterVisibility": {
          "default": "ALL",
          "enum": [
            "ALL",
            "VISIBLE",
            "INVISIBLE",
            "EMPTY_STOCK",
            "NOT_MODERATED",
            "MODERATED",
            "DISABLED",
            "STATE_FAILED",
            "READY_TO_SUPPLY",
            "VALIDATION_STATE_PENDING",
            "VALIDATION_STATE_FAIL",
            "VALIDATION_STATE_SUCCESS",
            "TO_SUPPLY",
            "IN_SALE",
            "REMOVED_FROM_SALE",
            "OVERPRICED",
            "CRITICALLY_OVERPRICED",
            "EMPTY_BARCODE",
            "BARCODE_EXISTS",
            "QUARANTINE",
            "ARCHIVED",
            "OVERPRICED_WITH_STOCK",
            "PARTIAL_APPROVED"
          ],
          "type": "string",
          "title": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары, кроме архивных.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n  - `ARCHIVED` — товары в архиве.\n  - `OVERPRICED_WITH_STOCK` — товары в продаже со стоимостью выше, чем у конкурентов.\n  - `PARTIAL_APPROVED` — товары в продаже с пустым или неполным описанием.\n"
        },
        "productv4Filter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать список значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать до 1000 значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "sku": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "visibility": {
              "$ref": "#/components/schemas/productv2GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv4GetProductAttributesV4Request": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv4Filter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 1000,
              "description": "Количество значений на странице."
            },
            "sort_by": {
              "type": "string",
              "description": "Параметр, по которому товары будут отсортированы:\n- `sku` — сортировка по идентификатору товара в системе Ozon;\n- `offer_id` — сортировка по артикулу товара;\n- `id` — сортировка по идентификатору товара;\n- `title` — сортировка по названию товара.\n"
            },
            "sort_dir": {
              "type": "string",
              "description": "Направление сортировки:\n- `asc` — по возрастанию,\n- `desc` — по убыванию.\n"
            }
          }
        },
        "productGetProductAttributesV3ResponseDictionaryValue": {
          "properties": {
            "dictionary_value_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики в словаре."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetProductAttributesV4ResponseAttribute": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель» и «L2 Cache». У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "values": {
              "items": {
                "$ref": "#/components/schemas/productGetProductAttributesV3ResponseDictionaryValue"
              },
              "type": "array",
              "description": "Массив значений характеристик."
            }
          },
          "type": "object",
          "title": "object"
        },
        "GetProductAttributesV3ResponseDictionaryValue": {
          "properties": {
            "dictionaryValueId": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики в словаре."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          },
          "type": "object",
          "title": "object"
        },
        "GetProductAttributesV4ResponseAttribute": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель» и «L2 Cache». У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "values": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesV3ResponseDictionaryValue"
              },
              "type": "array",
              "description": "Массив значений характеристик."
            }
          },
          "type": "object",
          "title": "object"
        },
        "GetProductAttributesResponseImage": {
          "properties": {
            "default": {
              "type": "boolean",
              "description": "`true`, если изображение главное и отображается первым на карточке товара.\n"
            },
            "file_name": {
              "type": "string",
              "description": null
            },
            "index": {
              "format": "int64",
              "type": "integer",
              "description": null
            }
          },
          "type": "object",
          "title": "object"
        },
        "v4GetProductAttributesResponseModelInfo": {
          "properties": {
            "model_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор модели."
            },
            "count": {
              "format": "int64",
              "type": "integer",
              "description": "Количество объединённых товаров модели."
            }
          },
          "description": "Информация о модели.",
          "type": "object",
          "title": "object"
        },
        "v4GetProductAttributesResponsePdf": {
          "properties": {
            "file_name": {
              "type": "string",
              "description": "Путь к PDF-файлу."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv4GetProductAttributesV4ResponseResult": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/productGetProductAttributesV4ResponseAttribute"
              },
              "type": "array",
              "description": "Массив характеристик товара."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "barcodes": {
              "type": "array of strings",
              "description": "Все штрихкоды товара."
            },
            "description_category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории.\nИспользуйте его с методами [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes) и [/v1/description-category/attribute/values](#operation/DescriptionCategoryAPI_GetAttributeValues).\n"
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "complex_attributes": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesV4ResponseAttribute"
              },
              "type": "array",
              "description": "Массив вложенных характеристик."
            },
            "depth": {
              "format": "int64",
              "type": "integer",
              "description": "Глубина."
            },
            "dimension_unit": {
              "type": "string",
              "description": "Единица измерения габаритов:\n  - `mm` — миллиметры,\n  - `cm` — сантиметры,\n  - `in` — дюймы.\n"
            },
            "height": {
              "format": "int64",
              "type": "integer",
              "description": "Высота упаковки."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "images": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesResponseImage"
              },
              "type": "array of strings",
              "description": "Массив ссылок на изображения товара. Порядок изображений аналогичен порядку в карточке товаров."
            },
            "model_info": {
              "$ref": "#/components/schemas/v4GetProductAttributesResponseModelInfo"
            },
            "name": {
              "type": "string",
              "maxLength": 500,
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "pdf_list": {
              "items": {
                "$ref": "#/components/schemas/v4GetProductAttributesResponsePdf"
              },
              "type": "array",
              "description": "Массив PDF-файлов."
            },
            "primary_image": {
              "type": "string",
              "description": "Ссылка на главное изображение товара."
            },
            "sku": {
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "type_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор типа товара."
            },
            "weight": {
              "format": "int64",
              "type": "integer",
              "description": "Вес товара в упаковке."
            },
            "weight_unit": {
              "type": "string",
              "description": "Единица измерения веса."
            },
            "width": {
              "format": "int64",
              "type": "integer",
              "description": "Ширина упаковки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv4GetProductAttributesV4Response": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productv4GetProductAttributesV4ResponseResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, укажите полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "description": "Количество товаров в списке.",
              "type": "string",
              "format": "int64"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetProductInfoDescriptionRequest": {
          "oneOf": [
            {
              "title": "offer_id",
              "required": [
                "offer_id"
              ]
            },
            {
              "title": "product_id",
              "required": [
                "product_id"
              ]
            }
          ],
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetProductInfoDescriptionResponseProduct": {
          "properties": {
            "description": {
              "type": "string",
              "description": "Описание."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productGetProductInfoDescriptionResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productGetProductInfoDescriptionResponseProduct"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1Empty": {
          "type": "object",
          "title": "object"
        },
        "GetUploadQuotaResponseDailyCreate": {
          "type": "object",
          "title": "object",
          "description": "Суточный лимит на создание товаров.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно создать в сутки."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров создано за текущие сутки."
            }
          }
        },
        "GetUploadQuotaResponseDailyUpdate": {
          "type": "object",
          "title": "object",
          "description": "Суточный лимит на обновление товаров.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно обновить в сутки."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров обновлено за текущие сутки."
            }
          }
        },
        "GetUploadQuotaResponseTotal": {
          "type": "object",
          "title": "object",
          "description": "Лимит на ассортимент.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно создать в личном кабинете."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров уже создано."
            }
          }
        },
        "v4GetUploadQuotaResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "daily_create": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseDailyCreate"
            },
            "daily_update": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseDailyUpdate"
            },
            "total": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseTotal"
            }
          }
        },
        "ProductUpdateOfferIdRequestUpdateOfferId": {
          "required": [
            "new_offer_id",
            "offer_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "new_offer_id": {
              "type": "string",
              "description": "Новый артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "offer_id": {
              "type": "string",
              "description": "Старый артикул."
            }
          }
        },
        "v1ProductUpdateOfferIdRequest": {
          "required": [
            "update_offer_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "update_offer_id": {
              "description": "Список пар с новыми и старыми значениями артикулов.",
              "items": {
                "$ref": "#/components/schemas/ProductUpdateOfferIdRequestUpdateOfferId"
              }
            }
          }
        },
        "v1ProductUpdateOfferIdResponseError": {
          "type": "object",
          "title": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке."
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул товара, который не получилось изменить."
            }
          }
        },
        "v1ProductUpdateOfferIdResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "description": "Список ошибок.",
              "items": {
                "$ref": "#/components/schemas/v1ProductUpdateOfferIdResponseError"
              }
            }
          }
        },
        "productProductArchiveRequest": {
          "required": [
            "product_id"
          ],
          "properties": {
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Список идентификаторов товаров в системе продавца — `product_id`.  Вы можете передать до 100 идентификаторов за раз."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productBooleanResponse": {
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат обработки запроса. `true`, если запрос выполнен без ошибок."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productProductUnarchiveRequest": {
          "required": [
            "product_id"
          ],
          "properties": {
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Список идентификаторов товаров в системе продавца — `product_id`.  Вы можете передать до 100 идентификаторов за раз. \n\nВ сутки можно восстановить из архива не больше 10 товаров, которые были архивированы автоматически. \nЕсли указать больше в одном запросе, вернётся ошибка `restore quota is exceeded`. \nЛимит обновляется в 03:00 по московскому времени.\nНа разархивацию товаров, перенесённых в архив вручную, ограничений нет.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "DeleteProductsRequestProduct": {
          "required": [
            "offer_id"
          ],
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2DeleteProductsRequest": {
          "required": [
            "products"
          ],
          "properties": {
            "products": {
              "items": {
                "$ref": "#/components/schemas/DeleteProductsRequestProduct"
              },
              "type": "array",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "DeleteProductsResponseDeleteStatus": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Причина ошибки, которая возникла при обработке запроса."
            },
            "is_deleted": {
              "type": "boolean",
              "description": "Если запрос выполнен без ошибок и товары удалены — `true`."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2DeleteProductsResponse": {
          "properties": {
            "status": {
              "items": {
                "$ref": "#/components/schemas/DeleteProductsResponseDeleteStatus"
              },
              "type": "array",
              "description": "Статус обработки запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1ProductUploadDigitalCodesRequest": {
          "required": [
            "digital_codes",
            "product_id"
          ],
          "properties": {
            "digital_codes": {
              "description": "Цифровые коды активации.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseResult": {
          "properties": {
            "task_id": {
              "description": "Код задачи на загрузку кодов.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseResult"
            }
          }
        },
        "v1ProductUploadDigitalCodesRequestInfo": {
          "required": [
            "task_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор задачи на загрузку кодов активации, полученный в ответе метода [/v1/product/upload_digital_codes](#operation/ProductAPI_UploadDigitalCode)."
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseInfoResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Статус загрузки:\n  - `pending` — товар в очереди на обработку.\n  - `imported` — товар успешно загружен.\n  - `failed` — товар загружен с ошибками.\n"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseInfo": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseInfoResult"
            }
          }
        },
        "v1GetProductInfoSubscriptionRequest": {
          "required": [
            "skus"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "skus": {
              "description": "Список SKU, идентификаторов товара в системе Ozon.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1GetProductInfoSubscriptionResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество подписавшихся пользователей."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon, SKU."
            }
          }
        },
        "v1GetProductInfoSubscriptionResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetProductInfoSubscriptionResponseResult"
              }
            }
          }
        },
        "v1ProductGetRelatedSKURequest": {
          "required": [
            "sku"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "description": "Список SKU.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1ProductGetRelatedSKUResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "availability": {
              "type": "string",
              "description": "Признак доступности товара по SKU:\n- `HIDDEN` — скрыт;\n- `AVAILABLE` — доступен;\n- `UNAVAILABLE` — недоступен, SKU удалён.\n"
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время удаления."
            },
            "delivery_schema": {
              "type": "string",
              "description": "Схема доставки:\n- `SDS` - идентификатор единого Ozon SKU;\n- `FBO` - идентификатор товара, который продаётся со склада Ozon;\n- `FBS` - идентификатор товара, который продаётся со склада FBS;\n- `Crossborder` - идентификатор товара, который продаётся из-за границы.\n"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v1ProductGetRelatedSKUResponseError": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "sku": {
              "type": "integer",
              "description": "SKU, в котором произошла ошибка."
            },
            "message": {
              "type": "string",
              "description": "Текст ошибки."
            }
          }
        },
        "v1ProductGetRelatedSKUResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "description": "Информация о связанных SKU.",
              "items": {
                "$ref": "#/components/schemas/v1ProductGetRelatedSKUResponseItem"
              }
            },
            "errors": {
              "description": "Ошибки.",
              "items": {
                "$ref": "#/components/schemas/v1ProductGetRelatedSKUResponseError"
              }
            }
          }
        },
        "v2ProductInfoPicturesRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "description": "Список идентификаторов товаров в системе продавца — `product_id`.",
              "maxItems": 1000,
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          "required": [
            "product_id"
          ]
        },
        "v2ProductInfoPicturesResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "primary_photo": {
              "type": "array",
              "description": "Ссылка на главное изображение.",
              "items": {
                "type": "string"
              }
            },
            "photo": {
              "type": "array",
              "description": "Ссылки на фотографии товара.",
              "items": {
                "type": "string"
              }
            },
            "color_photo": {
              "type": "array",
              "description": "Ссылки на загруженные образцы цвета.",
              "items": {
                "type": "string"
              }
            },
            "photo_360": {
              "type": "array",
              "description": "Ссылки на изображения 360.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v2ProductInfoPicturesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "description": "Изображения товаров.",
              "items": {
                "$ref": "#/components/schemas/v2ProductInfoPicturesResponseItem"
              }
            }
          }
        },
        "v1Barcode": {
          "required": [
            "barcode",
            "sku"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Значение штрихкода. Не больше 100 символов."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v1AddBarcodeRequest": {
          "required": [
            "barcodes"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "barcodes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Barcode"
              },
              "description": "Список штрихкодов и товаров."
            }
          }
        },
        "v1AddBarcodeResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "error": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод, который не удалось привязать."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара, к которому не удалось привязать штрихкод."
            }
          }
        },
        "v1AddBarcodeResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1AddBarcodeResult"
              },
              "description": "Список ошибок."
            }
          }
        },
        "v1GenerateBarcodeRequest": {
          "required": [
            "product_ids"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификаторы товаров, для которых нужно создать штрихкод."
            }
          }
        },
        "v1GenerateBarcodeResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "error": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод, при создании которого произошла ошибка."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара, для которого не удалось создать штрихкод."
            }
          }
        },
        "v1GenerateBarcodeResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GenerateBarcodeResult"
              },
              "description": "Ошибки при создании штрихкода."
            }
          }
        },
        "productImportProductsStocksRequestStock": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "stock": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в наличии без учёта зарезервированных товаров."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsStocksRequest": {
          "properties": {
            "stocks": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksRequestStock"
              },
              "type": "array",
              "description": "Информация о товарах на складах."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsStocksResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsStocksResponseProcessResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "updated": {
              "type": "boolean",
              "description": "Если информации о товаре успешно обновлена — `true`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsStocksResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksResponseProcessResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2ProductsStocksRequestStock": {
          "required": [
            "product_id",
            "quant_size",
            "stock",
            "warehouse_id"
          ],
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quant_size": {
              "type": "integer",
              "format": "int64",
              "description": "Используйте параметр, если у обычного и эконом-товара совпадает артикул — `offer_id = quant_id`. Чтобы обновить количество:\n- обычного товара — передайте значение `1`;\n- эконом-товара — передайте размер его кванта.\n\nЕсли у обычного и эконом-товара разные артикулы, не передавайте параметр.\n"
            },
            "stock": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в наличии без учёта зарезервированных товаров."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада, полученный из метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2ProductsStocksRequest": {
          "required": [
            "stocks"
          ],
          "properties": {
            "stocks": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksRequestStock"
              },
              "type": "array",
              "description": "Информация о товарах на складах."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2ProductsStocksResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2ProductsStocksResponseResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quant_size": {
              "type": "integer",
              "format": "int64",
              "description": "Показывает, количество товара какого типа вы обновляете:\n- `1` — если обновляете остатки обычного товара;\n- размер кванта — если обновляете остатки эконом-товара.\n"
            },
            "updated": {
              "type": "boolean",
              "description": "Если запрос выполнен успешно и остатки обновлены — `true`."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv2ProductsStocksResponse": {
          "description": "Результаты запроса.",
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksResponseResult"
              },
              "type": "array"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v4Visibility": {
          "type": "string",
          "default": "ALL",
          "enum": [
            "ALL",
            "VISIBLE",
            "INVISIBLE",
            "EMPTY_STOCK",
            "NOT_MODERATED",
            "MODERATED",
            "DISABLED",
            "STATE_FAILED",
            "READY_TO_SUPPLY",
            "VALIDATION_STATE_PENDING",
            "VALIDATION_STATE_FAIL",
            "VALIDATION_STATE_SUCCESS",
            "TO_SUPPLY",
            "IN_SALE",
            "REMOVED_FROM_SALE",
            "BANNED",
            "OVERPRICED",
            "CRITICALLY_OVERPRICED",
            "EMPTY_BARCODE",
            "BARCODE_EXISTS",
            "QUARANTINE",
            "ARCHIVED",
            "OVERPRICED_WITH_STOCK",
            "PARTIAL_APPROVED"
          ],
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `BANNED` — заблокированные товары.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n  - `ARCHIVED` — товары в архиве.\n  - `OVERPRICED_WITH_STOCK` — товары в продаже со стоимостью выше, чем у конкурентов.\n  - `PARTIAL_APPROVED` — товары в продаже с пустым или неполным описанием.\n"
        },
        "FilterWithQuant": {
          "type": "object",
          "description": "Товары по тарифу «Эконом».",
          "properties": {
            "created": {
              "description": "Активные эконом-товары.",
              "type": "boolean"
            },
            "exists": {
              "description": "Эконом-товары во всех статусах.",
              "type": "boolean"
            }
          }
        },
        "v4GetProductInfoStocksRequestFilter": {
          "type": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать список значений.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать список значений.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/v4Visibility"
            },
            "with_quant": {
              "$ref": "#/components/schemas/FilterWithQuant"
            }
          }
        },
        "v4GetProductInfoStocksRequest": {
          "required": [
            "limit",
            "filter"
          ],
          "type": "object",
          "properties": {
            "cursor": {
              "description": "Указатель для выборки следующих данных.",
              "type": "string"
            },
            "filter": {
              "$ref": "#/components/schemas/v4GetProductInfoStocksRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            }
          }
        },
        "StockShipmentType": {
          "type": "string",
          "default": "SHIPMENT_TYPE_GENERAL",
          "enum": [
            "SHIPMENT_TYPE_GENERAL",
            "SHIPMENT_TYPE_BOX",
            "SHIPMENT_TYPE_PALLET"
          ],
          "description": "Тип упаковки:\n- `SHIPMENT_TYPE_GENERAL` — обычный товар;\n- `SHIPMENT_TYPE_BOX` — коробка;\n- `SHIPMENT_TYPE_PALLET` — палета.\n"
        },
        "GetProductInfoStocksResponseStock": {
          "type": "object",
          "properties": {
            "present": {
              "description": "Сейчас на складе.",
              "type": "integer",
              "format": "int32"
            },
            "reserved": {
              "description": "Зарезервировано.",
              "type": "integer",
              "format": "int32"
            },
            "shipment_type": {
              "$ref": "#/components/schemas/StockShipmentType"
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "type": "integer",
              "format": "int64"
            },
            "type": {
              "description": "Тип склада.",
              "type": "string"
            }
          }
        },
        "v4GetProductInfoStocksResponseItem": {
          "type": "object",
          "properties": {
            "offer_id": {
              "description": "Идентификатор товара в системе продавца — артикул.",
              "type": "string"
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            },
            "stocks": {
              "description": "Информация об остатках.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetProductInfoStocksResponseStock"
              }
            }
          }
        },
        "v4GetProductInfoStocksResponse": {
          "type": "object",
          "properties": {
            "cursor": {
              "description": "Указатель для выборки следующих данных.",
              "type": "string"
            },
            "items": {
              "description": "Информация о товарах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v4GetProductInfoStocksResponseItem"
              }
            },
            "total": {
              "description": "Количество уникальных товаров, для которых выводится информация об остатках.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "productsv1GetProductInfoStocksByWarehouseFbsRequest": {
          "required": [
            "sku"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "productsv1GetProductInfoStocksByWarehouseFbsResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "type": "integer",
              "format": "int64"
            },
            "present": {
              "description": "Общее количество товара на складе.",
              "type": "integer",
              "format": "int64"
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — артикул.",
              "type": "integer",
              "format": "int64"
            },
            "reserved": {
              "description": "Количество зарезервированных товаров на складе.",
              "type": "integer",
              "format": "int64"
            },
            "warehouse_id": {
              "description": "Идентификатор склада.",
              "type": "integer",
              "format": "int64"
            },
            "warehouse_name": {
              "description": "Название склада.",
              "type": "string"
            }
          }
        },
        "productsv1GetProductInfoStocksByWarehouseFbsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsResponseResult"
              }
            }
          }
        },
        "productImportProductsPricesRequestPrice": {
          "properties": {
            "auto_action_enabled": {
              "type": "string",
              "description": "Атрибут для включения и выключения автоматического применения к товару доступных акций Ozon:\n- `ENABLED` — включить;\n- `DISABLED` — выключить;\n- `UNKNOWN` — ничего не менять, передаётся по умолчанию.\n\nНапример, если ранее вы включили автодобавление и не хотите выключать его, передавайте `UNKNOWN`.\n\nЕсли вы передаёте `ENABLED` в этом параметре, установите значение минимальной цены в параметре `min_price`. Цена не опустится ниже минимальной.\n",
              "default": "UNKNOWN",
              "enum": [
                "UNKNOWN",
                "ENABLED",
                "DISABLED"
              ]
            },
            "auto_add_to_ozon_actions_list_enabled": {
              "type": "string",
              "description": "Атрибут для включения и выключения автодобавления товара в акции:\n- `ENABLED` — включить;\n- `DISABLED` — выключить;\n- `UNKNOWN` — ничего не менять, передаётся по умолчанию.\n\nНапример, если ранее вы включили автодобавление товара в акции и не хотите выключать его, передавайте `UNKNOWN`.\n",
              "default": "UNKNOWN",
              "enum": [
                "UNKNOWN",
                "ENABLED",
                "DISABLED"
              ]
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара после применения акций."
            },
            "min_price_for_auto_actions_enabled": {
              "type": "boolean",
              "description": "`true`, если Ozon учитывает минимальную цену при добавлении в акции. Если ничего не передать, изменений в статусе учёта цены не будет.\n"
            },
            "net_price": {
              "type": "string",
              "description": "Себестоимость товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (зачеркнута на карточке товара). Указывается в рублях. Разделитель дробной части — точка, до двух знаков после точки.\n\nЕсли на товар нет скидок, укажите значение `0` в этом поле, а текущую цену передайте в поле `price`.\n"
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара.\n\nЕсли значение параметра `old_price` больше 0, между `price` и `old_price` должна быть определённая разница.\nОна зависит от значения `price`.\n\n| Значение `price` | Минимальная разница |\n|---|---|\n| < 400 | 20 рублей |\n| 400–10 000 | 5% |\n| > 10 000 | 500 рублей |\n"
            },
            "price_strategy_enabled": {
              "type": "string",
              "description": "Атрибут для автоприменения стратегий цены:\n- `ENABLED` — включить;\n- `DISABLED` — выключить;\n- `UNKNOWN` — ничего не менять, передаётся по умолчанию.\n\nЕсли ранее вы включили автоприменение стратегий цены и не хотите выключать его, передавайте `UNKNOWN` в следующих запросах.\n\nЕсли вы передаёте `ENABLED` в этом параметре, установите значение минимальной цены в параметре `min_price`.\n\nЕсли вы передаёте `DISABLED` в этом параметре, товар удаляется из стратегии.\n",
              "default": "UNKNOWN",
              "enum": [
                "UNKNOWN",
                "ENABLED",
                "DISABLED"
              ]
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quant_size": {
              "type": "integer",
              "format": "int64",
              "description": "Используйте параметр, если у обычного и эконом-товара совпадает артикул — `offer_id = quant_id`. Чтобы обновить цену:\n- обычного товара — передайте значение `1`;\n- эконом-товара — передайте размер его кванта.\n\nЕсли у обычного и эконом-товара разные артикулы, не передавайте параметр.\n"
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара:\n  - `0` — не облагается НДС,\n  - `0.05` — 5%,\n  - `0.07` — 7%,\n  - `0.1` — 10%,\n  - `0.2` — 20%.\n\nПередавайте значение ставки, актуальное на данный момент.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsPricesRequest": {
          "properties": {
            "prices": {
              "maxItems": 1000,
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesRequestPrice"
              },
              "type": "array",
              "description": "Информация о ценах товаров."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsPricesResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsPricesResponseProcessResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "updated": {
              "type": "boolean",
              "description": "Если информации о товаре успешно обновлена — `true`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productImportProductsPricesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesResponseProcessResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productv5GetProductListRequestFilterFilterVisibility": {
          "default": "ALL",
          "enum": [
            "ALL",
            "VISIBLE",
            "INVISIBLE",
            "EMPTY_STOCK",
            "NOT_MODERATED",
            "MODERATED",
            "DISABLED",
            "STATE_FAILED",
            "READY_TO_SUPPLY",
            "VALIDATION_STATE_PENDING",
            "VALIDATION_STATE_FAIL",
            "VALIDATION_STATE_SUCCESS",
            "TO_SUPPLY",
            "IN_SALE",
            "REMOVED_FROM_SALE",
            "OVERPRICED",
            "CRITICALLY_OVERPRICED",
            "EMPTY_BARCODE",
            "BARCODE_EXISTS",
            "QUARANTINE",
            "ARCHIVED",
            "OVERPRICED_WITH_STOCK",
            "PARTIAL_APPROVED"
          ],
          "type": "string",
          "title": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n  - `ARCHIVED` — товары в архиве.\n  - `OVERPRICED_WITH_STOCK` — товары в продаже со стоимостью выше, чем у конкурентов.\n  - `PARTIAL_APPROVED` — товары в продаже с пустым или неполным описанием.\n"
        },
        "productv5Filter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать до 1000 значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать до 1000 значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/productv5GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv5GetProductInfoPricesV5Request": {
          "required": [
            "limit",
            "filter"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "filter": {
              "$ref": "#/components/schemas/productv5Filter"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 1000,
              "description": "Количество значений на странице."
            }
          }
        },
        "ItemCommissionsv5": {
          "type": "object",
          "title": "object",
          "description": "Информация о комиссиях.",
          "properties": {
            "fbo_deliv_to_customer_amount": {
              "format": "double",
              "type": "number",
              "description": "Последняя миля (FBO)."
            },
            "fbo_direct_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль до (FBO)."
            },
            "fbo_direct_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль от (FBO)."
            },
            "fbo_return_flow_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену (FBO)."
            },
            "fbs_deliv_to_customer_amount": {
              "format": "double",
              "type": "number",
              "description": "Последняя миля (FBS)."
            },
            "fbs_direct_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль до (FBS)."
            },
            "fbs_direct_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль от (FBS)."
            },
            "fbs_first_mile_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Максимальная комиссия за обработку отправления (FBS).\n\n[Подробнее о тарифах в Базе знаний продавца](https://seller-edu.ozon.ru/commissions-tariffs/commissions-tariffs-ozon/rashody-na-dop-uslugi#выезд-транспортного-средства-по-адресу-продавца-для-забора-отправлении-(pick-up))\n"
            },
            "fbs_first_mile_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Минимальная комиссия за обработку отправления (FBS).\n\n[Подробнее о тарифах в Базе знаний продавца](https://seller-edu.ozon.ru/commissions-tariffs/commissions-tariffs-ozon/rashody-na-dop-uslugi#выезд-транспортного-средства-по-адресу-продавца-для-забора-отправлении-(pick-up))\n"
            },
            "fbs_return_flow_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену, обработка отправления (FBS)."
            },
            "sales_percent_fbo": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии за продажу (FBO)."
            },
            "sales_percent_fbs": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии за продажу (FBS)."
            }
          }
        },
        "MarketingAction": {
          "properties": {
            "date_from": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала акции продавца."
            },
            "date_to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время окончания акции продавца."
            },
            "title": {
              "type": "string",
              "description": "Название акции продавца."
            },
            "value": {
              "type": "string",
              "description": "Скидка по акции продавца."
            }
          },
          "type": "object",
          "title": "object"
        },
        "ItemMarketing": {
          "properties": {
            "actions": {
              "items": {
                "$ref": "#/components/schemas/MarketingAction"
              },
              "type": "array",
              "description": "Маркетинговые акции продавца. Параметры `date_from`, `date_to`, `title` и `value` указываются для каждой акции продавца."
            },
            "current_period_from": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала текущего периода по всем действующим акциям."
            },
            "current_period_to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время окончания текущего периода по всем действующим акциям."
            },
            "ozon_actions_exist": {
              "type": "boolean",
              "description": "`true`, если к товару можно применить акцию за счёт Ozon.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Маркетинговые акции продавца."
        },
        "ItemPricev5": {
          "type": "object",
          "title": "object",
          "description": "Цена товара.",
          "properties": {
            "auto_action_enabled": {
              "type": "boolean",
              "description": "`true`, если автоприменение акций у товара включено.\n"
            },
            "auto_add_to_ozon_actions_list_enabled": {
              "type": "boolean",
              "description": "`true`, если автодобавление товара в акции включено.\n"
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "marketing_price": {
              "type": "number",
              "format": "double",
              "description": "Цена на товар с учётом всех акций, которая будет указана на витрине Ozon, без учёта скидки по Ozon Карте."
            },
            "marketing_seller_price": {
              "type": "number",
              "format": "double",
              "description": "Цена на товар с учётом акций продавца."
            },
            "min_price": {
              "type": "number",
              "format": "double",
              "description": "Минимальная цена товара после применения всех скидок."
            },
            "old_price": {
              "type": "number",
              "format": "double",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "Цена поставщика."
            },
            "vat": {
              "type": "number",
              "format": "double",
              "description": "Ставка НДС для товара."
            }
          }
        },
        "PriceIndexesIndexExternalData": {
          "type": "object",
          "title": "object",
          "description": "Цена товара у конкурентов на других площадках.",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на другой площадке."
            },
            "min_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexOzonData": {
          "type": "object",
          "title": "object",
          "description": "Цена товара у конкурентов на Ozon.",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на Ozon."
            },
            "min_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexSelfData": {
          "type": "object",
          "title": "object",
          "description": "Цена вашего товара на других площадках.",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "Минимальная цена вашего товара на других площадках."
            },
            "min_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "GetProductInfoPricesResponseItemPriceIndexes": {
          "type": "object",
          "title": "object",
          "description": "Индексы цены товара.\n\n[Подробнее об индексе цен в Базе знаний продавца](https://seller-edu.ozon.ru/seller-rating/metrics/price-index)\n",
          "properties": {
            "color_index": {
              "description": "Итоговый индекс цены товара:\n- `WITHOUT_INDEX` — нет индекса, \n- `GREEN` — выгодный,\n- `YELLOW` — умеренный, \n- `RED` — невыгодный.\n",
              "type": "string",
              "enum": [
                "WITHOUT_INDEX",
                "GREEN",
                "YELLOW",
                "RED"
              ],
              "default": "WITHOUT_INDEX"
            },
            "external_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexExternalData"
            },
            "ozon_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexOzonData"
            },
            "self_marketplaces_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexSelfData"
            }
          }
        },
        "productGetProductInfoPricesV5ResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "acquiring": {
              "type": "integer",
              "format": "int32",
              "description": "Максимальная комиссия за эквайринг.\n\n[Подробнее об эквайринге в Базе знаний продавца](https://seller-edu.ozon.ru/commissions-tariffs/commissions-tariffs-ozon/rashody-na-dop-uslugi#экваиринг)\n"
            },
            "commissions": {
              "$ref": "#/components/schemas/ItemCommissionsv5"
            },
            "marketing_actions": {
              "$ref": "#/components/schemas/ItemMarketing",
              "description": "Маркетинговые акции продавца."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "$ref": "#/components/schemas/ItemPricev5"
            },
            "price_indexes": {
              "$ref": "#/components/schemas/GetProductInfoPricesResponseItemPriceIndexes"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "volume_weight": {
              "type": "number",
              "format": "double",
              "description": "Объёмный вес товара."
            }
          }
        },
        "productv5GetProductInfoPricesV5Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "items": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/productGetProductInfoPricesV5ResponseItem"
              }
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров в списке."
            }
          }
        },
        "v1GetProductInfoDiscountedRequest": {
          "required": [
            "discounted_skus"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "discounted_skus": {
              "description": "Список SKU уценённых товаров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1GetProductInfoDiscountedResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "comment_reason_damaged": {
              "type": "string",
              "description": "Комментарий к причине повреждения."
            },
            "condition": {
              "type": "string",
              "description": "Состояние товара — новый или Б/У."
            },
            "condition_estimation": {
              "type": "string",
              "description": "Состояние товара по шкале от 1 до 7:\n- 1 — удовлетворительное,\n- 2 — хорошее,\n- 3 — очень хорошее,\n- 4 — отличное,\n- 5–7 — как новый.\n"
            },
            "defects": {
              "type": "string",
              "description": "Дефекты товара."
            },
            "discounted_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU уценённого товара."
            },
            "mechanical_damage": {
              "type": "string",
              "description": "Описание механического повреждения."
            },
            "package_damage": {
              "type": "string",
              "description": "Описание повреждения упаковки."
            },
            "packaging_violation": {
              "type": "string",
              "description": "Признак нарушения целостности упаковки."
            },
            "reason_damaged": {
              "type": "string",
              "description": "Причина повреждения."
            },
            "repair": {
              "type": "string",
              "description": "Признак, что товар отремонтирован."
            },
            "shortage": {
              "type": "string",
              "description": "Признак, что товар некомплектный."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU основного товара."
            },
            "warranty_type": {
              "type": "string",
              "description": "Наличие у товара действующей гарантии."
            }
          }
        },
        "v1GetProductInfoDiscountedResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "description": "Информация об уценке и основном товаре.",
              "items": {
                "$ref": "#/components/schemas/v1GetProductInfoDiscountedResponseItem"
              }
            }
          }
        },
        "v1ProductUpdateDiscountRequest": {
          "required": [
            "discount",
            "product_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "discount": {
              "type": "integer",
              "format": "int32",
              "description": "Размер скидки: от 3 до 99 процентов.\n"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "v1ProductUpdateDiscountResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода. `true`, если запрос выполнен без ошибок."
            }
          }
        },
        "GetSellerActionsV1ResponseAction": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции."
            },
            "title": {
              "type": "string",
              "description": "Название акции."
            },
            "action_type": {
              "type": "string",
              "description": "Тип акции."
            },
            "description": {
              "type": "string",
              "description": "Описание акции."
            },
            "date_start": {
              "type": "string",
              "description": "Дата начала акции."
            },
            "date_end": {
              "type": "string",
              "description": "Дата окончания акции."
            },
            "freeze_date": {
              "type": "string",
              "description": "Дата приостановки акции.\n\nЕсли поле заполнено, продавец не может повышать цены, изменять список товаров и уменьшать количество единиц товаров в акции.\n\nПродавец может понижать цены и увеличивать количество единиц товара в акции.\n"
            },
            "potential_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество товаров, доступных для акции."
            },
            "participating_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество товаров, которые участвуют в акции."
            },
            "is_participating": {
              "type": "boolean",
              "description": "Участвуете вы в этой акции или нет."
            },
            "is_voucher_action": {
              "type": "boolean",
              "description": "Признак, что для участия в акции покупателям нужен промокод."
            },
            "banned_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество заблокированных товаров."
            },
            "with_targeting": {
              "type": "boolean",
              "description": "Признак, что акция с целевой аудиторией."
            },
            "order_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма заказа."
            },
            "discount_type": {
              "type": "string",
              "description": "Тип скидки."
            },
            "discount_value": {
              "type": "number",
              "format": "double",
              "description": "Размер скидки."
            }
          }
        },
        "seller_apiGetSellerActionsV1Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetSellerActionsV1ResponseAction"
              },
              "description": "Результаты запроса."
            }
          }
        },
        "seller_apiGetSellerProductV1Request": {
          "required": [
            "action_id",
            "offset"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции. Можно получить с помощью метода [/v1/actions](#operation/Promos)."
            },
            "limit": {
              "type": "number",
              "format": "double",
              "description": "Количество ответов на странице. По умолчанию — 100."
            },
            "offset": {
              "type": "number",
              "format": "double",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента.",
              "deprecated": true
            },
            "last_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор последнего значения на странице. При первом запросе оставьте это поле пустым."
            }
          },
          "description": "Список товаров."
        },
        "seller_apiProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Текущая цена товара без скидки."
            },
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "max_action_price": {
              "type": "number",
              "format": "double",
              "description": "Максимально возможная цена товара по акции."
            },
            "add_mode": {
              "type": "string",
              "description": "Тип добавления товара в акцию: автоматически или вручную продавцом.\n"
            },
            "min_stock": {
              "type": "number",
              "format": "double",
              "description": "Минимальное число единиц товара в акции типа «Скидка на сток»."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Число единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "seller_apiGetSellerProductV1ResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProduct"
              },
              "description": "Список товаров."
            },
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общее количество товаров, которое доступно для акции."
            },
            "last_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор последнего значения на странице. Чтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiGetSellerProductV1Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiGetSellerProductV1ResponseResult"
            }
          }
        },
        "seller_apiProductPrice": {
          "required": [
            "product_id",
            "action_price"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Количество единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "seller_apiActivateProductV1Request": {
          "required": [
            "action_id",
            "products"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции. Можно получить с помощью метода [/v1/actions](#operation/Promos)."
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductPrice"
              },
              "description": "Список товаров."
            }
          }
        },
        "seller_apiProductV1ResponseProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не добавлен в акцию."
            }
          }
        },
        "seller_apiProductV1ResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров, которые добавлены в акцию."
            },
            "rejected": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductV1ResponseProduct"
              },
              "description": "Список товаров, которые не удалось добавить в акцию."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiProductV1Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiProductV1ResponseResult"
            }
          }
        },
        "seller_apiProductIDsV1Request": {
          "required": [
            "action_id",
            "product_ids"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции. Можно получить с помощью метода [/v1/actions](#operation/Promos)."
            },
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров в системе продавца — `product_id`."
            }
          }
        },
        "seller_apiProductV1ResponseProductDeactivate": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не удалён из акции."
            }
          }
        },
        "seller_apiProductV1ResponseResultDeactivate": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров, которые удалены из акции."
            },
            "rejected": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductV1ResponseProductDeactivate"
              },
              "description": "Список товаров, которые не удалось удалить из акции."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiProductV1ResponseDeactivate": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiProductV1ResponseResultDeactivate"
            }
          }
        },
        "v1DiscountTaskStatus": {
          "type": "string",
          "default": "UNKNOWN",
          "enum": [
            "NEW",
            "SEEN",
            "APPROVED",
            "PARTLY_APPROVED",
            "DECLINED",
            "AUTO_DECLINED",
            "DECLINED_BY_USER",
            "COUPON",
            "PURCHASED"
          ],
          "description": "Статус заявки на скидку:\n- `NEW` — новая,\n- `SEEN` — просмотренная,\n- `APPROVED` — одобренная,\n- `PARTLY_APPROVED` — одобренная частично,\n- `DECLINED` — отклонённая,\n- `AUTO_DECLINED` — отклонена автоматически,\n- `DECLINED_BY_USER` — отклонена покупателем,\n- `COUPON` — скидка по купону,\n- `PURCHASED` — купленная.\n"
        },
        "v1GetDiscountTaskListRequest": {
          "required": [
            "status",
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/v1DiscountTaskStatus"
            },
            "page": {
              "type": "integer",
              "format": "uint64",
              "description": "Страница, с которой нужно выгрузить список заявок на скидку."
            },
            "limit": {
              "type": "integer",
              "format": "uint64",
              "description": "Максимальное количество заявок на странице."
            }
          }
        },
        "v1GetDiscountTaskListResponseTask": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки."
            },
            "end_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время окончания действия заявки."
            },
            "edited_till": {
              "type": "string",
              "format": "date-time",
              "description": "Время для изменения решения."
            },
            "status": {
              "type": "string",
              "description": "Статус заявки."
            },
            "customer_name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "sku": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "user_comment": {
              "type": "string",
              "description": "Комментарий покупателя к заявке."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            },
            "requested_price": {
              "type": "number",
              "format": "double",
              "description": "Цена по заявке."
            },
            "approved_price": {
              "type": "number",
              "format": "double",
              "description": "Одобренная цена."
            },
            "original_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара до всех скидок."
            },
            "discount": {
              "type": "number",
              "format": "double",
              "description": "Скидка в рублях."
            },
            "discount_percent": {
              "type": "number",
              "format": "double",
              "description": "Скидка в процентах."
            },
            "base_price": {
              "type": "number",
              "format": "double",
              "description": "Базовая цена, по которой товар продаётся на Ozon, если не участвует в акции."
            },
            "min_auto_price": {
              "type": "number",
              "format": "double",
              "description": "Минимальное значение цены после автоприменения скидок и акций."
            },
            "prev_task_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор предыдущей заявки от покупателя по этому товару."
            },
            "is_damaged": {
              "type": "boolean",
              "description": "Является ли товар уценённым. `true`, если уценённый."
            },
            "moderated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата модерации: просмотра, одобрения или отклонения заявки.\n"
            },
            "approved_discount": {
              "type": "number",
              "format": "double",
              "description": "Скидка в рублях, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку."
            },
            "approved_discount_percent": {
              "type": "number",
              "format": "double",
              "description": "Скидка в процентах, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку."
            },
            "is_purchased": {
              "type": "boolean",
              "description": "Покупал ли пользователь товар. `true`, если покупал."
            },
            "is_auto_moderated": {
              "type": "boolean",
              "description": "Была ли заявка промодерирована автоматически. `true`, если модерация была автоматической."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "email": {
              "type": "string",
              "description": "Электронный адрес сотрудника продавца, который обработал заявку."
            },
            "last_name": {
              "type": "string",
              "description": "Фамилия сотрудника продавца, который обработал заявку."
            },
            "first_name": {
              "type": "string",
              "description": "Имя сотрудника продавца, который обработал заявку."
            },
            "patronymic": {
              "type": "string",
              "description": "Отчество сотрудника продавца, который обработал заявку."
            },
            "approved_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Минимальное одобренное количество товаров."
            },
            "approved_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Максимальное одобренное количество товаров."
            },
            "requested_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Запрошенное минимальное количество товаров."
            },
            "requested_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Запрошенное максимальное количество товаров."
            },
            "requested_price_with_fee": {
              "type": "number",
              "format": "double",
              "description": "Цена по заявке c региональной наценкой."
            },
            "approved_price_with_fee": {
              "type": "number",
              "format": "double",
              "description": "Одобренная цена с региональной наценкой."
            },
            "approved_price_fee_percent": {
              "type": "number",
              "format": "double",
              "description": "Региональная наценка в процентах."
            }
          }
        },
        "v1GetDiscountTaskListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetDiscountTaskListResponseTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "v1ApproveDiscountTasksRequestTask": {
          "required": [
            "id",
            "approved_price",
            "approved_quantity_min",
            "approved_quantity_max"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки. Можно получить с помощью метода [/v1/actions/discounts-task/list](#operation/promos_task_list)."
            },
            "approved_price": {
              "type": "number",
              "format": "double",
              "description": "Согласованная цена."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            },
            "approved_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Одобренное минимальное количество товаров."
            },
            "approved_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Одобренное максимальное количество товаров."
            }
          }
        },
        "v1ApproveDiscountTasksRequest": {
          "required": [
            "tasks"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1ApproveDiscountTasksRequestTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "ApproveDeclineDiscountTasksResponseFailDetail": {
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "error_for_user": {
              "type": "string",
              "description": "Текст ошибки."
            }
          }
        },
        "v1ApproveDeclineDiscountTasksResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "fail_details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ApproveDeclineDiscountTasksResponseFailDetail"
              },
              "description": "Ошибки при создании заявки."
            },
            "success_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок с успешной сменой статуса."
            },
            "fail_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок, у которых не удалось сменить статус."
            }
          },
          "description": "Результат работы метода."
        },
        "v1ApproveDeclineDiscountTasksResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponseResult"
            }
          }
        },
        "v1DeclineDiscountTasksRequestTask": {
          "required": [
            "id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            }
          }
        },
        "v1DeclineDiscountTasksRequest": {
          "required": [
            "tasks"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1DeclineDiscountTasksRequestTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "v1GetCompetitorsRequest": {
          "required": [
            "page",
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int64",
              "description": "Страница списка, с которой нужно выгрузить конкурентов. Минимальное значение — `1`."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество конкурентов на странице. Допустимы значения от `1` до `50`."
            }
          }
        },
        "GetCompetitorsResponseCompetitorInfo": {
          "type": "object",
          "title": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название конкурента."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            }
          }
        },
        "v1GetCompetitorsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "competitor": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetCompetitorsResponseCompetitorInfo"
              },
              "description": "Список конкурентов."
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество конкурентов."
            }
          }
        },
        "v1GetStrategyListRequest": {
          "required": [
            "page",
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int64",
              "description": "Страница списка, с которой нужно выгрузить стратегии. Минимальное значение — `1`."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество стратегий на странице. Допустимые значения — от `1` до `50`."
            }
          }
        },
        "GetStrategyListResponseStrategy": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            },
            "name": {
              "type": "string",
              "description": "Название стратегии."
            },
            "type": {
              "type": "string",
              "description": "Тип стратегии:\n- `MIN_EXT_PRICE` — системная,\n- `COMP_PRICE` — пользовательская.\n"
            },
            "update_type": {
              "type": "string",
              "description": "Тип последнего изменения стратегии:\n- `strategyEnabled` — возобновлена,\n- `strategyDisabled` — остановлена,\n- `strategyChanged` — обновлена,\n- `strategyCreated` — создана,\n- `strategyItemsListChanged` — изменён набор товаров в стратегии.\n"
            },
            "updated_at": {
              "type": "string",
              "description": "Дата последнего изменения."
            },
            "products_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товаров в стратегии."
            },
            "competitors_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество выбранных конкурентов."
            },
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            }
          }
        },
        "v1GetStrategyListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "strategies": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetStrategyListResponseStrategy"
              },
              "description": "Список стратегий."
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество стратегий."
            }
          }
        },
        "v1Competitor": {
          "required": [
            "coefficient",
            "competitor_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "coefficient": {
              "type": "number",
              "format": "float",
              "description": "Коэффициент, на который будет умножаться минимальная цена среди конкурентов. Допустимый диапазон — от `0.5` до `1.2`."
            },
            "competitor_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            }
          }
        },
        "v1CreatePricingStrategyRequest": {
          "required": [
            "competitors",
            "strategy_name"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "strategy_name": {
              "type": "string",
              "description": "Название стратегии."
            }
          }
        },
        "v1CreatePricingStrategyResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "v1CreatePricingStrategyResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1CreatePricingStrategyResponseResult"
            }
          }
        },
        "v1StrategyRequest": {
          "required": [
            "strategy_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "v1GetStrategyResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            },
            "name": {
              "type": "string",
              "description": "Название стратегии."
            },
            "type": {
              "type": "string",
              "description": "Тип стратегии:\n- `MIN_EXT_PRICE` — системная стратегия,\n- `COMP_PRICE` — пользовательская стратегия.\n"
            },
            "update_type": {
              "type": "string",
              "description": "Тип последнего изменения стратегии:\n  - `strategyEnabled` — возобновлена,\n  - `strategyDisabled` — остановлена,\n  - `strategyChanged` — обновлена,\n  - `strategyCreated` — создана,\n  - `strategyItemsListChanged` — изменён набор товаров в стратегии.\n"
            }
          }
        },
        "v1GetStrategyResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyResponseResult"
            }
          }
        },
        "v1UpdatePricingStrategyRequest": {
          "required": [
            "competitors",
            "strategy_id",
            "strategy_name"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            },
            "strategy_name": {
              "type": "string",
              "description": "Название стратегии."
            }
          }
        },
        "v1AddStrategyItemsRequest": {
          "required": [
            "product_id",
            "strategy_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров в системе продавца — `product_id`. Максимальное количество — 50."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "AddStrategyItemsResponseError": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "error": {
              "type": "string",
              "description": "Текст ошибки."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "v1AddStrategyItemsResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AddStrategyItemsResponseError"
              },
              "description": "Товары с ошибками."
            },
            "failed_product_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров с ошибками."
            }
          }
        },
        "v1AddStrategyItemsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1AddStrategyItemsResponseResult"
            }
          }
        },
        "v1ItemIDsRequest": {
          "required": [
            "product_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров в системе продавца — `product_id`. Максимальное количество — 50."
            }
          }
        },
        "GetStrategyIDsByItemIDsResponseProductInfo": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии, в которую добавлен товар."
            }
          }
        },
        "v1GetStrategyIDsByItemIDsResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "products_info": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetStrategyIDsByItemIDsResponseProductInfo"
              },
              "description": "Информация о товаре."
            }
          }
        },
        "v1GetStrategyIDsByItemIDsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyIDsByItemIDsResponseResult"
            }
          }
        },
        "v1GetStrategyItemsResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Список товаров.",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "v1GetStrategyItemsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyItemsResponseResult"
            }
          }
        },
        "v1GetStrategyItemInfoRequest": {
          "required": [
            "product_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "v1GetStrategyItemInfoResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            },
            "is_enabled": {
              "type": "boolean",
              "description": "`true`, если товар участвует в стратегии ценообразования.\n"
            },
            "strategy_product_price": {
              "type": "integer",
              "format": "int32",
              "description": "Цена по стратегии."
            },
            "price_downloaded_at": {
              "type": "string",
              "description": "Дата установки цены по стратегии."
            },
            "strategy_competitor_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            },
            "strategy_competitor_product_url": {
              "type": "string",
              "description": "Ссылка на товар конкурента."
            }
          }
        },
        "v1GetStrategyItemInfoResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyItemInfoResponseResult"
            }
          }
        },
        "v1DeleteStrategyItemsResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "failed_product_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров с ошибками."
            }
          }
        },
        "v1DeleteStrategyItemsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1DeleteStrategyItemsResponseResult"
            }
          }
        },
        "v1UpdateStatusStrategyRequest": {
          "required": [
            "strategy_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "ArrivalPassListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтры.",
          "properties": {
            "arrival_pass_ids": {
              "type": "array",
              "description": "Фильтр по идентификатору пропуска.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "arrival_reason": {
              "type": "string",
              "description": "Фильтр по цели въезда:\n- `FBS_DELIVERY` — отгрузка.\n- `FBS_RETURN` — вывоз возвратов.\n\nЕсли параметр не указан, учитываются обе цели.\n\nУказанная причина должна быть в списке причин в пропусках.\n"
            },
            "dropoff_point_ids": {
              "type": "array",
              "description": "Фильтр по точке отгрузки.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "only_active_passes": {
              "type": "boolean",
              "description": "`true`, чтобы получить только активные заявки на пропуск.\n"
            },
            "warehouse_ids": {
              "type": "array",
              "description": "Фильтр по складу продавца. Можно получить с помощью метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList).",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "arrivalpassArrivalPassListRequest": {
          "required": [
            "limit"
          ],
          "type": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "filter": {
              "$ref": "#/components/schemas/ArrivalPassListRequestFilter"
            },
            "limit": {
              "type": "integer",
              "description": "Ограничение по количеству записей в ответе.\nПо умолчанию — 1000. Максимум — 1000.\n",
              "format": "int32"
            }
          }
        },
        "arrivalpassArrivalPassListResponseArrivalPass": {
          "type": "object",
          "title": "object",
          "properties": {
            "arrival_pass_id": {
              "type": "integer",
              "description": "Идентификатор пропуска.",
              "format": "int64"
            },
            "arrival_reasons": {
              "type": "array",
              "description": "Цель приезда.",
              "items": {
                "type": "string"
              }
            },
            "arrival_time": {
              "type": "string",
              "description": "Дата и время въезда в формате UTC.",
              "format": "date-time"
            },
            "driver_name": {
              "type": "string",
              "description": "ФИО водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Номер телефона водителя."
            },
            "dropoff_point_id": {
              "type": "integer",
              "description": "Идентификатор точки отгрузки.",
              "format": "int64"
            },
            "is_active": {
              "type": "boolean",
              "description": "`true`, если заявка активна.\n"
            },
            "vehicle_license_plate": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "warehouse_id": {
              "type": "integer",
              "description": "Идентификатор склада продавца.",
              "format": "int64"
            }
          }
        },
        "arrivalpassArrivalPassListResponse": {
          "type": "object",
          "properties": {
            "arrival_passes": {
              "type": "array",
              "description": "Список пропусков для перевозки.",
              "items": {
                "$ref": "#/components/schemas/arrivalpassArrivalPassListResponseArrivalPass"
              }
            },
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных.\nЕсли параметр пустой, данных больше нет.\n"
            }
          }
        },
        "sellerSellerAPIArrivalPassCreateRequestArrivalPass": {
          "required": [
            "driver_name",
            "driver_phone",
            "vehicle_license_plate",
            "vehicle_model"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "driver_name": {
              "type": "string",
              "description": "ФИО водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Номер телефона водителя."
            },
            "vehicle_license_plate": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "with_returns": {
              "type": "boolean",
              "description": "`true`, если будете вывозить возвраты. По умолчанию — `false`.\n"
            }
          }
        },
        "sellerSellerAPIArrivalPassCreateRequest": {
          "required": [
            "arrival_passes",
            "carriage_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "arrival_passes": {
              "type": "array",
              "description": "Список пропусков.",
              "items": {
                "$ref": "#/components/schemas/sellerSellerAPIArrivalPassCreateRequestArrivalPass"
              }
            },
            "carriage_id": {
              "type": "integer",
              "description": "Идентификатор перевозки.",
              "format": "int64"
            }
          }
        },
        "sellerSellerAPIArrivalPassCreateResponse": {
          "type": "object",
          "title": "object",
          "description": "Результат запроса.",
          "properties": {
            "arrival_pass_ids": {
              "type": "array",
              "description": "Идентификаторы пропусков.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "sellerSellerAPIArrivalPassUpdateRequestArrivalPass": {
          "required": [
            "driver_name",
            "driver_phone",
            "id",
            "vehicle_license_plate",
            "vehicle_model"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "driver_name": {
              "type": "string",
              "description": "ФИО водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Номер телефона водителя."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор пропуска."
            },
            "vehicle_license_plate": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "with_returns": {
              "type": "boolean",
              "description": "`true`, если будете вывозить возвраты. По умолчанию — `false`.\n"
            }
          }
        },
        "sellerSellerAPIArrivalPassUpdateRequest": {
          "required": [
            "arrival_passes",
            "carriage_id"
          ],
          "type": "object",
          "properties": {
            "arrival_passes": {
              "type": "array",
              "description": "Список пропусков.",
              "items": {
                "$ref": "#/components/schemas/sellerSellerAPIArrivalPassUpdateRequestArrivalPass"
              }
            },
            "carriage_id": {
              "type": "integer",
              "description": "Идентификатор перевозки.",
              "format": "int64"
            }
          }
        },
        "sellerSellerAPIArrivalPassDeleteRequest": {
          "required": [
            "arrival_pass_ids",
            "carriage_id"
          ],
          "type": "object",
          "properties": {
            "arrival_pass_ids": {
              "type": "array",
              "description": "Идентификаторы пропусков.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "carriage_id": {
              "type": "integer",
              "description": "Идентификатор перевозки.",
              "format": "int64"
            }
          }
        },
        "arrivalpassArrivalPassCreateRequestArrivalPass": {
          "required": [
            "arrival_time",
            "driver_name",
            "driver_phone",
            "dropoff_point_id",
            "vehicle_license_plate",
            "vehicle_model",
            "warehouse_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "arrival_time": {
              "type": "string",
              "description": "Время прибытия в формате UTC. \nВ это время пропуск начнёт действовать.\n",
              "format": "date-time"
            },
            "driver_name": {
              "type": "string",
              "description": "ФИО водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Номер телефона водителя."
            },
            "dropoff_point_id": {
              "type": "integer",
              "description": "Идентификатор склада, на который оформляется пропуск.",
              "format": "int64"
            },
            "vehicle_license_plate": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "warehouse_id": {
              "type": "integer",
              "description": "Идентификатор склада продавца. Можно получить с помощью метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList).",
              "format": "int64"
            }
          }
        },
        "arrivalpassArrivalPassCreateRequest": {
          "required": [
            "arrival_passes"
          ],
          "type": "object",
          "properties": {
            "arrival_passes": {
              "type": "array",
              "description": "Список пропусков.",
              "items": {
                "$ref": "#/components/schemas/arrivalpassArrivalPassCreateRequestArrivalPass"
              }
            }
          }
        },
        "arrivalpassArrivalPassCreateResponse": {
          "type": "object",
          "properties": {
            "arrival_pass_ids": {
              "type": "array",
              "description": "Идентификаторы пропусков.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "arrivalpassArrivalPassUpdateRequestArrivalPass": {
          "required": [
            "arrival_pass_id",
            "arrival_time",
            "driver_name",
            "driver_phone",
            "vehicle_license_plate",
            "vehicle_model"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "arrival_pass_id": {
              "type": "integer",
              "description": "Идентификатор пропуска.",
              "format": "int64"
            },
            "arrival_time": {
              "type": "string",
              "description": "Время прибытия в формате UTC.\nВ это время начнёт действовать пропуск.\n\nЧтобы изменить время прибытия, используйте метод [/v1/carriage/pass/update](#operation/carriagePassUpdate).\n",
              "format": "date-time"
            },
            "driver_name": {
              "type": "string",
              "description": "ФИО водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Номер телефона водителя."
            },
            "vehicle_license_plate": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            }
          }
        },
        "arrivalpassArrivalPassUpdateRequest": {
          "required": [
            "arrival_passes"
          ],
          "type": "object",
          "properties": {
            "arrival_passes": {
              "type": "array",
              "description": "Список пропусков.",
              "items": {
                "$ref": "#/components/schemas/arrivalpassArrivalPassUpdateRequestArrivalPass"
              }
            }
          }
        },
        "arrivalpassArrivalPassDeleteRequest": {
          "required": [
            "arrival_pass_ids"
          ],
          "type": "object",
          "properties": {
            "arrival_pass_ids": {
              "type": "array",
              "description": "Идентификаторы пропусков.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "brandBrandCompanyCertificationListRequest": {
          "required": [
            "page",
            "page_size"
          ],
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object",
          "title": "object"
        },
        "BrandCompanyCertificationListResponseBrandCertification": {
          "properties": {
            "brand_name": {
              "type": "string",
              "description": "Название бренда."
            },
            "has_certificate": {
              "type": "boolean",
              "description": "Признак, что требуется сертификат:\n- `true` — требуется сертификат;\n- `false` — сертификат не нужен.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "BrandCompanyCertificationListResponseBrandCertificationResult": {
          "properties": {
            "brand_certification": {
              "items": {
                "$ref": "#/components/schemas/BrandCompanyCertificationListResponseBrandCertification"
              },
              "type": "array",
              "description": "Информация о сертифицируемых брендах."
            },
            "total": {
              "format": "int64",
              "type": "integer",
              "description": "Общее количество брендов."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "brandBrandCompanyCertificationListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/BrandCompanyCertificationListResponseBrandCertificationResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productProductCertificateAccordanceTypesResponseType": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название документа."
            },
            "value": {
              "type": "string",
              "description": "Значение справочника."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productProductCertificateAccordanceTypesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productProductCertificateAccordanceTypesResponseType"
              },
              "type": "array",
              "description": "Список типов и названий сертификатов."
            }
          },
          "type": "object",
          "title": "object"
        },
        "googlerpcStatus": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Дополнительная информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Описание ошибки."
            }
          }
        },
        "v2ProductCertificateAccordanceTypesResponseType": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код типа соответствия требованиям."
            },
            "title": {
              "type": "string",
              "description": "Описание типа соответствия требованиям."
            }
          }
        },
        "v2ProductCertificateAccordanceTypesResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "base": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseType"
              },
              "description": "Основные типы соответствия требованиям."
            },
            "hazard": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseType"
              },
              "description": "Типов соответствия требованиям, относящиеся к опасным товарам."
            }
          },
          "description": "Список типов соответствия требованиям."
        },
        "v2ProductCertificateAccordanceTypesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseResult"
            }
          }
        },
        "productProductCertificateTypesResponseType": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название документа."
            },
            "value": {
              "type": "string",
              "description": "Значение справочника."
            }
          },
          "type": "object",
          "title": "object"
        },
        "productProductCertificateTypesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productProductCertificateTypesResponseType"
              },
              "type": "array",
              "description": "Список типов и названий сертификатов."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2ProductCertificationListRequest": {
          "required": [
            "page",
            "page_size"
          ],
          "type": "object",
          "properties": {
            "page": {
              "description": "Номер страницы.",
              "type": "integer",
              "format": "int64"
            },
            "page_size": {
              "description": "Количество элементов на странице.",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 1000
            }
          }
        },
        "ProductCertificationListResponseCertificationv2": {
          "type": "object",
          "properties": {
            "category_id": {
              "description": "Идентификатор сертифицируемой категории.",
              "type": "integer",
              "format": "int64"
            },
            "category_name": {
              "description": "Название сертифицируемой категории.",
              "type": "string"
            },
            "is_required": {
              "description": "Признак обязательной характеристики.",
              "type": "boolean"
            },
            "type_id": {
              "description": "Идентификатор типа сертифицируемой категории.",
              "type": "integer",
              "format": "int64"
            },
            "type_name": {
              "description": "Название типа сертифицируемой категории.",
              "type": "string"
            }
          }
        },
        "v2ProductCertificationListResponse": {
          "type": "object",
          "properties": {
            "certification": {
              "description": "Информация о сертифицируемых категориях.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCertificationListResponseCertificationv2"
              }
            },
            "total": {
              "description": "Всего категорий.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "productProductCertificationListRequest": {
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object",
          "title": "object"
        },
        "ProductCertificationListResponseCertification": {
          "properties": {
            "category_name": {
              "type": "string",
              "description": "Название сертифицируемой категории."
            },
            "is_required": {
              "type": "boolean",
              "description": "Признак обязательной характеристики."
            }
          },
          "type": "object",
          "title": "object"
        },
        "ProductCertificationListResponseCertificationResult": {
          "properties": {
            "certification": {
              "items": {
                "$ref": "#/components/schemas/ProductCertificationListResponseCertification"
              },
              "type": "array",
              "description": "Информация о сертифицируемых категориях."
            },
            "total": {
              "format": "int64",
              "type": "integer",
              "description": "Всего категорий."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "productProductCertificationListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ProductCertificationListResponseCertificationResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "productProductCertificateBindRequest": {
          "properties": {
            "certificate_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор сертификата, который был присвоен при его загрузке."
            },
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Массив идентификаторов товаров, к которым относится этот сертификат."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1ProductCertificateDeleteRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            }
          },
          "required": [
            "certificate_id"
          ]
        },
        "v1ProductCertificateDeleteResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "is_delete": {
              "type": "boolean",
              "description": "Удалён ли сертификат:\n- `true` — удалён,\n- `false` — не удалён.\n"
            },
            "error_message": {
              "type": "string",
              "description": "Описание ошибок при удалении сертификата."
            }
          },
          "description": "Результат удаления сертификата."
        },
        "v1ProductCertificateDeleteResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateDeleteResponseResult"
            }
          }
        },
        "v1ProductCertificateInfoRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificate_number": {
              "type": "string",
              "description": "Идентификатор сертификата."
            }
          },
          "required": [
            "certificate_number"
          ]
        },
        "v1Certificate": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор."
            },
            "certificate_number": {
              "type": "string",
              "description": "Номер."
            },
            "certificate_name": {
              "type": "string",
              "description": "Название."
            },
            "type_code": {
              "type": "string",
              "description": "Тип."
            },
            "status_code": {
              "type": "string",
              "description": "Статус."
            },
            "accordance_type_code": {
              "type": "string",
              "description": "Тип соответствия требованиям."
            },
            "rejection_reason_code": {
              "type": "string",
              "description": "Причина отклонения сертификата."
            },
            "verification_comment": {
              "type": "string",
              "description": "Комментарий модератора."
            },
            "issue_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания."
            },
            "expire_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания действия."
            },
            "products_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров, привязанных к сертификату."
            }
          },
          "description": "Информация о сертификате."
        },
        "v1ProductCertificateInfoResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1Certificate"
            }
          }
        },
        "v1ProductCertificateListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул, привязанный к сертификату. Передайте параметр, если нужны сертификаты, к которым привязаны определённые товары."
            },
            "status": {
              "type": "string",
              "description": "Статус сертификата. Передайте параметр, если нужны сертификаты с определённым статусом."
            },
            "type": {
              "type": "string",
              "description": "Тип сертификата. Передайте параметр, если нужны сертификаты с определённым типом."
            },
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Страница, с которой следует выводить список. Минимальное значение — 1."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество объектов на странице. Значение — от 1 до 1000."
            }
          },
          "required": [
            "page",
            "page_size"
          ]
        },
        "v1ProductCertificateListResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Certificate"
              },
              "description": "Информация о сертификате."
            },
            "page_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество страниц."
            }
          },
          "description": "Список сертификатов."
        },
        "v1ProductCertificateListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateListResponseResult"
            }
          }
        },
        "v1ProductCertificateProductStatusListRequest": {
          "type": "object",
          "title": "object"
        },
        "v1StatusCodeNamePair": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код статуса товара при привязке к сертификату."
            },
            "name": {
              "type": "string",
              "description": "Описание статуса."
            }
          }
        },
        "v1ProductCertificateProductStatusListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePair"
              },
              "description": "Список статусов товаров."
            }
          }
        },
        "v1ProductCertificateProductsListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            },
            "product_status_code": {
              "type": "string",
              "description": "Статус проверки товара при привязке к сертификату."
            },
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Номер страницы, с которой выводить список. Минимальное значение — 1."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество объектов на странице. Значение — от 1 до 1000."
            }
          },
          "required": [
            "certificate_id",
            "page",
            "page_size"
          ]
        },
        "ProductCertificateProductsListResponseProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "product_status_code": {
              "type": "string",
              "description": "Статус обработки товара при привязке к сертификату."
            }
          }
        },
        "v1ProductCertificateProductsListResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCertificateProductsListResponseProduct"
              },
              "description": "Список товаров."
            },
            "count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество найденных товаров."
            }
          },
          "description": "Товары, привязанные к сертификату."
        },
        "v1ProductCertificateProductsListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateProductsListResponseResult"
            }
          }
        },
        "v1ProductCertificateUnbindRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            },
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64",
                "description": "Идентификатор товара в системе продавца — `product_id`."
              },
              "description": "Список идентификаторов товара, которые нужно отвязать от сертификата."
            }
          },
          "required": [
            "certificate_id",
            "product_id"
          ]
        },
        "ProductCertificateUnbindResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Сообщение об ошибке при отвязывании товара."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "updated": {
              "type": "boolean",
              "description": "Был ли отвязан товар от сертификата:\n- `true` — отвязан,\n- `false` — не отвязан.\n"
            }
          }
        },
        "v1ProductCertificateUnbindResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCertificateUnbindResponseItem"
              },
              "description": "Результат работы метода."
            }
          }
        },
        "v1ProductCertificateRejectionReasonsListRequest": {
          "type": "object",
          "title": "object"
        },
        "v1StatusCodeNamePairRejection": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код причины отклонения сертификата."
            },
            "name": {
              "type": "string",
              "description": "Описание причины отклонения сертификата."
            }
          }
        },
        "v1ProductCertificateRejectionReasonsListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePairRejection"
              },
              "description": "Причины отклонения сертификата."
            }
          }
        },
        "v1ProductCertificateStatusListRequest": {
          "type": "object",
          "title": "object"
        },
        "v1StatusCodeNamePairStatuses": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код статуса сертификата."
            },
            "name": {
              "type": "string",
              "description": "Описание статуса."
            }
          }
        },
        "v1ProductCertificateStatusListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePairStatuses"
              },
              "description": "Список возможных статусов сертификатов."
            }
          }
        },
        "WarehouseFirstMileType": {
          "type": "object",
          "title": "object",
          "description": "Первая миля FBS.",
          "properties": {
            "dropoff_point_id": {
              "type": "string",
              "description": "Идентификатор DropOff-точки."
            },
            "dropoff_timeslot_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор временного слота для DropOff."
            },
            "first_mile_is_changing": {
              "type": "boolean",
              "description": "Признак, что настройки склада обновляются."
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили — `DropOff` или `Pickup`.",
              "enum": [
                "DropOff",
                "Pickup"
              ]
            }
          }
        },
        "WarehouseListResponseWarehouse": {
          "properties": {
            "has_entrusted_acceptance": {
              "type": "boolean",
              "description": "Признак доверительной приёмки. `true`, если доверительная приёмка включена на складе."
            },
            "is_rfbs": {
              "type": "boolean",
              "description": "Признак работы склада по схеме rFBS:\n- `true` — склад работает по схеме rFBS;\n- `false` — не работает по схеме rFBS.\n"
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            },
            "can_print_act_in_advance": {
              "type": "boolean",
              "description": "Возможность печати акта приёма-передачи заранее. `true`, если печатать заранее возможно."
            },
            "first_mile_type": {
              "$ref": "#/components/schemas/WarehouseFirstMileType"
            },
            "has_postings_limit": {
              "type": "boolean",
              "description": "Признак наличия лимита минимального количества заказов. `true`, если лимит есть."
            },
            "is_karantin": {
              "type": "boolean",
              "description": "Признак, что склад не работает из-за карантина."
            },
            "is_kgt": {
              "type": "boolean",
              "description": "Признак, что склад принимает крупногабаритные товары."
            },
            "is_economy": {
              "type": "boolean",
              "description": "`true`, если склад работает с эконом-товарами.\n"
            },
            "is_timetable_editable": {
              "type": "boolean",
              "description": "Признак, что можно менять расписание работы складов."
            },
            "min_postings_limit": {
              "type": "integer",
              "format": "int32",
              "description": "Минимальное значение лимита — количество заказов, которые можно привезти в одной поставке."
            },
            "postings_limit": {
              "type": "integer",
              "format": "int32",
              "description": "Значение лимита. `-1`, если лимита нет."
            },
            "min_working_days": {
              "type": "integer",
              "format": "int64",
              "description": "Количество рабочих дней склада."
            },
            "status": {
              "type": "string",
              "description": "Статус склада.\n\nСоответствие статусов склада со статусами с личном кабинете:\n\n| Статус Seller&nbsp;API | Статус в личном кабинете |\n|---|---|\n| `new` | Активируется |\n| `created` | Активный |\n| `disabled` | В архиве |\n| `blocked` | Заблокирован |\n| `disabled_due_to_limit` | На паузе |\n| `error` | Ошибка |\n"
            },
            "working_days": {
              "description": "Рабочие дни склада.",
              "items": {
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7"
                ]
              }
            }
          },
          "type": "object",
          "title": "object"
        },
        "warehouseWarehouseListResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/WarehouseListResponseWarehouse"
              },
              "type": "array",
              "description": "Список складов."
            }
          },
          "type": "object",
          "title": "object"
        },
        "DeliveryMethodListRequestFilter": {
          "properties": {
            "provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "status": {
              "type": "string",
              "description": "Статус метода доставки:\n  - `NEW` — создан,\n  - `EDITED` — редактируется,\n  - `ACTIVE` — активный,\n  - `DISABLED` — неактивный.\n"
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада. Можно получить с помощью метода [/v1/warehouse/list ](#operation/WarehouseAPI_WarehouseList)."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр для поиска методов доставки."
        },
        "warehouseDeliveryMethodListRequest": {
          "required": [
            "limit"
          ],
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/DeliveryMethodListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов в ответе. Максимум — 50, минимум — 1."
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          },
          "type": "object",
          "title": "object"
        },
        "DeliveryMethodListResponseDeliveryMethod": {
          "properties": {
            "company_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор продавца."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания метода доставки."
            },
            "cutoff": {
              "type": "string",
              "description": "Время, до которого продавцу нужно собрать заказ."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор метода доставки."
            },
            "name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "sla_cut_in": {
              "format": "int64",
              "type": "integer",
              "description": "Минимальное время на сборку заказа в минутах в соответствии с настройками склада."
            },
            "status": {
              "type": "string",
              "description": "Статус метода доставки:\n  - `NEW` — создан,\n  - `EDITED` — редактируется,\n  - `ACTIVE` — активный,\n  - `DISABLED` — неактивный.\n"
            },
            "template_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор услуги по доставке заказа."
            },
            "updated_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время последнего обновления метода метода доставки."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "title": "object"
        },
        "warehouseDeliveryMethodListResponse": {
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в запросе вернулась только часть методов доставки:\n- `true` — сделайте повторный запрос с новым параметром `offset` для получения остальных методов;\n- `false` — ответ содержит все методы доставки по запросу.\n"
            },
            "result": {
              "items": {
                "$ref": "#/components/schemas/DeliveryMethodListResponseDeliveryMethod"
              },
              "type": "array",
              "description": "Результат запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "polygonv1PolygonCreateRequest": {
          "required": [
            "coordinates"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "coordinates": {
              "description": "Координаты полигона доставки в формате `[[[lat long]]]`.\n",
              "type": "string"
            }
          }
        },
        "polygonv1PolygonCreateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "polygon_id": {
              "description": "Идентификатор полигона.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "rpcStatus_v1PolygonCreate": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке:\n\n  - `coordinates not provided` — координаты не переданы;\n  - `invalid coordinates, must have two points in coordinate` — в какой-то точке передана только широта или долгота, нужно передать две точки;\n  - `the first and last points in loop must be same` — первая и последняя точка не совпадают (по стандартным правилам geojson точки должны совпадать);\n  - `non-full loops must have at least 4 unique vertices for polygons` — для полигона передано менее четырех точек.\n"
            }
          }
        },
        "PolygonBindRequestpolygon": {
          "required": [
            "polygon_id",
            "time"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "polygon_id": {
              "description": "Идентификатор полигона.",
              "type": "integer",
              "format": "int64"
            },
            "time": {
              "description": "Время в минутах, за которое доставят товар в этом полигоне.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "PolygonBindRequestwh_location": {
          "required": [
            "lat",
            "lon"
          ],
          "type": "object",
          "title": "object",
          "description": "Расположение склада.",
          "properties": {
            "lat": {
              "description": "Географическая широта расположения склада.",
              "type": "string"
            },
            "lon": {
              "description": "Географическая долгота расположения склада.",
              "type": "string"
            }
          }
        },
        "polygonv1PolygonBindRequest": {
          "required": [
            "delivery_method_id",
            "polygons",
            "warehouse_location"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор метода доставки."
            },
            "polygons": {
              "type": "array",
              "description": "Список полигонов.",
              "items": {
                "$ref": "#/components/schemas/PolygonBindRequestpolygon"
              }
            },
            "warehouse_location": {
              "$ref": "#/components/schemas/PolygonBindRequestwh_location"
            }
          }
        },
        "polygonv1Empty": {
          "type": "object",
          "title": "object"
        },
        "rpcStatus_v1PolygonBind": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              }
            },
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке:\n\n  - **delivery target polygons not provided** — полигоны не переданы;\n  - **no delivery method id provided** — delivery_method_id не передан;\n  - **no warehouse points provided** — не передана координата склада;\n  - **polygon id .... not found** — переданы ID полигонов, которые не найдены в базе данных;\n  - **not found polygon for warehouse point** — точка склада не принадлежит ни одному переданному полигону.\n"
            }
          }
        },
        "postingGetFboPostingListRequestFilter": {
          "required": [
            "since",
            "to"
          ],
          "properties": {
            "since": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода в формате YYYY-MM-DD."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления.\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `delivering` — доставляется,\n- `delivered` — доставлено,\n- `cancelled` — отменено.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода в формате YYYY-MM-DD."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр для поиска отправлений."
        },
        "postingFboPostingWithParams": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Передайте `true`, чтобы добавить в ответ данные аналитики."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Передайте `true`, чтобы добавить в ответ финансовые данные."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingGetFboPostingListRequest": {
          "required": [
            "limit",
            "filter"
          ],
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingGetFboPostingListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента. Максимальное значение — 20000."
            },
            "translit": {
              "type": "boolean",
              "description": "Если включена транслитерация адреса из кириллицы в латиницу — `true`."
            },
            "with": {
              "$ref": "#/components/schemas/postingFboPostingWithParams"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2AdditionalDataItem": {
          "properties": {
            "key": {
              "type": "string",
              "description": null
            },
            "value": {
              "type": "string",
              "description": null
            }
          },
          "type": "object",
          "title": "object",
          "description": "Дополнительная информация."
        },
        "FboPostingFboPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки. Только для продавцов из СНГ."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты: \n- `картой онлайн`,\n- `Ozon Карта`,\n- `автосписание с Ozon Карты при выдаче`,\n- `сохранённой картой при получении`,\n- `Система Быстрых Платежей`, \n- `Ozon Рассрочка`, \n- `оплата на расчётный счёт`,\n- `SberPay`.\n"
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада отправки заказа."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Данные аналитики."
        },
        "PostingFinancialDataProduct": {
          "properties": {
            "actions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Действия."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "commission_amount": {
              "format": "double",
              "type": "number",
              "description": "Размер комиссии за товар."
            },
            "commission_percent": {
              "format": "int64",
              "type": "integer",
              "description": "Процент комиссии."
            },
            "commissions_currency_code": {
              "type": "string",
              "description": "Код валюты, в которой рассчитывались комиссии."
            },
            "old_price": {
              "format": "double",
              "type": "number",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "payout": {
              "format": "double",
              "type": "number",
              "description": "Выплата продавцу."
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "total_discount_percent": {
              "format": "double",
              "type": "number",
              "description": "Процент скидки."
            },
            "total_discount_value": {
              "format": "double",
              "type": "number",
              "description": "Сумма скидки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2PostingFinancialData": {
          "properties": {
            "cluster_from": {
              "type": "string",
              "description": "Код региона, откуда отправляется заказ."
            },
            "cluster_to": {
              "type": "string",
              "description": "Код региона, куда доставляется заказ."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/PostingFinancialDataProduct"
              },
              "type": "array",
              "description": "Список товаров в заказе."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Финансовые данные."
        },
        "v2PostingProduct": {
          "properties": {
            "digital_codes": {
              "items": {
                "type": "string"
              },
              "description": "Коды активации для услуг и цифровых товаров."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2FboPosting": {
          "properties": {
            "additional_data": {
              "items": {
                "$ref": "#/components/schemas/v2AdditionalDataItem"
              },
              "type": "array"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/FboPostingFboPostingAnalyticsData"
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания отправления."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v2PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v2PostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n  - `awaiting_packaging` — ожидает упаковки,\n  - `awaiting_deliver` — ожидает отгрузки,\n  - `delivering` — доставляется,\n  - `delivered` — доставлено,\n  - `cancelled` — отменено.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "v2FboPostingListResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/v2FboPosting"
              },
              "type": "array",
              "description": "Массив отправлений."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingGetFboPostingRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "translit": {
              "type": "boolean",
              "description": "Если включена транслитерация адреса из кириллицы в латиницу — `true`."
            },
            "with": {
              "$ref": "#/components/schemas/postingFboPostingWithParams"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2FboPostingResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2FboPosting"
            }
          },
          "type": "object",
          "title": "object"
        },
        "CancelReasonListResponseCancelReason": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены."
            },
            "is_available_for_cancellation": {
              "type": "boolean",
              "description": "Результат отмены отправления. `true`, если запрос доступен для отмены."
            },
            "title": {
              "type": "string",
              "description": "Название категории."
            },
            "type_id": {
              "type": "string",
              "description": "Инициатор отмены отправления:\n- `buyer` — покупатель,\n- `seller` — продавец.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1CancelReasonListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CancelReasonListResponseCancelReason"
              }
            }
          }
        },
        "commonEmpty": {
          "type": "object",
          "title": "object"
        },
        "v1OrderState": {
          "type": "string",
          "title": "SupplyOrderStatusCounter",
          "default": "ORDER_STATE_UNSPECIFIED",
          "enum": [
            "ORDER_STATE_UNSPECIFIED",
            "ORDER_STATE_DATA_FILLING",
            "ORDER_STATE_READY_TO_SUPPLY",
            "ORDER_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE",
            "ORDER_STATE_IN_TRANSIT",
            "ORDER_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE",
            "ORDER_STATE_REPORTS_CONFIRMATION_AWAITING",
            "ORDER_STATE_REPORT_REJECTED",
            "ORDER_STATE_COMPLETED",
            "ORDER_STATE_REJECTED_AT_SUPPLY_WAREHOUSE",
            "ORDER_STATE_CANCELLED"
          ],
          "description": "Статус поставки:\n- `UNSPECIFIED` — статус не указан;\n- `DATA_FILLING` — заполнение данных;\n- `READY_TO_SUPPLY` — готова к отгрузке;\n- `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки;\n- `IN_TRANSIT` — в пути;\n- `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе;\n- `REPORTS_CONFIRMATION_AWAITING` — согласование актов;\n- `REPORT_REJECTED` — спор;\n- `COMPLETED` — завершена;\n- `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке;\n- `CANCELLED` — отменена.\n"
        },
        "v1SupplyOrderStatusCounterResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "count": {
              "description": "Количество заявок в статусе.",
              "type": "integer",
              "format": "int32"
            },
            "order_state": {
              "description": null,
              "$ref": "#/components/schemas/v1OrderState"
            }
          }
        },
        "v1SupplyOrderStatusCounterResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1SupplyOrderStatusCounterResponseItem"
              }
            }
          }
        },
        "GetSupplyOrderBundleRequestItemTagsCalculation": {
          "type": "object",
          "title": "object",
          "description": "Список складов для расчёта товарных тегов.",
          "properties": {
            "dropoff_warehouse_id": {
              "description": "Идентификатор склада отгрузки поставки.",
              "type": "string"
            },
            "storage_warehouse_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Список идентификаторов складов поставки, не больше 25 значений."
            }
          },
          "required": [
            "dropoff_warehouse_id",
            "storage_warehouse_ids"
          ]
        },
        "v1ItemSortField": {
          "type": "string",
          "title": "string",
          "default": "UNSPECIFIED",
          "enum": [
            "UNSPECIFIED",
            "SKU",
            "NAME",
            "QUANTITY",
            "TOTAL_VOLUME_IN_LITRES"
          ],
          "description": "Сортировка по параметрам:\n- `SKU` — SKU;\n- `NAME` — названию товара;\n- `QUANTITY` — количеству;\n- `TOTAL_VOLUME_IN_LITRES` — объёму в литрах.\n"
        },
        "v1GetSupplyOrderBundleRequest": {
          "required": [
            "bundle_ids",
            "limit"
          ],
          "type": "object",
          "properties": {
            "bundle_ids": {
              "type": "array",
              "minItems": 1,
              "maxItems": 100,
              "description": "Идентификаторы товарного состава поставки. Можно получить в методе [/v2/supply-order/get](#operation/SupplyOrderAPI_GetSupplyOrdersV2).",
              "items": {
                "type": "string"
              }
            },
            "is_asc": {
              "type": "boolean",
              "description": "`true`, чтобы сортировать по возрастанию.\n"
            },
            "item_tags_calculation": {
              "$ref": "#/components/schemas/GetSupplyOrderBundleRequestItemTagsCalculation"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения SKU на странице."
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "description": "Количество товаров на странице."
            },
            "query": {
              "type": "string",
              "description": "Поисковый запрос, например: по названию, артикулу или SKU.\n"
            },
            "sort_field": {
              "$ref": "#/components/schemas/v1ItemSortField"
            }
          }
        },
        "v1ItemSfboAttribute": {
          "type": "string",
          "title": "string",
          "default": "ITEM_SFBO_ATTRIBUTE_UNSPECIFIED",
          "enum": [
            "ITEM_SFBO_ATTRIBUTE_NONE",
            "ITEM_SFBO_ATTRIBUTE_SUPER_FBO",
            "ITEM_SFBO_ATTRIBUTE_ANTI_FBO"
          ],
          "description": "Метка Super-товара:\n- `ITEM_SFBO_ATTRIBUTE_NONE` — без метки;\n- `ITEM_SFBO_ATTRIBUTE_SUPER_FBO` — Super-товар;\n- `ITEM_SFBO_ATTRIBUTE_ANTI_FBO` — неходовой товар.\n"
        },
        "v1BundleItemShipmentType": {
          "type": "string",
          "title": "string",
          "default": "BUNDLE_ITEM_SHIPMENT_TYPE_UNSPECIFIED",
          "enum": [
            "BUNDLE_ITEM_SHIPMENT_TYPE_GENERAL",
            "BUNDLE_ITEM_SHIPMENT_TYPE_BOX",
            "BUNDLE_ITEM_SHIPMENT_TYPE_PALLET"
          ],
          "description": "Тип упаковки:\n- `BUNDLE_ITEM_SHIPMENT_TYPE_GENERAL` — обычный товар;\n- `BUNDLE_ITEM_SHIPMENT_TYPE_BOX` — коробка;\n- `BUNDLE_ITEM_SHIPMENT_TYPE_PALLET` — палета.\n"
        },
        "v1ItemResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "icon_path": {
              "type": "string",
              "description": "Ссылка на изображение товара."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод товара."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quant": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров в одной упаковке."
            },
            "is_quant_editable": {
              "type": "boolean",
              "description": "`true`, если количество товаров в одной упаковке можно изменить.\n"
            },
            "volume_in_litres": {
              "type": "number",
              "format": "double",
              "description": "Объём товара в литрах."
            },
            "total_volume_in_litres": {
              "type": "number",
              "format": "double",
              "description": "Объём всех товаров в литрах."
            },
            "contractor_item_code": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "sfbo_attribute": {
              "$ref": "#/components/schemas/v1ItemSfboAttribute"
            },
            "shipment_type": {
              "$ref": "#/components/schemas/v1BundleItemShipmentType"
            },
            "tags": {
              "type": "array",
              "description": "Теги товаров из поставки или заявки на поставку.\n\nВозможные значения:\n- `EVSD_REQUIRED` — товар с сертификацией «Меркурий»;\n- `MARKING_REQUIRED` — товар с обязательной маркировкой «Честный ЗНАК»;\n- `MARKING_POSSIBLE` — товар с возможной маркировкой «Честный ЗНАК»;\n- `JEWELRY` — товар с признаком ювелирного изделия;\n- `TRACEABLE` — товар с признаком прослеживаемости;\n- `ETTN_REQUIRED` — товар с признаком прослеживаемости, для которого необходима электронная ТТН;\n- `UNDEFINED` — неизвестный тег.\n",
              "items": {
                "type": "string",
                "enum": [
                  "EVSD_REQUIRED",
                  "MARKING_REQUIRED",
                  "MARKING_POSSIBLE",
                  "JEWELRY",
                  "TRACEABLE",
                  "ETTN_REQUIRED",
                  "UNDEFINED"
                ]
              }
            }
          }
        },
        "v1GetSupplyOrderBundleResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1ItemResponse"
              },
              "description": "Список товаров в заявке на поставку."
            },
            "total_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров в заявке."
            },
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не все товары:\n- `true` — сделайте повторный запрос с другим значением `page` и `page_size`, чтобы получить информацию об остальных товарах;\n- `false` — ответ содержит все товары из заявки.\n"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице."
            }
          }
        },
        "GetSupplyOrdersListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "properties": {
            "states": {
              "description": "Фильтр по статусу поставки:\n- `ORDER_STATE_DATA_FILLING` — заполнение данных;\n- `ORDER_STATE_READY_TO_SUPPLY` — готова к отгрузке;\n- `ORDER_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки;\n- `ORDER_STATE_IN_TRANSIT` — в пути;\n- `ORDER_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе;\n- `ORDER_STATE_REPORTS_CONFIRMATION_AWAITING` — согласование актов;\n- `ORDER_STATE_REPORT_REJECTED` — спор;\n- `ORDER_STATE_COMPLETED` — завершена;\n- `ORDER_STATE_REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке;\n- `ORDER_STATE_CANCELLED` — отменена.\n",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_STATE_DATA_FILLING",
                  "ORDER_STATE_READY_TO_SUPPLY",
                  "ORDER_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE",
                  "ORDER_STATE_IN_TRANSIT",
                  "ORDER_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE",
                  "ORDER_STATE_REPORTS_CONFIRMATION_AWAITING",
                  "ORDER_STATE_REPORT_REJECTED",
                  "ORDER_STATE_COMPLETED",
                  "ORDER_STATE_REJECTED_AT_SUPPLY_WAREHOUSE",
                  "ORDER_STATE_CANCELLED"
                ]
              }
            }
          }
        },
        "GetSupplyOrdersListRequestPaging": {
          "type": "object",
          "title": "object",
          "description": "Настройка отображения списка заявок.",
          "properties": {
            "from_supply_order_id": {
              "description": "Номер поставки, с которой отобразится список заявок.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "Количество значений в ответе:\n  - максимум — 100,\n  - минимум — 1.\n",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "limit"
          ]
        },
        "v2GetSupplyOrdersListRequest": {
          "required": [
            "paging"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/GetSupplyOrdersListRequestFilter"
            },
            "paging": {
              "$ref": "#/components/schemas/GetSupplyOrdersListRequestPaging"
            }
          }
        },
        "v2GetSupplyOrdersListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "last_supply_order_id": {
              "description": "Идентификатор заявки на поставку, который вы запрашивали в прошлый раз.",
              "type": "integer",
              "format": "int64"
            },
            "supply_order_id": {
              "description": "Идентификатор заявки на поставку.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v2GetSupplyOrdersRequest": {
          "required": [
            "order_ids"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "order_ids": {
              "description": "Идентификатор заявки на поставку в системе Ozon.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v2State": {
          "type": "string",
          "description": "Статус поставки:\n- `ORDER_STATE_UNSPECIFIED` — статус не указан;\n- `ORDER_STATE_DATA_FILLING` — заполнение данных;\n- `ORDER_STATE_READY_TO_SUPPLY` — готова к отгрузке;\n- `ORDER_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки;\n- `ORDER_STATE_IN_TRANSIT` — в пути;\n- `ORDER_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе;\n- `ORDER_STATE_REPORTS_CONFIRMATION_AWAITING` — согласование актов;\n- `ORDER_STATE_REPORT_REJECTED` — спор;\n- `ORDER_STATE_COMPLETED` — завершена;\n- `ORDER_STATE_REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке;\n- `ORDER_STATE_CANCELLED` — отменена.\n",
          "enum": [
            "ORDER_STATE_UNSPECIFIED",
            "ORDER_STATE_DATA_FILLING",
            "ORDER_STATE_READY_TO_SUPPLY",
            "ORDER_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE",
            "ORDER_STATE_IN_TRANSIT",
            "ORDER_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE",
            "ORDER_STATE_REPORTS_CONFIRMATION_AWAITING",
            "ORDER_STATE_REPORT_REJECTED",
            "ORDER_STATE_COMPLETED",
            "ORDER_STATE_REJECTED_AT_SUPPLY_WAREHOUSE",
            "ORDER_STATE_CANCELLED"
          ]
        },
        "v2Supply_state": {
          "type": "string",
          "description": "Статус поставки:\n- `SUPPLY_STATE_UNSPECIFIED` — статус не указан;\n- `SUPPLY_STATE_DATA_FILLING` — заполнение данных;\n- `SUPPLY_STATE_READY_TO_SUPPLY` — готова к отгрузке;\n- `SUPPLY_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки;\n- `SUPPLY_STATE_IN_TRANSIT` — в пути;\n- `SUPPLY_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе;\n- `SUPPLY_STATE_REPORTS_CONFIRMATION_AWAITING` — согласование актов;\n- `SUPPLY_STATE_REPORT_REJECTED` — спор;\n- `SUPPLY_STATE_COMPLETED` — завершена;\n- `SUPPLY_STATE_REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке;\n- `SUPPLY_STATE_CANCELLED` — отменена;\n- `SUPPLY_STATE_OVERDUE` — просрочена.\n",
          "enum": [
            "SUPPLY_STATE_UNSPECIFIED",
            "SUPPLY_STATE_DATA_FILLING",
            "SUPPLY_STATE_READY_TO_SUPPLY",
            "SUPPLY_STATE_ACCEPTED_AT_SUPPLY_WAREHOUSE",
            "SUPPLY_STATE_IN_TRANSIT",
            "SUPPLY_STATE_ACCEPTANCE_AT_STORAGE_WAREHOUSE",
            "SUPPLY_STATE_REPORTS_CONFIRMATION_AWAITING",
            "SUPPLY_STATE_REPORT_REJECTED",
            "SUPPLY_STATE_COMPLETED",
            "SUPPLY_STATE_REJECTED_AT_SUPPLY_WAREHOUSE",
            "SUPPLY_STATE_CANCELLED",
            "SUPPLY_STATE_OVERDUE"
          ]
        },
        "v2OrderSupplySupplyTags": {
          "type": "object",
          "title": "object",
          "properties": {
            "is_ettn_required": {
              "type": "boolean",
              "description": "Признак, что для поставки нужна электронная ТТН."
            },
            "is_evsd_required": {
              "description": "`true`, если в поставке есть товары с сертификацией в системе «Меркурий».\n",
              "type": "boolean"
            },
            "is_jewelry": {
              "type": "boolean",
              "description": "`true`, если в поставке есть ювелирные товары.\n"
            },
            "is_marking_possible": {
              "type": "boolean",
              "description": "`true`, если в поставке есть товары, для которых возможна маркировка.\n"
            },
            "is_marking_required": {
              "type": "boolean",
              "description": "`true`, если в поставке есть товары, для которых маркировка обязательна.\n"
            },
            "is_traceable": {
              "type": "boolean",
              "description": "Признак, что поставка содержит прослеживаемые товары."
            }
          }
        },
        "v2OrderSupply": {
          "type": "object",
          "title": "object",
          "properties": {
            "bundle_id": {
              "type": "string",
              "description": "Идентификатор состава поставки. Используется в методе [/v1/supply-order/bundle](#operation/SupplyOrderBundle)."
            },
            "storage_warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада хранения."
            },
            "supply_id": {
              "description": "Идентификатор поставки.",
              "type": "integer",
              "format": "int64"
            },
            "supply_state": {
              "$ref": "#/components/schemas/v2Supply_state"
            },
            "supply_tags": {
              "description": "Метки товаров в заявке на поставку.",
              "items": {
                "$ref": "#/components/schemas/v2OrderSupplySupplyTags"
              }
            }
          }
        },
        "v2Timeslot": {
          "type": "object",
          "title": "object",
          "properties": {
            "from": {
              "type": "string",
              "description": "Начало интервала.",
              "format": "date-time"
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Конец интервала."
            }
          }
        },
        "v2Timezone": {
          "type": "object",
          "title": "object",
          "properties": {
            "iana_name": {
              "description": "Название часового пояса.",
              "type": "string"
            },
            "offset": {
              "description": "Смещение часового пояса от UTC-0 в секундах.",
              "type": "string"
            }
          }
        },
        "v2TimeslotZonedMessage": {
          "type": "object",
          "title": "object",
          "properties": {
            "timeslot": {
              "description": "Интервал поставки по местному времени.",
              "items": {
                "$ref": "#/components/schemas/v2Timeslot"
              }
            },
            "timezone_info": {
              "description": "Часовой пояс.",
              "items": {
                "$ref": "#/components/schemas/v2Timezone"
              }
            }
          }
        },
        "v2OrderTimeslot": {
          "type": "object",
          "title": "object",
          "description": "Интервал поставки.",
          "properties": {
            "can_not_set_reasons": {
              "description": "Причина, по которой не получается выбрать интервал поставки.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "can_set": {
              "description": "`true`, если интервал поставки можно выбрать или изменить.\n",
              "type": "boolean"
            },
            "is_required": {
              "type": "boolean",
              "description": "`true`, если характеристику указывать обязательно.\n"
            },
            "value": {
              "$ref": "#/components/schemas/v2TimeslotZonedMessage"
            }
          }
        },
        "v2VehicleInfo": {
          "type": "object",
          "title": "object",
          "properties": {
            "driver_name": {
              "type": "string",
              "description": "Имя водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Телефон водителя."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "vehicle_number": {
              "type": "string",
              "description": "Номер автомобиля."
            }
          }
        },
        "v2OrderVehicle": {
          "type": "object",
          "title": "object",
          "description": "Информация о водителе и автомобиле.",
          "properties": {
            "can_not_set_reasons": {
              "description": "Причина, по которой не получается указать или изменить данные водителя и автомобиля.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "can_set": {
              "type": "boolean",
              "description": "`true`, если можно указать или изменить данные водителя и автомобиля.\n"
            },
            "is_required": {
              "type": "boolean",
              "description": "`true`, если характеристику указывать обязательно.\n"
            },
            "value": {
              "description": "Данные водителя и автомобиля.",
              "items": {
                "$ref": "#/components/schemas/v2VehicleInfo"
              }
            }
          }
        },
        "v2Order": {
          "type": "object",
          "title": "object",
          "properties": {
            "can_cancel": {
              "description": "`true`, если заявку можно отменить.\n",
              "type": "boolean"
            },
            "creation_date": {
              "description": "Дата создания заявки на поставку.",
              "type": "string"
            },
            "data_filling_deadline_utc": {
              "description": "Время в секундах, оставшееся на заполнение данных по поставке. Только для заявок с вРЦ.",
              "type": "string",
              "format": "date-time"
            },
            "dropoff_warehouse_id": {
              "description": "Идентификатор склада поставки.",
              "type": "integer",
              "format": "int64"
            },
            "is_econom": {
              "description": "`true`, если заявка на поставку относится к товарам «Суперэконом».\n",
              "type": "boolean"
            },
            "is_super_fbo": {
              "description": "`true`, если продавец подключен к Super-поставкам.\n",
              "type": "boolean"
            },
            "is_virtual": {
              "description": "`true`, если заявка на поставку виртуальная.\n",
              "type": "boolean"
            },
            "product_super_fbo": {
              "description": "`true`, если заявка на поставку относится к Super-товарам.\n",
              "type": "boolean"
            },
            "state": {
              "$ref": "#/components/schemas/v2State"
            },
            "supplies": {
              "description": "Состав заявки на поставку.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2OrderSupply"
              }
            },
            "supply_order_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на поставку."
            },
            "supply_order_number": {
              "type": "string",
              "description": "Номер заявки."
            },
            "timeslot": {
              "$ref": "#/components/schemas/v2OrderTimeslot"
            },
            "vehicle": {
              "$ref": "#/components/schemas/v2OrderVehicle"
            }
          }
        },
        "v2Warehouse": {
          "type": "object",
          "title": "object",
          "description": "Склад поставки.",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "v2GetSupplyOrdersResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "orders": {
              "description": "Информация о заявке на поставку.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2Order"
              }
            },
            "warehouses": {
              "description": "Информация о складе.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2Warehouse"
              }
            }
          }
        },
        "v1GetSupplyOrderTimeslotsRequest": {
          "required": [
            "supply_order_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "supply_order_id": {
              "description": "Идентификатор заявки на поставку.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1SupplyOrderTimeslot": {
          "required": [
            "from",
            "to"
          ],
          "type": "object",
          "title": "object",
          "description": "Время интервала поставки.",
          "properties": {
            "from": {
              "description": "Начало интервала по местному времени.",
              "type": "string",
              "format": "date-time"
            },
            "to": {
              "description": "Конец интервала по местному времени.",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "v1Timezone": {
          "type": "object",
          "title": "object",
          "properties": {
            "iana_name": {
              "description": "Название часового пояса.",
              "type": "string"
            },
            "offset": {
              "description": "Смещение часового пояса от UTC-0 в секундах.",
              "type": "string"
            }
          }
        },
        "v1GetSupplyOrderTimeslotsResponse": {
          "type": "object",
          "properties": {
            "timeslots": {
              "description": "Интервалы поставки.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1SupplyOrderTimeslot"
              }
            },
            "timezone": {
              "description": "Часовой пояс.",
              "items": {
                "$ref": "#/components/schemas/v1Timezone"
              }
            }
          }
        },
        "v1UpdateSupplyOrderTimeslotRequest": {
          "required": [
            "supply_order_id",
            "timeslot"
          ],
          "type": "object",
          "properties": {
            "supply_order_id": {
              "description": "Идентификатор заявки на поставку.",
              "type": "integer",
              "format": "int64"
            },
            "timeslot": {
              "$ref": "#/components/schemas/v1SupplyOrderTimeslot"
            }
          }
        },
        "v1UpdateTimeslotError": {
          "type": "string",
          "default": "UPDATE_TIMESLOT_ERROR_UNSPECIFIED",
          "enum": [
            "UPDATE_TIMESLOT_ERROR_UNSPECIFIED",
            "UPDATE_TIMESLOT_ERROR_INVALID_ORDER_STATE",
            "UPDATE_TIMESLOT_ERROR_INCOMPATIBLE_ORDER_FLOW",
            "UPDATE_TIMESLOT_ERROR_SET_TIMESLOT_DEADLINE_EXCEED",
            "UPDATE_TIMESLOT_ERROR_OUT_OF_ALLOWED_RANGE",
            "UPDATE_TIMESLOT_ERROR_ORDER_NOT_BELONG_CONTRACTOR",
            "UPDATE_TIMESLOT_ERROR_ORDER_NOT_BELONG_COMPANY"
          ]
        },
        "v1UpdateSupplyOrderTimeslotResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1UpdateTimeslotError"
              },
              "description": "Возможные ошибки: \n  - `UNSPECIFIED` — статус не указан;\n  - `INVALID_ORDER_STATE` — неверный статус заказа;\n  - `INCOMPATIBLE_ORDER_FLOW` — неверный статус интервала поставки;\n  - `SET_TIMESLOT_DEADLINE_EXCEED` — заявка на поставку просрочена;\n  - `OUT_OF_ALLOWED_RANGE` — вы ввели некорректное значение интервала поставки;\n  - `ORDER_NOT_BELONG_CONTRACTOR` — заявка создана другим юридическим лицом, работать с ней не получится;\n  - `ORDER_NOT_BELONG_COMPANY` — заявка не принадлежит вашему кабинету, работать с ней не получится.\n"
            },
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "v1GetSupplyOrderTimeslotStatusRequest": {
          "required": [
            "operation_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "v1GetSupplyOrderTimeslotStatusResponseStatus": {
          "type": "string",
          "title": "object",
          "default": "STATUS_UNSPECIFIED",
          "enum": [
            "STATUS_UNSPECIFIED",
            "STATUS_ERROR",
            "STATUS_IN_PROGRESS",
            "STATUS_SUCCESS"
          ],
          "description": "Статус данных: \n  - `UNSPECIFIED` — не указан;\n  - `ERROR` — ошибка;\n  - `IN_PROGRESS` — устанавливается;\n  - `SUCCESS` — установлен.\n"
        },
        "v1GetSupplyOrderTimeslotStatusResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "description": "Возможные ошибки: \n  - `UNSPECIFIED` — статус не указан;\n  - `INVALID_ORDER_STATE` — неверный статус заказа;\n  - `INCOMPATIBLE_ORDER_FLOW` — неверный статус интервала поставки;\n  - `SET_TIMESLOT_DEADLINE_EXCEED` — заявка на поставку просрочена;\n  - `OUT_OF_ALLOWED_RANGE` — вы ввели некорректное значение интервала поставки;\n  - `ORDER_NOT_BELONG_CONTRACTOR` — заявка создана другим юридическом лицом, работать с ней не получится;\n  - `ORDER_NOT_BELONG_COMPANY` — заявка не принадлежит вашему кабинету, работать с ней не получится.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1UpdateTimeslotError"
              }
            },
            "status": {
              "$ref": "#/components/schemas/v1GetSupplyOrderTimeslotStatusResponseStatus"
            }
          }
        },
        "v1VehicleInfo": {
          "required": [
            "driver_name",
            "driver_phone",
            "vehicle_model",
            "vehicle_number"
          ],
          "type": "object",
          "title": "object",
          "description": "Информация о водителе и автомобиле.",
          "properties": {
            "driver_name": {
              "type": "string",
              "description": "Имя водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Телефон водителя."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "vehicle_number": {
              "type": "string",
              "description": "Номер автомобиля."
            }
          }
        },
        "v1SupplyOrderPassCreateRequest": {
          "required": [
            "supply_order_id",
            "vehicle"
          ],
          "type": "object",
          "properties": {
            "supply_order_id": {
              "description": "Идентификатор заявки на поставку.",
              "type": "integer",
              "format": "int64"
            },
            "vehicle": {
              "$ref": "#/components/schemas/v1VehicleInfo"
            }
          }
        },
        "v1SetVehicleError": {
          "title": "object",
          "default": "SET_VEHICLE_ERROR_UNSPECIFIED",
          "enum": [
            "SET_VEHICLE_ERROR_UNSPECIFIED",
            "SET_VEHICLE_ERROR_INVALID_ORDER_STATE",
            "SET_VEHICLE_ERROR_VEHICLE_NOT_REQUIRED",
            "SET_VEHICLE_ERROR_ORDER_NOT_BELONG_CONTRACTOR",
            "SET_VEHICLE_ERROR_ORDER_NOT_BELONG_COMPANY"
          ],
          "type": "string"
        },
        "v1SupplyOrderPassCreateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "error_reasons": {
              "description": "Причина ошибки:\n  - `UNSPECIFIED` — статус заявки не указан;\n  - `INVALID_ORDER_STATE` — неверный статус заявки;\n  - `VEHICLE_NOT_REQUIRED` — указывать данные автомобиля необязательно;\n  - `ORDER_NOT_BELONG_CONTRACTOR` — заявка создана другим юридическом лицом, работать с ней не получится;\n  - `ORDER_NOT_BELONG_COMPANY` — заявка не принадлежит вашему кабинету, работать с ней не получится.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1SetVehicleError"
              }
            },
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "v1SupplyOrderPassStatusRequest": {
          "required": [
            "operation_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "v1SupplyOrderPassStatusResponseStatus": {
          "type": "string",
          "title": "object",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Success",
            "InProgress",
            "Failed"
          ],
          "description": "Статус ввода данных о водителе и автомобиле:\n- `Unknown` — статус неизвестен;\n- `Success` — данные указаны;\n- `InProgress` — данные обрабатываются;\n- `Failed` — не удалось обработать данные.\n"
        },
        "v1SupplyOrderPassStatusResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "description": "Причина ошибки:\n- `UNSPECIFIED` — статус не указан;\n- `INVALID_ORDER_STATE` — неверный статус заявки;\n- `VEHICLE_NOT_REQUIRED` — указывать данные автомобиля необязательно;\n- `ORDER_NOT_BELONG_CONTRACTOR` — заявка создана другим юридическом лицом, работать с ней не получится;\n- `ORDER_NOT_BELONG_COMPANY` — заявка не принадлежит вашему кабинету, работать с ней не получится.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1SetVehicleError"
              }
            },
            "result": {
              "$ref": "#/components/schemas/v1SupplyOrderPassStatusResponseStatus"
            }
          }
        },
        "SupplierAvailableWarehousesResponseCapacity": {
          "type": "object",
          "title": "object",
          "properties": {
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода по местному времени."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода по местному времени."
            },
            "value": {
              "type": "integer",
              "format": "int32",
              "description": "Среднее количество товаров, которые склад может принять в день за период."
            }
          }
        },
        "SupplierAvailableWarehousesResponseSchedule": {
          "type": "object",
          "title": "object",
          "description": "Загруженность.",
          "properties": {
            "capacity": {
              "description": "Данные о количестве поставляемых на склад товаров.",
              "items": {
                "$ref": "#/components/schemas/SupplierAvailableWarehousesResponseCapacity"
              }
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Ближайшая доступная дата для записи на поставку по местному времени."
            }
          }
        },
        "SupplierAvailableWarehousesResponseWarehouse": {
          "type": "object",
          "title": "object",
          "description": "Склад.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор склада."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            }
          }
        },
        "SupplierAvailableWarehousesResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "schedule": {
              "$ref": "#/components/schemas/SupplierAvailableWarehousesResponseSchedule"
            },
            "warehouse": {
              "$ref": "#/components/schemas/SupplierAvailableWarehousesResponseWarehouse"
            }
          }
        },
        "v1SupplierAvailableWarehousesResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/SupplierAvailableWarehousesResponseResult"
              }
            }
          }
        },
        "v1ClusterType": {
          "type": "string",
          "title": "DraftClusterList",
          "description": "Тип кластера:\n- `CLUSTER_TYPE_OZON` — кластер в России,\n- `CLUSTER_TYPE_CIS` — кластер в СНГ.\n",
          "enum": [
            "CLUSTER_TYPE_OZON",
            "CLUSTER_TYPE_CIS"
          ]
        },
        "v1DraftClusterListRequest": {
          "type": "object",
          "properties": {
            "cluster_ids": {
              "type": "array",
              "description": "Идентификаторы кластеров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "cluster_type": {
              "$ref": "#/components/schemas/v1ClusterType"
            }
          },
          "required": [
            "cluster_type"
          ]
        },
        "v1DraftClusterListResponseWarehouse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "type": {
              "type": "string",
              "enum": [
                "FULL_FILLMENT",
                "EXPRESS_DARK_STORE",
                "SORTING_CENTER",
                "ORDERS_RECEIVING_POINT",
                "CROSS_DOCK",
                "DISTRIBUTION_CENTER"
              ],
              "description": "Тип склада:\n- `FULL_FILLMENT` — фулфилмент,\n- `EXPRESS_DARK_STORE` — даркстор,\n- `SORTING_CENTER` — сортировочный центр,\n- `ORDERS_RECEIVING_POINT` — пункт приёма заказов,\n- `CROSS_DOCK` — кросс-докинг,\n- `DISTRIBUTION_CENTER` — распределительный центр.\n"
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "DraftClusterListResponseLogisticCluster": {
          "type": "object",
          "properties": {
            "warehouses": {
              "type": "array",
              "description": "Склады.",
              "items": {
                "$ref": "#/components/schemas/v1DraftClusterListResponseWarehouse"
              }
            }
          }
        },
        "v1DraftClusterListResponseCluster": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор кластера."
            },
            "logistic_clusters": {
              "type": "array",
              "description": "Информация о складах кластера.",
              "items": {
                "$ref": "#/components/schemas/DraftClusterListResponseLogisticCluster"
              }
            },
            "name": {
              "type": "string",
              "description": "Название кластера."
            },
            "type": {
              "type": "string",
              "enum": [
                "CLUSTER_TYPE_OZON",
                "CLUSTER_TYPE_CIS"
              ],
              "description": "Тип кластера:\n- `CLUSTER_TYPE_OZON` — кластер в России,\n- `CLUSTER_TYPE_CIS` — кластер в СНГ.\n"
            }
          }
        },
        "v1DraftClusterListResponse": {
          "type": "object",
          "properties": {
            "clusters": {
              "type": "array",
              "description": "Кластеры.",
              "items": {
                "$ref": "#/components/schemas/v1DraftClusterListResponseCluster"
              }
            }
          }
        },
        "v1CreateType": {
          "type": "string",
          "enum": [
            "CREATE_TYPE_CROSSDOCK",
            "CREATE_TYPE_DIRECT"
          ],
          "description": "Тип поставки:\n- `CREATE_TYPE_CROSSDOCK` — кросс-докинг,\n- `CREATE_TYPE_DIRECT` — прямая.\n"
        },
        "v1DraftGetWarehouseFboListRequest": {
          "type": "object",
          "title": "DraftGetWarehouseFboList",
          "properties": {
            "filter_by_supply_type": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1CreateType"
              },
              "description": "Тип поставки:\n- `CREATE_TYPE_CROSSDOCK` — кросс-докинг,\n- `CREATE_TYPE_DIRECT` — прямая.\n"
            },
            "search": {
              "type": "string",
              "required": true,
              "description": "Поиск по названию склада. Для поиска пунктов выдачи заказов укажите полное название.",
              "minLength": 4
            }
          },
          "required": [
            "filter_by_supply_type",
            "search"
          ]
        },
        "DraftGetWarehouseFboListResponseCoordinate": {
          "type": "object",
          "description": "Координаты склада.",
          "properties": {
            "latitude": {
              "type": "number",
              "format": "double",
              "description": "Широта."
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "description": "Долгота."
            }
          }
        },
        "DraftGetWarehouseFboListResponseWarehouseType": {
          "type": "string",
          "description": "Тип склада, пункта выдачи заказов или сортировочного центра:\n- `WAREHOUSE_TYPE_DELIVERY_POINT` — пункт выдачи заказов,\n- `WAREHOUSE_TYPE_ORDERS_RECEIVING_POINT` — пункт приёма заказов,\n- `WAREHOUSE_TYPE_SORTING_CENTER` — сортировочный центр,\n- `WAREHOUSE_TYPE_FULL_FILLMENT` — фулфилмент,\n- `WAREHOUSE_TYPE_CROSS_DOCK` — кросс-докинг.\n",
          "enum": [
            "WAREHOUSE_TYPE_DELIVERY_POINT",
            "WAREHOUSE_TYPE_ORDERS_RECEIVING_POINT",
            "WAREHOUSE_TYPE_SORTING_CENTER",
            "WAREHOUSE_TYPE_FULL_FILLMENT",
            "WAREHOUSE_TYPE_CROSS_DOCK"
          ]
        },
        "DraftGetWarehouseFboListResponseSearch": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "coordinates": {
              "$ref": "#/components/schemas/DraftGetWarehouseFboListResponseCoordinate"
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада, пункта выдачи заказов или сортировочного центра."
            },
            "warehouse_type": {
              "$ref": "#/components/schemas/DraftGetWarehouseFboListResponseWarehouseType"
            }
          }
        },
        "v1DraftGetWarehouseFboListResponse": {
          "type": "object",
          "properties": {
            "search": {
              "type": "array",
              "description": "Результат поиска складов.",
              "items": {
                "$ref": "#/components/schemas/DraftGetWarehouseFboListResponseSearch"
              }
            }
          }
        },
        "DraftCreateRequestItem": {
          "type": "object",
          "properties": {
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "required": [
            "quantity",
            "sku"
          ]
        },
        "v1DraftCreateRequest": {
          "type": "object",
          "title": "DraftCreate messages",
          "properties": {
            "cluster_ids": {
              "type": "array",
              "description": "Идентификаторы кластеров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "drop_off_point_warehouse_id": {
              "type": "integer",
              "format": "int64",
              "title": "заполняется только для \"type\": \"crossdock\"",
              "description": "Идентификатор точки отгрузки — пункта выдачи заказов или сортировочного центра.\nТолько для типа поставки `type = CREATE_TYPE_CROSSDOCK`.\n"
            },
            "items": {
              "type": "array",
              "description": "Товары.",
              "maxItems": 5000,
              "items": {
                "$ref": "#/components/schemas/DraftCreateRequestItem"
              }
            },
            "type": {
              "$ref": "#/components/schemas/v1CreateType"
            }
          },
          "required": [
            "items",
            "type"
          ]
        },
        "v1DraftCreateResponse": {
          "type": "object",
          "properties": {
            "operation_id": {
              "type": "string",
              "description": "Идентификатор черновика заявки на поставку."
            }
          }
        },
        "v1DraftCreateInfoRequest": {
          "type": "object",
          "properties": {
            "operation_id": {
              "type": "string",
              "description": "Идентификатор черновика заявки на поставку.\n"
            }
          },
          "required": [
            "operation_id"
          ]
        },
        "v1BundleId": {
          "type": "object",
          "properties": {
            "bundle_id": {
              "type": "string",
              "description": "Идентификатор комплекта. Используйте параметр в методе [/v1/supply-order/bundle](#operation/SupplyOrderBundle), чтобы получить подробную информацию.\n"
            },
            "is_docless": {
              "type": "boolean",
              "description": "Признак необходимости передачи УПД:\n- `true` — документы не требуются,\n- `false` — требуются.\n"
            }
          }
        },
        "v1WarehouseScoringInvalidReason": {
          "type": "string",
          "default": "WAREHOUSE_SCORING_INVALID_REASON_UNSPECIFIED",
          "enum": [
            "WAREHOUSE_SCORING_INVALID_REASON_PARTIAL_MATRIX_AVAILABLE",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_MATRIX",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_RANK",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_ROUTE",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_DROP_OFF_POINT",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_STORAGE_WAREHOUSE",
            "WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_BOTH_WAREHOUSE"
          ],
          "description": "Причина недоступности склада:\n  - `WAREHOUSE_SCORING_INVALID_REASON_PARTIAL_MATRIX_AVAILABLE` — склад не может принять часть товаров;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_MATRIX` — склад не может принять все товары;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_RANK` — склад недоступен из-за рейтинга;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_ROUTE` — нет доступного маршрута;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_DROP_OFF_POINT` — нет таймслотов на точке отгрузки;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_STORAGE_WAREHOUSE` — нет таймслотов на складе поставки;\n  - `WAREHOUSE_SCORING_INVALID_REASON_NOT_AVAILABLE_TIMESLOT_FOR_BOTH_WAREHOUSE` — нет таймслотов на складах отгрузки и поставки.\n"
        },
        "v1WarehouseScoringStatus": {
          "type": "string",
          "default": "WAREHOUSE_SCORING_STATUS_FULL_AVAILABLE",
          "enum": [
            "WAREHOUSE_SCORING_STATUS_FULL_AVAILABLE",
            "WAREHOUSE_SCORING_STATUS_PARTIAL_AVAILABLE",
            "WAREHOUSE_SCORING_STATUS_NOT_AVAILABLE"
          ],
          "description": "Статус склада:\n- `WAREHOUSE_SCORING_STATUS_FULL_AVAILABLE` — доступен,\n- `WAREHOUSE_SCORING_STATUS_PARTIAL_AVAILABLE` —  частично доступен,\n- `WAREHOUSE_SCORING_STATUS_NOT_AVAILABLE` — недоступен.\n"
        },
        "v1WarehouseStatus": {
          "type": "object",
          "description": "Доступность склада.",
          "properties": {
            "invalid_reason": {
              "$ref": "#/components/schemas/v1WarehouseScoringInvalidReason"
            },
            "is_available": {
              "type": "boolean",
              "description": "Доступность склада:\n- `true` — доступен,\n- `false` — недоступен.\n"
            },
            "state": {
              "$ref": "#/components/schemas/v1WarehouseScoringStatus"
            }
          }
        },
        "v1SupplyWarehouse": {
          "type": "object",
          "description": "Склады для поставки.",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "draftv1Warehouse": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "bundle_ids": {
              "type": "array",
              "description": "Товарный состав в виде комплекта.",
              "items": {
                "$ref": "#/components/schemas/v1BundleId"
              }
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "restricted_bundle_id": {
              "type": "string",
              "description": "Комплект товаров, которые не попадают в поставку. Используйте параметр в методе [/v1/supply-order/bundle](#operation/SupplyOrderBundle), чтобы получить подробную информацию.\n"
            },
            "status": {
              "$ref": "#/components/schemas/v1WarehouseStatus"
            },
            "supply_warehouse": {
              "$ref": "#/components/schemas/v1SupplyWarehouse"
            },
            "total_rank": {
              "type": "integer",
              "format": "int32",
              "description": "Ранг склада в кластере."
            },
            "total_score": {
              "type": "number",
              "format": "double",
              "description": "Рейтинг склада."
            },
            "travel_time_days": {
              "type": "integer",
              "format": "int64",
              "description": "Предполагаемый срок доставки.",
              "nullable": true
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "draftv1Cluster": {
          "type": "object",
          "properties": {
            "cluster_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор кластера."
            },
            "cluster_name": {
              "type": "string",
              "description": "Название кластера."
            },
            "warehouses": {
              "type": "array",
              "description": "Склады.",
              "items": {
                "$ref": "#/components/schemas/draftv1Warehouse"
              }
            }
          }
        },
        "v1ItemsValidation": {
          "type": "object",
          "properties": {
            "reasons": {
              "type": "array",
              "description": "Причины ошибки.",
              "items": {
                "type": "string"
              }
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v1CalculationError": {
          "type": "object",
          "properties": {
            "error_message": {
              "type": "string",
              "description": "Возможные ошибки:\n- `vdc_is_not_supported` — не поддерживается тип поставки вРЦ;\n- `drop_off_point_warehouse_is_required` — не передано значение `drop_off_point_warehouse_id`;\n- `empty_items_list` — передан пустой список `items`;\n- `items_count_more_than_max` — превышено количество `sku`;\n- `invalid_shipment_type` — неверный тип черновика;\n- `unknown_cluster_ids` — кластер с таким `id` не существует;\n- `items_validation` — ошибки валидации товарного состава;\n- `drop_off_point_does_not_exist` — точка отгрузки с таким `id` не существует;\n- `drop_off_point_has_no_timeslots` — нет доступных таймслотов на точке отгрузки;\n- `total_volume_in_litres_invalid` — объём поставляемых товаров слишком большой для этой точки;\n- `xdock_in_delivery_point_disabled_for_seller` — поставка кросс-докингом через пункт выдачи заказов недоступна для продавца.\n"
            },
            "items_validation": {
              "type": "array",
              "description": "Ошибки валидации.",
              "items": {
                "$ref": "#/components/schemas/v1ItemsValidation"
              }
            },
            "unknown_cluster_ids": {
              "type": "array",
              "description": "Неизвестные идентификаторы кластеров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1CalculationStatus": {
          "type": "string",
          "default": "CALCULATION_STATUS_FAILED",
          "enum": [
            "CALCULATION_STATUS_FAILED",
            "CALCULATION_STATUS_SUCCESS",
            "CALCULATION_STATUS_IN_PROGRESS",
            "CALCULATION_STATUS_EXPIRED"
          ],
          "description": "Статус создания черновика заявки на поставку:\n- `CALCULATION_STATUS_FAILED` — не удалось создать черновик,\n- `CALCULATION_STATUS_SUCCESS` — черновик создан,\n- `CALCULATION_STATUS_IN_PROGRESS` — черновик создаётся,\n- `CALCULATION_STATUS_EXPIRED` — истёк срок действия черновика.\n"
        },
        "v1DraftCreateInfoResponse": {
          "type": "object",
          "properties": {
            "clusters": {
              "type": "array",
              "description": "Кластеры.",
              "items": {
                "$ref": "#/components/schemas/draftv1Cluster"
              }
            },
            "draft_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор черновика заявки на поставку."
            },
            "errors": {
              "type": "array",
              "description": "Ошибки.",
              "items": {
                "$ref": "#/components/schemas/v1CalculationError"
              }
            },
            "status": {
              "$ref": "#/components/schemas/v1CalculationStatus"
            }
          }
        },
        "v1DraftTimeslotInfoRequest": {
          "type": "object",
          "title": "DraftTimeslotInfo messages",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала нужного периода доступных таймслотов."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания нужного периода доступных таймслотов.\n\nМаксимальный период — 28 дней с текущей даты.\n"
            },
            "draft_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор черновика заявки на поставку."
            },
            "warehouse_ids": {
              "type": "array",
              "description": "Идентификаторы складов, для которых нужно получить таймслоты.",
              "maxItems": 10,
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          "required": [
            "date_from",
            "date_to",
            "draft_id",
            "warehouse_ids"
          ]
        },
        "v1DayTimeSlot": {
          "type": "object",
          "description": "Таймслот поставки.",
          "properties": {
            "from_in_timezone": {
              "type": "string",
              "format": "date-time",
              "description": "Начало таймслота."
            },
            "to_in_timezone": {
              "type": "string",
              "format": "date-time",
              "description": "Конец таймслота."
            }
          }
        },
        "v1Day": {
          "type": "object",
          "properties": {
            "date_in_timezone": {
              "type": "string",
              "format": "date-time",
              "description": "Дата таймслотов."
            },
            "timeslots": {
              "type": "array",
              "description": "Таймслоты.",
              "items": {
                "$ref": "#/components/schemas/v1DayTimeSlot"
              }
            }
          }
        },
        "v1DropOffWarehouse": {
          "type": "object",
          "properties": {
            "current_time_in_timezone": {
              "type": "string",
              "format": "date-time",
              "description": "Текущее время в часовом поясе склада."
            },
            "days": {
              "type": "array",
              "description": "Таймслоты по датам.",
              "items": {
                "$ref": "#/components/schemas/v1Day"
              }
            },
            "drop_off_warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_timezone": {
              "type": "string",
              "description": "Часовой пояс склада."
            }
          }
        },
        "v1DraftTimeslotInfoResponse": {
          "type": "object",
          "properties": {
            "drop_off_warehouse_timeslots": {
              "type": "array",
              "description": "Таймслоты складов.",
              "items": {
                "$ref": "#/components/schemas/v1DropOffWarehouse"
              }
            },
            "requested_date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала интересующего периода."
            },
            "requested_date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания интересующего периода."
            }
          }
        },
        "v1DraftSupplyCreateRequest": {
          "type": "object",
          "title": "DraftSupplyCreate",
          "properties": {
            "draft_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор черновика заявки на поставку."
            },
            "timeslot": {
              "$ref": "#/components/schemas/v1DayTimeSlot"
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада отгрузки."
            }
          },
          "required": [
            "draft_id",
            "warehouse_id"
          ]
        },
        "v1DraftSupplyCreateResponse": {
          "type": "object",
          "properties": {
            "operation_id": {
              "type": "string",
              "description": "Идентификатор заявки на поставку."
            }
          }
        },
        "v1DraftSupplyCreateStatusRequest": {
          "type": "object",
          "title": "DraftSupplyCreateStatus",
          "properties": {
            "operation_id": {
              "type": "string",
              "description": "Идентификатор заявки на поставку."
            }
          },
          "required": [
            "operation_id"
          ]
        },
        "DraftSupplyCreateStatusResponseResult": {
          "type": "object",
          "description": "Идентификаторы заявок на поставку.",
          "properties": {
            "order_ids": {
              "type": "array",
              "description": "Идентификаторы заявок на поставку.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1DraftSupplyCreateStatus": {
          "type": "string",
          "default": "DraftSupplyCreateStatusUnknown",
          "enum": [
            "DraftSupplyCreateStatusUnknown",
            "DraftSupplyCreateStatusSuccess",
            "DraftSupplyCreateStatusFailed",
            "DraftSupplyCreateStatusInProgress"
          ],
          "description": "Статус создания заявки на поставку:\n  - `DraftSupplyCreateStatusUnknown` — неизвестный,\n  - `DraftSupplyCreateStatusSuccess` — создана,\n  - `DraftSupplyCreateStatusFailed` — не создана,\n  - `DraftSupplyCreateStatusInProgress` — создаётся.\n"
        },
        "v1DraftSupplyCreateStatusResponse": {
          "type": "object",
          "properties": {
            "error_messages": {
              "type": "array",
              "description": "Ошибки создания заявок.",
              "items": {
                "type": "string"
              }
            },
            "result": {
              "$ref": "#/components/schemas/DraftSupplyCreateStatusResponseResult"
            },
            "status": {
              "$ref": "#/components/schemas/v1DraftSupplyCreateStatus"
            }
          }
        },
        "ValueItem": {
          "type": "object",
          "properties": {
            "barcode": {
              "description": "Штрихкод товара.",
              "type": "string"
            },
            "expires_at": {
              "description": "Годен до.",
              "type": "string",
              "format": "date-time"
            },
            "quant": {
              "description": "Размер кванта.",
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "description": "Количество товара.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "ValueCargoType": {
          "required": [
            "type"
          ],
          "type": "string",
          "description": "Тип грузоместа: \n   - `BOX` — коробка.\n   - `PALLET` — палета.\n",
          "default": "BOX",
          "enum": [
            "BOX",
            "PALLET"
          ]
        },
        "v1CargoesCreateRequestCargoValue": {
          "required": [
            "type"
          ],
          "type": "object",
          "description": "Информация о грузоместе.",
          "properties": {
            "items": {
              "maxItems": 5000,
              "description": "Информация о товарах в грузоместе.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValueItem"
              }
            },
            "type": {
              "$ref": "#/components/schemas/ValueCargoType"
            }
          }
        },
        "v1CargoesCreateRequestCargo": {
          "type": "object",
          "required": [
            "key",
            "value"
          ],
          "properties": {
            "key": {
              "description": "Уникальный ключ для идентификации грузоместа.",
              "type": "string"
            },
            "value": {
              "$ref": "#/components/schemas/v1CargoesCreateRequestCargoValue"
            }
          }
        },
        "v1CargoesCreateRequest": {
          "type": "object",
          "required": [
            "cargoes",
            "supply_id"
          ],
          "properties": {
            "cargoes": {
              "description": "Информация о грузоместах. Вы можете передать не больше 40 палет или 30 коробок.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1CargoesCreateRequestCargo"
              }
            },
            "delete_current_version": {
              "description": "`true`, если нужно удалить предыдущие грузоместа.\n",
              "type": "boolean"
            },
            "supply_id": {
              "description": "Идентификатор поставки.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "CargoesCreateErrorsErrorReason": {
          "type": "string",
          "default": "INVALID_STATE",
          "enum": [
            "INVALID_STATE",
            "VALIDATION_FAILED",
            "WAREHOUSE_LIMITS_EXCEED",
            "SUPPLY_NOT_BELONG_CONTRACTOR",
            "SUPPLY_NOT_BELONG_COMPANY",
            "IS_FINALIZED",
            "SKU_DISTRIBUTION_DISABLED",
            "SUPPLY_IS_NOT_EMPTY",
            "OPERATION_NOT_FOUND",
            "OPERATION_FAILED"
          ]
        },
        "ItemValidationErrorType": {
          "type": "string",
          "description": "Тип ошибки:\n  - `SUPPLY_ITEM_NOT_FOUND` — товар не найден.\n  - `DUPLICATED_SUPPLY_ITEM` — найден дубликат товара.\n  - `BEFORE_DEADLINE` — некорректный срок годности.\n  - `SAME_BARCODES` — у разных SKU одинаковые штрихкоды.\n  - `SAME_ARTICLES` — у разных SKU одинаковые артикулы.\n  - `NOT_UNIQUE_SKU_BY_PRODUCT` — одинаковый SKU в грузоместе используется для разных товаров.\n  - `QUANTITY_NOT_DIVISIBLE_BY_QUANT` — количество SKU в грузоместе не кратно кванту.\n  - `NOT_SINGLE_PALLET_SKU_IN_PALLET_CARGO` — в грузоместе отсутствует палетная SKU.\n  - `NOT_ONE_QUANT_PALLET_SKU` — в квантовом палетном грузоместе должен быть только один квант.\n  - `NOT_ECONOM_SKU` — в эконом-поставке указан не эконом-SKU.\n  - `QUANTITY_LESS_ONE` — количество SKU в эконом-поставке меньше 1.\n  - `SUPPLY_ITEM_WITH_QUANT_NOT_FOUND` — товар не найден по артикулу, штрихкоду и размеру кванта.\n",
          "default": "SUPPLY_ITEM_NOT_FOUND",
          "enum": [
            "SUPPLY_ITEM_NOT_FOUND",
            "DUPLICATED_SUPPLY_ITEM",
            "BEFORE_DEADLINE",
            "SAME_BARCODES",
            "SAME_ARTICLES",
            "NOT_UNIQUE_SKU_BY_PRODUCT",
            "QUANTITY_NOT_DIVISIBLE_BY_QUANT",
            "NOT_SINGLE_PALLET_SKU_IN_PALLET_CARGO",
            "NOT_ONE_QUANT_PALLET_SKU",
            "NOT_ECONOM_SKU",
            "QUANTITY_LESS_ONE",
            "SUPPLY_ITEM_WITH_QUANT_NOT_FOUND"
          ]
        },
        "CargoesCreateErrorsItemValidation": {
          "type": "object",
          "properties": {
            "barcode": {
              "description": "Штрихкод товара.",
              "type": "string"
            },
            "cargo_key": {
              "description": "Ключ грузоместа.",
              "type": "string"
            },
            "quant": {
              "description": "Размер кванта.",
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/ItemValidationErrorType"
            }
          }
        },
        "v1CargoesCreateErrors": {
          "type": "object",
          "description": "Ошибки.",
          "properties": {
            "error_reasons": {
              "description": "Причина ошибки:\n  - `INVALID_STATE` — недопустимое состояние поставки.\n  - `VALIDATION_FAILED` — ошибки валидации.\n  - `WAREHOUSE_LIMITS_EXCEED` — превышены лимиты склада.\n  - `SUPPLY_NOT_BELONG_CONTRACTOR` — поставка не относится к указанному контрагенту.\n  - `SUPPLY_NOT_BELONG_COMPANY` — поставка не относится к указанной компании.\n  - `IS_FINALIZED` — редактирование поставки недоступно.\n  - `SKU_DISTRIBUTION_DISABLED` — распределение состава недоступно.\n  - `SUPPLY_IS_NOT_EMPTY` — поставка содержит распределение состава.\n  - `OPERATION_NOT_FOUND` — операция не найдена.\n  - `OPERATION_FAILED` — ошибка при обработке операции.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CargoesCreateErrorsErrorReason"
              }
            },
            "items_validation": {
              "description": "Ошибки валидации.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CargoesCreateErrorsItemValidation"
              }
            }
          }
        },
        "v1CargoesCreateResponse": {
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            },
            "errors": {
              "$ref": "#/components/schemas/v1CargoesCreateErrors"
            }
          }
        },
        "v1CargoesCreateInfoRequest": {
          "required": [
            "operation_id"
          ],
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "CargoesCreateInfoResponseResultCargoValue": {
          "type": "object",
          "description": "Информация о грузоместе.",
          "properties": {
            "cargo_id": {
              "description": "Идентификатор грузоместа.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "CargoesCreateInfoResponseResultCargo": {
          "type": "object",
          "properties": {
            "key": {
              "description": "Ключ грузоместа.",
              "type": "string"
            },
            "value": {
              "$ref": "#/components/schemas/CargoesCreateInfoResponseResultCargoValue"
            }
          }
        },
        "CargoesCreateInfoResponseResult": {
          "type": "object",
          "description": "Результат запроса.",
          "properties": {
            "cargoes": {
              "description": "Информация о грузоместах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CargoesCreateInfoResponseResultCargo"
              }
            }
          }
        },
        "v1CargoesCreateInfoResponseStatus": {
          "type": "string",
          "description": "Статус формирования грузомест:\n  - `SUCCESS` — успешно.\n  - `IN_PROGRESS` — формируются.\n  - `FAILED` — при формировании грузомест произошла ошибка.\n",
          "default": "SUCCESS",
          "enum": [
            "SUCCESS",
            "IN_PROGRESS",
            "FAILED"
          ]
        },
        "v1CargoesCreateInfoResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CargoesCreateInfoResponseResult"
            },
            "status": {
              "$ref": "#/components/schemas/v1CargoesCreateInfoResponseStatus"
            },
            "errors": {
              "$ref": "#/components/schemas/v1CargoesCreateErrors"
            }
          }
        },
        "v1CargoesLabelCreateRequestCargo": {
          "type": "object",
          "properties": {
            "cargo_id": {
              "description": "Идентификатор грузоместа.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1CargoesLabelCreateRequest": {
          "required": [
            "supply_id"
          ],
          "type": "object",
          "properties": {
            "cargoes": {
              "description": "Информация о грузоместах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1CargoesLabelCreateRequestCargo"
              }
            },
            "supply_id": {
              "description": "Идентификатор поставки.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1CargoesLabelCreateErrorsErrorReason": {
          "type": "string",
          "default": "INVALID_STATE",
          "enum": [
            "INVALID_STATE",
            "OPERATION_NOT_FOUND",
            "OPERATION_FAILED",
            "SUPPLY_NOT_BELONG_CONTRACTOR",
            "SUPPLY_NOT_BELONG_COMPANY",
            "SUPPLY_IS_EMPTY",
            "CARGOES_NOT_FOUND"
          ]
        },
        "v1CargoesLabelCreateErrors": {
          "type": "object",
          "description": "Ошибки.",
          "properties": {
            "error_reasons": {
              "description": "Причина ошибки:\n   - `INVALID_STATE` — недопустимое состояние поставки.\n   - `OPERATION_NOT_FOUND` — операция не найдена.\n   - `OPERATION_FAILED` — операция завершилась с ошибкой.\n   - `SUPPLY_NOT_BELONG_CONTRACTOR` — контрагент не соответствует поставке.\n   - `SUPPLY_NOT_BELONG_COMPANY` — компания не соответствует поставке.\n   - `SUPPLY_IS_EMPTY` — поставка без грузомест.\n   - `CARGOES_NOT_FOUND` — грузоместа не найдены.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1CargoesLabelCreateErrorsErrorReason"
              }
            }
          }
        },
        "v1CargoesLabelCreateResponse": {
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            },
            "errors": {
              "$ref": "#/components/schemas/v1CargoesLabelCreateErrors"
            }
          }
        },
        "v1CargoesLabelGetRequest": {
          "required": [
            "operation_id"
          ],
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции.",
              "type": "string"
            }
          }
        },
        "v1CargoesLabelGetResponseResult": {
          "type": "object",
          "description": "Информация об этикетках.",
          "properties": {
            "file_guid": {
              "description": "Идентификатор для получения файла с этикетками.",
              "type": "string"
            }
          }
        },
        "v1CargoesLabelGetResponseStatus": {
          "type": "string",
          "description": "Статус формирования этикеток:\n- `SUCCESS` — готовы.\n- `IN_PROGRESS` — формируются.\n- `FAILED` — ошибка при формировании.\n",
          "default": "SUCCESS",
          "enum": [
            "SUCCESS",
            "IN_PROGRESS",
            "FAILED"
          ]
        },
        "v1CargoesLabelGetResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1CargoesLabelGetResponseResult"
            },
            "status": {
              "$ref": "#/components/schemas/v1CargoesLabelGetResponseStatus"
            },
            "errors": {
              "$ref": "#/components/schemas/v1CargoesLabelCreateErrors"
            }
          }
        },
        "v1SupplyOrderCancelRequest": {
          "type": "object",
          "properties": {
            "order_id": {
              "description": "Идентификатор заявки на поставку.",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "order_id"
          ]
        },
        "v1SupplyOrderCancelResponse": {
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции на отмену заявки.",
              "type": "string"
            }
          }
        },
        "v1SupplyOrderCancelStatusRequest": {
          "type": "object",
          "properties": {
            "operation_id": {
              "description": "Идентификатор операции на отмену заявки на поставку.",
              "type": "string"
            }
          },
          "required": [
            "operation_id"
          ]
        },
        "SupplyOrderCancelStatusResponseCancelOrderError": {
          "type": "string",
          "enum": [
            "INVALID_ORDER_STATE",
            "ORDER_IS_VIRTUAL",
            "ORDER_DOES_NOT_BELONG_TO_CONTRACTOR",
            "ORDER_DOES_NOT_BELONG_TO_COMPANY",
            "OTHER_ASYNCHRONOUS_OPERATION_IN_PROGRESS"
          ]
        },
        "CancelSupplyResultsCancelSupplyError": {
          "type": "string",
          "enum": [
            "INVALID_SUPPLY_STATE",
            "SUPPLY_DOES_NOT_BELONG_TO_CONTRACTOR",
            "SUPPLY_DOES_NOT_BELONG_TO_COMPANY",
            "SUPPLY_DOES_NOT_BELONG_TO_ORDER",
            "SUPPLY_BELONGS_TO_VIRTUAL_ORDER",
            "OTHER_ASYNCHRONOUS_OPERATION_IN_PROGRESS"
          ]
        },
        "SupplyOrderCancelStatusResponseCancelSupplyResults": {
          "type": "object",
          "properties": {
            "error_reasons": {
              "description": "Причина, по которой не удалось отменить поставки:\n  - `INVALID_SUPPLY_STATE` — неверный статус поставки.\n  - `SUPPLY_DOES_NOT_BELONG_TO_CONTRACTOR` — поставка не принадлежит юридическому лицу.\n  - `SUPPLY_DOES_NOT_BELONG_TO_COMPANY` — поставка не принадлежит продавцу.\n  - `SUPPLY_DOES_NOT_BELONG_TO_ORDER` — поставка не принадлежит заявке на поставку.\n  - `SUPPLY_BELONGS_TO_VIRTUAL_ORDER` — поставка принадлежит виртуальной заявке на поставку.\n  - `OTHER_ASYNCHRONOUS_OPERATION_IN_PROGRESS` — поставка в процессе отмены.\n",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CancelSupplyResultsCancelSupplyError"
              }
            },
            "is_supply_cancelled": {
              "description": "`true`, если поставка отменена.\n",
              "type": "boolean"
            },
            "supply_id": {
              "description": "Идентификатор поставки.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "SupplyOrderCancelStatusResponseResult": {
          "type": "object",
          "description": "Информация об отмене заявки на поставку.",
          "properties": {
            "is_order_cancelled": {
              "description": "`true`, если заявка на поставку отменена.\n",
              "type": "boolean"
            },
            "supplies": {
              "description": "Список отменённых поставок.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SupplyOrderCancelStatusResponseCancelSupplyResults"
              }
            }
          }
        },
        "v1SupplyOrderCancelStatusResponseStatus": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "IN_PROGRESS",
            "ERROR"
          ],
          "description": "Статус отмены заявки на поставку. Возможные значения:\n- `SUCCESS` — заявка отменена.\n- `IN_PROGRESS` — заявки в процессе отмены.\n- `ERROR` — ошибка.\n"
        },
        "v1SupplyOrderCancelStatusResponse": {
          "type": "object",
          "properties": {
            "error_reasons": {
              "type": "array",
              "description": "Причина, по которой не удалось отменить заявку на поставку:\n  - `INVALID_ORDER_STATE` — неверный статус заявки на поставку.\n  - `ORDER_IS_VIRTUAL` — заявка виртуальная. \n  - `ORDER_DOES_NOT_BELONG_TO_CONTRACTOR` —  заявка на поставку не принадлежит вашему юридическому лицу.\n  - `ORDER_DOES_NOT_BELONG_TO_COMPANY` — заявка на поставку не принадлежит продавцу. \n  - `OTHER_ASYNCHRONOUS_OPERATION_IN_PROGRESS` — заявка на поставку в процессе отмены.\n",
              "items": {
                "$ref": "#/components/schemas/SupplyOrderCancelStatusResponseCancelOrderError"
              }
            },
            "result": {
              "$ref": "#/components/schemas/SupplyOrderCancelStatusResponseResult"
            },
            "status": {
              "$ref": "#/components/schemas/v1SupplyOrderCancelStatusResponseStatus"
            }
          }
        },
        "v5FbsPostingProductExemplarCreateOrGetV5Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string"
            }
          },
          "required": [
            "posting_number"
          ]
        },
        "v5FbsPostingProductExemplarCreateOrGetV5ResponseProductExemplar": {
          "type": "object",
          "properties": {
            "exemplar_id": {
              "description": "Идентификатор экземпляра.",
              "type": "integer",
              "format": "int64"
            },
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "is_gtd_absent": {
              "description": "Признак того, что не указан номер грузовой таможенной декларации (ГТД).",
              "type": "boolean"
            },
            "is_rnpt_absent": {
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ).",
              "type": "boolean"
            },
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "type": "string"
            },
            "rnpt": {
              "description": "Регистрационный номер партии товара (РНПТ).",
              "type": "string"
            },
            "jw_uin": {
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия.",
              "type": "string"
            }
          }
        },
        "v5FbsPostingProductExemplarCreateOrGetV5ResponseProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarCreateOrGetV5ResponseProductExemplar"
              }
            },
            "is_gtd_needed": {
              "description": "Признак того, что необходимо передать номер грузовой таможенной декларации (ГТД) для продукта и отправления.",
              "type": "boolean"
            },
            "is_mandatory_mark_needed": {
              "description": "Признак того, что необходимо передать маркировку «Честный ЗНАК».",
              "type": "boolean"
            },
            "is_rnpt_needed": {
              "description": "Признак того, что необходимо передать номер партии товара (РНПТ).",
              "type": "boolean"
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            },
            "quantity": {
              "description": "Количество экземпляров.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v5FbsPostingProductExemplarCreateOrGetV5Response": {
          "type": "object",
          "properties": {
            "multi_box_qty": {
              "description": "Количество коробок, в которые упакован товар.",
              "type": "integer",
              "format": "int32"
            },
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string"
            },
            "products": {
              "description": "Список товаров.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarCreateOrGetV5ResponseProduct"
              }
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequestProductExemplar": {
          "required": [
            "mandatory_mark"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "jw_uin": {
              "type": "array of strings",
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequestProduct": {
          "required": [
            "product_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequestProductExemplar"
              }
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequestProduct"
              }
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar": {
          "type": "object",
          "title": "object",
          "properties": {
            "errors": {
              "description": "Ошибки валидации экземпляра.",
              "items": {
                "type": "string"
              }
            },
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "type": "string"
            },
            "jw_uin": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "valid": {
              "description": "Результат прохождения проверки. `true`, если код экземпляра соответствует требованиям.",
              "type": "boolean"
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Код ошибки."
            },
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar"
              }
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            },
            "valid": {
              "description": "Результат прохождения проверки. `true`, если коды всех экземпляров соответствуют требованиям.",
              "type": "boolean"
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct"
              }
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResult"
            }
          }
        },
        "fbsv4SetProductExemplarRequestProductExemplar": {
          "type": "object",
          "title": "object",
          "properties": {
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "jw_uin": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "fbsv4SetProductExemplarRequestProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/fbsv4SetProductExemplarRequestProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор FBS товара в системе Ozon — SKU."
            }
          }
        },
        "fbsv4SetProductExemplarRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/fbsv4SetProductExemplarRequestProduct"
              }
            }
          }
        },
        "fbsv4SetProductExemplarResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат обработки запроса. `true`, если запрос обработан успешно.",
              "type": "boolean"
            }
          }
        },
        "v5FbsPostingProductExemplarSetV5RequestProductExemplar": {
          "type": "object",
          "properties": {
            "exemplar_id": {
              "description": "Идентификатор экземпляра.",
              "type": "integer",
              "format": "int64"
            },
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "is_gtd_absent": {
              "description": "Признак того, что не указан номер грузовой таможенной декларации (ГТД).",
              "type": "boolean"
            },
            "is_rnpt_absent": {
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ).",
              "type": "boolean"
            },
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "type": "string"
            },
            "rnpt": {
              "description": "Регистрационный номер партии товара (РНПТ).",
              "type": "string"
            },
            "jw_uin": {
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия.",
              "type": "string"
            }
          },
          "required": [
            "exemplar_id"
          ]
        },
        "v5FbsPostingProductExemplarSetV5RequestProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarSetV5RequestProductExemplar"
              }
            },
            "is_gtd_needed": {
              "description": "Признак того, что необходимо передать номер грузовой таможенной декларации (ГТД) для продукта и отправления.",
              "type": "boolean"
            },
            "is_mandatory_mark_needed": {
              "description": "Признак того, что необходимо передать маркировку «Честный ЗНАК».",
              "type": "boolean"
            },
            "is_rnpt_needed": {
              "description": "Признак того, что необходимо передать номер партии товара (РНПТ).",
              "type": "boolean"
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — `product_id`.",
              "type": "integer",
              "format": "int64"
            },
            "quantity": {
              "description": "Количество экземпляров.",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "product_id"
          ]
        },
        "v5FbsPostingProductExemplarSetV5Request": {
          "type": "object",
          "properties": {
            "multi_box_qty": {
              "description": "Количество коробок, в которые упакован товар.",
              "type": "integer",
              "format": "int32"
            },
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string",
              "required": true
            },
            "products": {
              "description": "Список товаров.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarSetV5RequestProduct"
              }
            }
          },
          "required": [
            "products",
            "posting_number"
          ]
        },
        "v5FbsPostingProductExemplarSetV5Response": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат обработки запроса. `true`, если запрос обработан успешно.",
              "type": "boolean"
            }
          }
        },
        "fbsv4GetProductExemplarStatusRequest": {
          "required": [
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponseProductExemplar": {
          "type": "object",
          "title": "object",
          "properties": {
            "exemplar_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор экземпляра."
            },
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "gtd_check_status": {
              "type": "string",
              "description": "Статус проверки грузовой таможенной декларации."
            },
            "gtd_error_codes": {
              "description": "Коды ошибок при проверке грузовой таможенной декларации.",
              "items": {
                "type": "string"
              }
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "jw_uin": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "jw_uin_check_status": {
              "type": "string",
              "description": "Статус проверки уникального идентификационного номера (УИН) ювелирного изделия."
            },
            "jw_uin_error_codes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Коды ошибок при проверке уникального идентификационного номера (УИН) ювелирного изделия."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "mandatory_mark_check_status": {
              "type": "string",
              "description": "Статус проверки маркировки «Честный ЗНАК»:\n- `processing` — маркировка обрабатывается.\n- `passed` — проверка пройдена.\n- `failed` — проверка не пройдена.\n"
            },
            "mandatory_mark_error_codes": {
              "description": "Коды ошибок при проверке маркировки «Честный ЗНАК».",
              "items": {
                "type": "string"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "rnpt_check_status": {
              "type": "string",
              "description": "Статус проверки регистрационного номера партии товара."
            },
            "rnpt_error_codes": {
              "items": {
                "type": "string"
              },
              "description": "Коды ошибок при проверке регистрационного номера партии товара."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponseProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponseProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponseProduct"
              }
            },
            "status": {
              "description": "Статус проверки всех экземпляров и доступности сборки:\n- `ship_available` — сборка доступна,\n- `ship_not_available` — сборка недоступна,\n- `validation_in_process` — экземпляры на проверке.\n",
              "type": "string"
            }
          }
        },
        "FbsPostingShipV4RequestPackageProduct": {
          "required": [
            "product_id",
            "quantity"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество экземпляров."
            }
          }
        },
        "FbsPostingShipV4RequestPackage": {
          "required": [
            "products"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4RequestPackageProduct"
              },
              "description": "Список товаров в отправлении."
            }
          }
        },
        "FbsPostingShipV4RequestWith": {
          "type": "object",
          "title": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "additional_data": {
              "type": "boolean",
              "description": "Чтобы получить дополнительную информацию, передайте `true`."
            }
          }
        },
        "fbsv4FbsPostingShipV4Request": {
          "required": [
            "packages",
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "packages": {
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4RequestPackage"
              },
              "description": "Список упаковок. Каждая упаковка содержит список отправлений, на которые делится заказ."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "with": {
              "$ref": "#/components/schemas/FbsPostingShipV4RequestWith"
            }
          }
        },
        "fbsv4PostingProductDetailWithoutDimensions": {
          "type": "object",
          "title": "object",
          "properties": {
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "description": "Название товара.",
              "type": "string"
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          }
        },
        "FbsPostingShipV4ResponseShipAdditionalData": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/fbsv4PostingProductDetailWithoutDimensions"
              }
            }
          }
        },
        "fbsv4FbsPostingShipV4Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "additional_data": {
              "description": "Дополнительная информация об отправлениях.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4ResponseShipAdditionalData"
              }
            },
            "result": {
              "description": "Результат сборки отправлений.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v4FbsPostingShipPackageV4RequestProduct": {
          "type": "object",
          "properties": {
            "exemplarsIds": {
              "description": "Идентификаторы экземпляров товара.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца — SKU.",
              "type": "integer",
              "format": "int64"
            },
            "quantity": {
              "description": "Количество экземпляров.",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "product_id",
            "quantity"
          ]
        },
        "v4FbsPostingShipPackageV4Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string"
            },
            "products": {
              "description": "Список товаров в отправлении.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v4FbsPostingShipPackageV4RequestProduct"
              }
            }
          },
          "required": [
            "posting_number"
          ]
        },
        "v4FbsPostingShipPackageV4Response": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Номера отправлений, сформированные после сборки.",
              "type": "string"
            }
          }
        },
        "ExemplarsMarks": {
          "type": "object",
          "properties": {
            "mark": {
              "type": "string",
              "description": "Значение кода маркировки."
            },
            "mark_type": {
              "type": "string",
              "description": "Тип кода маркировки:\n - `mandatory_mark` — обязательная маркировка «Честный ЗНАК»;\n - `jw_uin` — уникальный идентификационный номер (УИН) ювелирного изделия.\n"
            }
          }
        },
        "FbsPostingProductExemplarSetV6RequestExemplars": {
          "type": "object",
          "properties": {
            "exemplar_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор экземпляра."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер грузовой таможенной декларации (ГТД)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            },
            "marks": {
              "description": "Ошибки при проверке контрольных идентификационных знаков (КИЗ).",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExemplarsMarks"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "FbsPostingProductExemplarSetV6RequestProducts": {
          "type": "object",
          "properties": {
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarSetV6RequestExemplars"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v6FbsPostingProductExemplarSetV6Request": {
          "type": "object",
          "properties": {
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarSetV6RequestProducts"
              }
            }
          }
        },
        "v6FbsPostingProductExemplarCreateOrGetV6Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "ExemplarMark": {
          "type": "object",
          "properties": {
            "mark": {
              "type": "string",
              "description": "Значение кода маркировки."
            },
            "mark_type": {
              "type": "string",
              "description": "Тип кода маркировки:\n - `mandatory_mark` — обязательная маркировка «Честный ЗНАК»;\n - `jw_uin` — уникальный идентификационный номер (УИН) ювелирного изделия.\n"
            }
          }
        },
        "ProductExemplar": {
          "type": "object",
          "properties": {
            "exemplar_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор экземпляра."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер грузовой таможенной декларации (ГТД)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            },
            "marks": {
              "type": "array",
              "description": "Ошибки при проверке контрольных идентификационных знаков (КИЗ).",
              "items": {
                "$ref": "#/components/schemas/ExemplarMark"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "FbsPostingProductExemplarCreateOrGetV6ResponseProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/ProductExemplar"
              }
            },
            "is_gtd_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать номер грузовой таможенной декларации (ГТД) для продукта и отправления."
            },
            "is_jw_uin_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать уникальный идентификационный номер ювелирного изделия (УИН)."
            },
            "is_mandatory_mark_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать маркировку «Честный ЗНАК»."
            },
            "is_mandatory_mark_possible": {
              "type": "boolean",
              "description": "Признак того, что возможно заполнить маркировку «Честный ЗНАК»."
            },
            "is_rnpt_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать номер партии товара (РНПТ)."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество экземпляров."
            }
          }
        },
        "v6FbsPostingProductExemplarCreateOrGetV6Response": {
          "type": "object",
          "properties": {
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarCreateOrGetV6ResponseProduct"
              }
            }
          }
        },
        "v5FbsPostingProductExemplarStatusV5Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v5FbsPostingProductExemplarStatusV5ResponseProductExemplarMark": {
          "type": "object",
          "properties": {
            "check_status": {
              "type": "string",
              "description": "Статус проверки."
            },
            "error_codes": {
              "description": "Ошибки при проверке контрольных идентификационных знаков (КИЗ).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mark": {
              "type": "string",
              "description": "Значение кода маркировки."
            },
            "mark_type": {
              "type": "string",
              "description": "Тип кода маркировки:\n - `mandatory_mark` — обязательная маркировка «Честный ЗНАК»;\n - `jw_uin` — уникальный идентификационный номер (УИН) ювелирного изделия.\n"
            }
          }
        },
        "v5FbsPostingProductExemplarStatusV5ResponseProductExemplar": {
          "type": "object",
          "properties": {
            "exemplar_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор экземпляра."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "gtd_check_status": {
              "type": "string",
              "description": "Статус проверки грузовой таможенной декларации."
            },
            "gtd_error_codes": {
              "type": "array",
              "description": "Коды ошибок при проверке грузовой таможенной декларации.",
              "items": {
                "type": "string"
              }
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации (ГТД)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            },
            "marks": {
              "type": "array",
              "description": "Список контрольных идентификационных знаков (КИЗ) в одном экземпляре.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarStatusV5ResponseProductExemplarMark"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "rnpt_check_status": {
              "type": "string",
              "description": "Статус проверки регистрационного номера партии товара."
            },
            "rnpt_error_codes": {
              "type": "array",
              "description": "Коды ошибок при проверке регистрационного номера партии товара.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v5FbsPostingProductExemplarStatusV5ResponseProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarStatusV5ResponseProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v5FbsPostingProductExemplarStatusV5Response": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarStatusV5ResponseProduct"
              }
            },
            "status": {
              "type": "string",
              "description": "Статус проверки всех экземпляров и доступности сборки:\n - `ship_available` — сборка доступна,\n - `ship_not_available` — сборка недоступна,\n - `validation_in_process` — экземпляры на проверке.\n"
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5RequestProductExemplarMark": {
          "type": "object",
          "properties": {
            "mark": {
              "type": "string",
              "description": "Значение кода маркировки."
            },
            "mark_type": {
              "type": "string",
              "description": "Тип кода маркировки:\n - `mandatory_mark` — обязательная маркировка «Честный ЗНАК»;\n - `jw_uin` — уникальный идентификационный номер (УИН) ювелирного изделия.\n"
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5RequestProductExemplar": {
          "type": "object",
          "properties": {
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "marks": {
              "type": "array",
              "description": "Список контрольных идентификационных знаков (КИЗ) в одном экземпляре.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5RequestProductExemplarMark"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5RequestProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5RequestProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string"
            },
            "products": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5RequestProduct"
              }
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5ResponseProductExemplarMark": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "description": "Ошибки при проверке контрольных идентификационных знаков (КИЗ).",
              "items": {
                "type": "string"
              }
            },
            "mark": {
              "type": "string",
              "description": "Значение кода маркировки."
            },
            "mark_type": {
              "type": "string",
              "description": "Тип кода маркировки:\n - `mandatory_mark` — обязательная маркировка «Честный ЗНАК»;\n - `jw_uin` — уникальный идентификационный номер (УИН) ювелирного изделия.\n"
            },
            "valid": {
              "type": "boolean",
              "description": "Результат прохождения проверки. `true`, если контрольный идентификационный знак (КИЗ) соответствует требованиям."
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5ResponseProductExemplar": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "description": "Ошибки валидации экземпляра.",
              "items": {
                "type": "string"
              }
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "marks": {
              "type": "array",
              "description": "Список контрольных идентификационных знаков (КИЗ) в одном экземпляре.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5ResponseProductExemplarMark"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "valid": {
              "type": "boolean",
              "description": "Результат прохождения проверки. `true`, если код экземпляра соответствует требованиям."
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5ResponseProduct": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Код ошибки."
            },
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5ResponseProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "valid": {
              "type": "boolean",
              "description": "Результат прохождения проверки. `true`, если коды всех экземпляров соответствуют требованиям."
            }
          }
        },
        "v5FbsPostingProductExemplarValidateV5Response": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5ResponseProduct"
              }
            }
          }
        },
        "v1FbsPostingProductExemplarUpdateRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1CarriageCreateRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки. По умолчанию — текущая дата."
            }
          }
        },
        "v1CarriageCreateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор перевозки."
            }
          }
        },
        "v1CarriageApproveRequest": {
          "type": "object",
          "title": "object",
          "required": [
            "carriage_id"
          ],
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор отгрузки.",
              "required": true
            },
            "containers_count": {
              "format": "int32",
              "type": "integer",
              "description": "Количество грузовых мест. \n\nИспользуйте параметр, если вы подключены к доверительной приёмке и отгружаете заказы грузовыми местами. Если вы не подключены к доверительной приёмке, пропустите его.\n"
            }
          }
        },
        "v1CarriageApproveResponse": {
          "type": "object",
          "title": "object"
        },
        "v1CarriageDeliveryListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки. По умолчанию — текущая дата."
            }
          }
        },
        "v1CarriageDeliveryListResponseResultCarriages": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "int64",
              "description": "Идентификатор перевозки."
            },
            "postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений в перевозке."
            },
            "quantum_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество квантов в перевозке."
            },
            "status": {
              "type": "string",
              "description": "Статус перевозки для запрашиваемых метода и даты."
            }
          }
        },
        "v1CarriageDeliveryListResponseResultErrors": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "description": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "status": {
              "type": "string",
              "description": "Статус ошибки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1CarriageDeliveryListResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "assembly_list_availability": {
              "type": "boolean",
              "description": "`true`, если доступен лист подбора.\n"
            },
            "can_create_another_carriage": {
              "type": "boolean",
              "description": "`true`, если можно создать ещё одну перевозку.\n"
            },
            "carriage_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений в перевозке."
            },
            "carriage_quantum_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество квантов в перевозке."
            },
            "carriages": {
              "type": "array",
              "items": {
                "type": "string",
                "$ref": "#/components/schemas/v1CarriageDeliveryListResponseResultCarriages"
              },
              "description": "Список перевозок."
            },
            "cut_in": {
              "type": "string",
              "format": "date-time",
              "description": "Время начала сборки и часовой пояс времени склада."
            },
            "delivery_method_id": {
              "type": "integer",
              "description": "Идентификатор метода доставки."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "delivery_method_status": {
              "type": "string",
              "description": "Статус метода доставки."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки."
            },
            "dropoff_address": {
              "type": "string",
              "description": "Адрес точки отгрузки."
            },
            "dropoff_change_availability": {
              "type": "string",
              "description": "Статус возможности смены точки отгрузки."
            },
            "dropoff_point_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор точки отгрузки."
            },
            "dropoff_point_type": {
              "type": "string",
              "description": "Способ отгрузки."
            },
            "errors": {
              "items": {
                "$ref": "#/components/schemas/v1CarriageDeliveryListResponseResultErrors"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "first_mile_changing": {
              "type": "boolean",
              "description": "`true`, если точка отгрузки изменилась.\n"
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили."
            },
            "has_entrusted_acceptance": {
              "type": "boolean",
              "description": "Признак доверительной приёмки. `true`, если доверительная приёмка включена на складе."
            },
            "integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки."
            },
            "is_presort": {
              "type": "boolean",
              "description": "`true`, если отгрузка с предсортировкой.\n"
            },
            "is_rfbs": {
              "type": "boolean",
              "description": "`true`, если склад работает по схеме rFBS.\n"
            },
            "recommended_time_local": {
              "type": "string",
              "description": "Рекомендуемое местное время отгрузки в пункт приёма заказов."
            },
            "recommended_time_utc_offset_in_minutes": {
              "type": "number",
              "format": "int32",
              "description": "Смещение часового пояса рекомендуемого времени отгрузки от UTC-0 в минутах."
            },
            "cutoff_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время, до которых нужно собрать отправление."
            },
            "mandatory_packaged_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество «обязательных» собранных отправлений."
            },
            "mandatory_packaged_quantum_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество «обязательных» собранных квантов."
            },
            "mandatory_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений, которые нужно собрать."
            },
            "mandatory_quantum_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество квантов, которые нужно собрать."
            },
            "optional_packaged_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество собранных «необязательных» отправлений."
            },
            "postings_for_another_carriage_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений, которые могут попасть в следующую перевозку."
            },
            "quantum_for_another_carriage_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество квантов, которые могут попасть в следующую перевозку."
            },
            "timeslot_from": {
              "type": "string",
              "format": "date-time",
              "description": "Начало таймслота в точке отгрузки."
            },
            "timeslot_to": {
              "type": "string",
              "format": "date-time",
              "description": "Окончание таймслота в точке отгрузки."
            },
            "tpl_provider_icon_url": {
              "type": "string",
              "description": "Ссылка на иконку службы доставки."
            },
            "tpl_provider_name": {
              "type": "string",
              "description": "Название службы доставки."
            },
            "warehouse_city": {
              "type": "string",
              "description": "Город склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            }
          }
        },
        "v1CarriageDeliveryListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1CarriageDeliveryListResponseResult"
              }
            }
          }
        },
        "postingPostingFBSActCreateRequest": {
          "required": [
            "delivery_method_id"
          ],
          "properties": {
            "containers_count": {
              "format": "int32",
              "type": "integer",
              "description": "Количество грузовых мест. \n\nИспользуйте параметр, если вы подключены к доверительной приёмке и отгружаете заказы грузовыми местами. Если вы не подключены к доверительной приёмке, пропустите его.\n\n[Подробнее в Базе знаний продавца](https://docs.ozon.ru/partners/prodayoa-so-svoego-sklada-fbs/doveritel-naya-priemka-gruzovogo-mesta)\n"
            },
            "delivery_method_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор метода доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList)."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "PostingFBSActCreateResponseAct": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование штрихкода и документов."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат работы метода."
        },
        "postingPostingFBSActCreateResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/PostingFBSActCreateResponseAct"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingv1GetCarriageAvailableListRequest": {
          "required": [
            "delivery_method_id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Фильтр по методу доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList)."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки. По умолчанию — текущая дата."
            }
          }
        },
        "ResultError": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "status": {
              "type": "string",
              "description": "Тип ошибки:\n- `warning` — предупреждение;\n- `critical` — критическая ошибка.\n"
            }
          }
        },
        "GetCarriageAvailableListResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор перевозки (также номер задания на формирование документов)."
            },
            "carriage_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений в перевозке."
            },
            "carriage_status": {
              "type": "string",
              "description": "Статус перевозки для запрашиваемого метода доставки и даты отгрузки."
            },
            "cutoff_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время, до которых нужно собрать отправление."
            },
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "errors": {
              "description": "Список ошибок.",
              "items": {
                "$ref": "#/components/schemas/ResultError"
              }
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили."
            },
            "has_entrusted_acceptance": {
              "type": "boolean",
              "description": "Признак доверительной приёмки. `true`, если доверительная приёмка включена на складе."
            },
            "mandatory_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений, которые нужно собрать."
            },
            "mandatory_packaged_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество собранных отправлений."
            },
            "recommended_time_local": {
              "type": "string",
              "description": "Рекомендуемое местное время отгрузки на пункт приёма заказов."
            },
            "recommended_time_utc_offset_in_minutes": {
              "type": "number",
              "format": "int32",
              "description": "Смещение часового пояса рекомендуемого времени отгрузки от UTC-0 в минутах."
            },
            "tpl_provider_icon_url": {
              "type": "string",
              "description": "Ссылка на иконку службы доставки."
            },
            "tpl_provider_name": {
              "type": "string",
              "description": "Название службы доставки."
            },
            "warehouse_city": {
              "type": "string",
              "description": "Город склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_timezone": {
              "type": "string",
              "description": "Часовой пояс, в котором находится склад."
            }
          }
        },
        "postingv1GetCarriageAvailableListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/GetCarriageAvailableListResponseResult"
              }
            }
          }
        },
        "carriageCarriageGetRequest": {
          "required": [
            "carriage_id"
          ],
          "type": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор перевозки."
            }
          }
        },
        "carriageCarriageGetResponseCancelAvailability": {
          "type": "object",
          "title": "object",
          "description": "Возможность отмены.",
          "properties": {
            "is_cancel_available": {
              "type": "boolean",
              "description": "`true`, если перевозку можно отменить.\n"
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему перевозку нельзя отменить."
            }
          }
        },
        "carriageCarriageGetResponse": {
          "type": "object",
          "properties": {
            "act_type": {
              "type": "string",
              "description": "Тип акта приёма-передачи. Актуально для продавцов FBS."
            },
            "is_waybill_enabled": {
              "type": "boolean",
              "description": "`true`, если доступна печать транспортной накладной.\n"
            },
            "is_econom": {
              "type": "boolean",
              "description": "`true`, если отгрузка относится к товарам «Суперэконом».\n"
            },
            "arrival_pass_ids": {
              "type": "array",
              "description": "Список идентификаторов пропусков, оформленных на перевозку.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "available_actions": {
              "type": "array",
              "description": "Доступные действия с перевозкой.",
              "items": {
                "type": "string"
              }
            },
            "cancel_availability": {
              "$ref": "#/components/schemas/carriageCarriageGetResponseCancelAvailability"
            },
            "carriage_id": {
              "type": "integer",
              "description": "Идентификатор перевозки.",
              "format": "int64"
            },
            "company_id": {
              "type": "integer",
              "description": "Идентификатор продавца.",
              "format": "int64"
            },
            "containers_count": {
              "type": "integer",
              "description": "Количество грузовых мест.",
              "format": "int32"
            },
            "created_at": {
              "type": "string",
              "description": "Дата создания перевозки.",
              "format": "date-time"
            },
            "delivery_method_id": {
              "type": "integer",
              "description": "Идентификатор метода доставки.",
              "format": "int64"
            },
            "departure_date": {
              "type": "string",
              "description": "Дата выполнения перевозки."
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили."
            },
            "has_postings_for_next_carriage": {
              "type": "boolean",
              "description": "`true`, если есть отправления, которые не попали в перевозку, но нужно отгрузить.\n"
            },
            "integration_type": {
              "type": "string",
              "description": "Тип перевозки."
            },
            "is_container_label_printed": {
              "type": "boolean",
              "description": "`true`, если вы уже напечатали этикетки на грузовые места.\n"
            },
            "is_partial": {
              "type": "boolean",
              "description": "`true`, если перевозка частичная.\n"
            },
            "partial_num": {
              "type": "integer",
              "description": "Порядковый номер частичной перевозки.",
              "format": "int64"
            },
            "retry_count": {
              "type": "integer",
              "description": "Количество повторных попыток создания перевозки.",
              "format": "int32"
            },
            "status": {
              "type": "string",
              "description": "Статус перевозки:\n- `received` — идёт приёмка,\n- `closed` — завершена после приёмки,\n- `sended` — отправлена,\n- `cancelled` — отменена.\n"
            },
            "tpl_provider_id": {
              "type": "integer",
              "description": "Идентификатор провайдера доставки.",
              "format": "int64"
            },
            "updated_at": {
              "type": "string",
              "description": "Дата последнего обновления информации о перевозке.",
              "format": "date-time"
            },
            "warehouse_id": {
              "type": "integer",
              "description": "Идентификатор склада.",
              "format": "int64"
            }
          }
        },
        "v1ProductFbsSplit": {
          "type": "object",
          "title": "PostingFbsSplit",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "quantity": {
              "type": "integer",
              "format": "int64",
              "description": "Количество экземпляров."
            }
          },
          "required": [
            "product_id",
            "quantity"
          ]
        },
        "v1PostingFbsSplitRequestPosting": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "description": "Список товаров в заказе.",
              "items": {
                "$ref": "#/components/schemas/v1ProductFbsSplit"
              }
            }
          },
          "required": [
            "products"
          ]
        },
        "v1PostingFbsSplitRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "postings": {
              "type": "array",
              "description": "Список отправлений, на которые поделится заказ. За один запрос можно разделить один заказ.",
              "items": {
                "$ref": "#/components/schemas/v1PostingFbsSplitRequestPosting"
              }
            }
          },
          "required": [
            "posting_number",
            "postings"
          ]
        },
        "v1PostingFbsSplitResponsePostingParent": {
          "type": "object",
          "description": "Информация об изначальном отправлении.",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер изначального отправления."
            },
            "products": {
              "type": "array",
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/v1ProductFbsSplit"
              }
            }
          }
        },
        "v1PostingFbsSplitResponsePosting": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "type": "array",
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/v1ProductFbsSplit"
              }
            }
          }
        },
        "v1PostingFbsSplitResponse": {
          "type": "object",
          "properties": {
            "parent_posting": {
              "$ref": "#/components/schemas/v1PostingFbsSplitResponsePostingParent"
            },
            "postings": {
              "type": "array",
              "description": "Список отправлений, на которые разделился заказ.",
              "items": {
                "$ref": "#/components/schemas/v1PostingFbsSplitResponsePosting"
              }
            }
          }
        },
        "v2PostingFBSActGetPostingsRequest": {
          "required": [
            "id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор акта."
            }
          }
        },
        "v2PostingFBSActGetProducts": {
          "type": "object",
          "title": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v2PostingFBSActGetPostingsResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор акта."
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления."
            },
            "seller_error": {
              "type": "string",
              "description": "Расшифровка кода ошибки."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время обновления записи об отправлении."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время создания записи об отправлении."
            },
            "products": {
              "type": "array",
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActGetProducts"
              }
            }
          }
        },
        "v2PostingFBSActGetPostingsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Информация об отправлениях.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActGetPostingsResult"
              }
            }
          }
        },
        "postingPostingFBSActGetContainerLabelsRequest": {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingFBSActGetContainerLabelsResponse": {
          "properties": {
            "file_content": {
              "format": "byte",
              "type": "string",
              "description": "Содержание файла в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2PostingFBSGetBarcodeRequest": {
          "required": [
            "id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор перевозки."
            }
          }
        },
        "v2PostingFBSGetBarcodeResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "file_content": {
              "type": "string",
              "description": "Изображение со штрихкодом в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "v2PostingFBSGetBarcodeTextResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "string",
              "description": "Штрихкод в текстовом виде."
            }
          }
        },
        "v2PostingFBSDigitalActCheckStatusRequest": {
          "required": [
            "id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          }
        },
        "v2PostingFBSDigitalActCheckStatusResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на формирование документов."
            },
            "status": {
              "type": "string",
              "description": "Cтатус формирования документов:\n- `FORMING` — ещё не готовы,\n- `FORMED` — сформированы успешно,\n- `CONFIRMED` — подписаны Ozon,\n- `CONFIRMED_WITH_MISMATCH` — подписаны Ozon с расхождениями,\n- `NOT_FOUND` — документы не найдены,\n- `UNKNOWN_ERROR` — произошла ошибка.\n"
            }
          }
        },
        "postingPostingFBSGetActRequest": {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingFBSGetActResponse": {
          "properties": {
            "file_content": {
              "format": "byte",
              "type": "string",
              "description": "Содержание файла в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2PostingFBSActListFilter": {
          "type": "object",
          "title": "object",
          "description": "Параметры фильтра.",
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Начальная дата создания отгрузок."
            },
            "date_to": {
              "type": "string",
              "description": "Конечная дата создания отгрузок."
            },
            "integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `aggregator` — доставка внешней службой, Ozon регистрирует заказ.\n  - `3pl_tracking` — доставка внешней службой, продавец регистрирует заказ.\n  - `non_integrated` — доставка силами продавца.\n"
            },
            "status": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Статусы перевозок:\n  - `new` — новая,\n  - `awaiting_retry` — повторная попытка создания,\n  - `in_process` — собирается,\n  - `success` — создана,\n  - `error` — ошибка при создании,\n  - `sended` — отправлена,\n  - `received` — получена,\n  - `formed` — собрана,\n  - `cancelled` — отменена,\n  - `pending` — в очереди на сборку,\n  - `completion_enqueued` — в очереди на завершение,\n  - `completion_processing` — в процессе завершения,\n  - `completion_failed` — ошибка при завершении,\n  - `cancelation_enqueued` — в очереди на отмену,\n  - `cancelation_processing` — в процессе отмены,\n  - `cancelation_failed` — ошибка при отмене,\n  - `completed` — завершена,\n  - `closed` — закрыта.\n"
            }
          },
          "required": [
            "date_from",
            "date_to"
          ]
        },
        "v2PostingFBSActListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v2PostingFBSActListFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество актов в ответе."
            }
          },
          "required": [
            "limit"
          ]
        },
        "v2PostingFBSActListRelatedDocs": {
          "type": "object",
          "title": "object",
          "description": "Информация про акты перевозки.",
          "properties": {
            "act_of_acceptance": {
              "type": "object",
              "description": "Информация про акт приёма-передачи.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания акта."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус акта:\n  - `FORMING` — ещё не готов,\n  - `FORMED` — сформирован,\n  - `CONFIRMED` — подписан Ozon,\n  - `CONFIRMED_WITH_MISMATCH` — подписан Ozon с расхождениями,\n  - `ACCEPTED_BY_CARGO_PLACES` — принят по грузовым местам,\n  - `PRINTED_CARRIAGE` — электронная подпись не нужна,\n  - `ERROR`, `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            },
            "act_of_mismatch": {
              "type": "object",
              "description": "Информация про акт о расхождениях.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания перевозки."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус перевозки или акта:\n  - `NEED_TO_SIGN` — требуется подпись,\n  - `ON_CONFIRMATION` — на подписании Ozon,\n  - `CONFIRMED` — подписан Ozon,\n  - `DISPUTE_OPENED` — принят по грузовым местам,\n  - `PRINTED_CARRIAGE` — электронная подпись не нужна,\n  - `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            },
            "act_of_excess": {
              "type": "object",
              "description": "Информация про акт об излишках.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания акта."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус акта:\n  - `NEED_TO_SIGN` — требуется подпись,\n  - `CONFIRMED` — подписан Ozon,\n  - `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            }
          }
        },
        "v2PostingFBSActListResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор отгрузки."
            },
            "delivery_method_id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `3pl` — доставка внешней службой, продавец регистрирует заказ.\n"
            },
            "containers_count": {
              "type": "int",
              "format": "int32",
              "description": "Число грузовых мест."
            },
            "status": {
              "type": "string",
              "description": "Статус отгрузки."
            },
            "departure_date": {
              "type": "string",
              "description": "Дата отгрузки."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания записи об отгрузке."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата обновления записи об отгрузке."
            },
            "act_type": {
              "type": "string",
              "description": "Тип акта приёма-передачи для FBS продавцов."
            },
            "is_partial": {
              "type": "boolean",
              "description": "Признак частичной перевозки. `true`, если перевозка частичная.\n\nЧастичная перевозка значит, что отгрузка была разделена на несколько частей и по каждой из частей формируются отдельные акты.\n"
            },
            "has_postings_for_next_carriage": {
              "type": "boolean",
              "description": "Признак наличия подлежащих отгрузке отправлений, которые не попали в текущую перевозку. `true`, если такие отправления есть."
            },
            "partial_num": {
              "type": "integer",
              "format": "int64",
              "description": "Порядковый номер частичной перевозки."
            },
            "related_docs": {
              "$ref": "#/components/schemas/v2PostingFBSActListRelatedDocs"
            }
          }
        },
        "v2PostingFBSActListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActListResult"
              }
            }
          }
        },
        "v2PostingFBSGetDigitalActRequest": {
          "required": [
            "id"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            },
            "doc_type": {
              "format": "string",
              "description": "Тип электронного документа:\n- `act_of_acceptance` — лист отгрузки,\n- `act_of_mismatch` — акт о расхождениях,\n- `act_of_excess` — акт об излишках.\n"
            }
          }
        },
        "v2PostingFBSGetDigitalActResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "file_content": {
              "type": "string",
              "format": "byte",
              "description": "Содержание файла в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "postingPostingFBSActCheckStatusRequest": {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object",
          "title": "object"
        },
        "PostingFBSActCheckStatusResponseStatus": {
          "properties": {
            "act_type": {
              "type": "string",
              "description": "Тип документов.\n\nЕсли значение `ozon_digital`, используйте методы [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) \n    и [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct) для получения электронной транспортной накладной.\n"
            },
            "added_to_act": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив c номерами отправлений, которые добавлены в перевозку. Эти отправления нужно передать сегодня."
            },
            "removed_from_act": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив с номерами отправлений, которые не попали в перевозку. Такие отправления нужно передавать со следующей отгрузкой."
            },
            "status": {
              "type": "string",
              "description": "Статус запроса:\n - `in_process` — документы формируются, нужно подождать.\n - `ready` — документы сформированы и готовы для скачивания.\n - `error` — произошла ошибка при формировании документов, запросите документы повторно.\n - `cancelled` — создание документов отменено, запросите их повторно.\n - `The next postings aren't ready` — произошла ошибка, отправления не включены в отгрузку. Подождите некоторое время и проверьте результат запроса. Если ошибка повторяется, обратитесь в службу поддержки.\n"
            },
            "is_partial": {
              "type": "boolean",
              "description": "Признак частичной перевозки. `true`, если перевозка частичная.\n\nЧастичная перевозка значит, что отгрузка была разделена на несколько частей.\n"
            },
            "has_postings_for_next_carriage": {
              "type": "boolean",
              "description": "`true`, если есть отправления, не попавшие в текущую перевозку, но которые нужно отгрузить.\n\nЕсли в ответе вернулось `true`, подтвердите отгрузку или создайте новый акт через метод [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate) и проверьте их статус. Повторяйте действия, пока в ответе не вернётся `false`.\n"
            },
            "partial_num": {
              "type": "integer",
              "format": "int64",
              "description": "Порядковый номер частичной перевозки."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат работы метода."
        },
        "postingPostingFBSActCheckStatusResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/PostingFBSActCheckStatusResponseStatus"
            }
          },
          "type": "object",
          "title": "object"
        },
        "FbsPostingTrackingNumberSetRequestTrackingNumber": {
          "required": [
            "posting_number",
            "tracking_number"
          ],
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingTrackingNumberSetRequest": {
          "required": [
            "tracking_numbers"
          ],
          "properties": {
            "tracking_numbers": {
              "items": {
                "$ref": "#/components/schemas/FbsPostingTrackingNumberSetRequestTrackingNumber"
              },
              "type": "array",
              "description": "Массив с парами идентификатор отправления — трек-номер."
            }
          },
          "type": "object",
          "title": "object"
        },
        "FbsPostingMoveStatusResponseMoveStatus": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Ошибка при обработке запроса."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "result": {
              "type": "boolean",
              "description": "Если запрос выполнен без ошибок — `true`."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingMoveStatusResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingMoveStatusResponseMoveStatus"
              },
              "type": "array"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingSentbysellerRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Список идентификаторов отправлений."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingSentbysellerResponseItem": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Ошибка."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "result": {
              "type": "boolean"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingSentbysellerResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/postingFbsPostingSentbysellerResponseItem"
              },
              "type": "array"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingDeliveringRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingLastMileRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingFbsPostingDeliveredRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1PostingFbsTimeslotChangeRestrictionsRequest": {
          "required": [
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1PostingFbsTimeslotChangeRestrictionsDeliveryInterval": {
          "type": "object",
          "title": "object",
          "description": "Период дат, доступных для переноса.",
          "properties": {
            "begin": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            }
          }
        },
        "v1PostingFbsTimeslotChangeRestrictionsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "delivery_interval": {
              "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsDeliveryInterval"
            },
            "remaining_changes_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество оставшихся переносов."
            }
          }
        },
        "v1PostingFbsTimeslotSetNewTimeslot": {
          "required": [
            "from",
            "to"
          ],
          "type": "object",
          "title": "object",
          "description": "Новый период для даты доставки.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            }
          }
        },
        "v1PostingFbsTimeslotSetRequest": {
          "required": [
            "new_timeslot",
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "new_timeslot": {
              "$ref": "#/components/schemas/v1PostingFbsTimeslotSetNewTimeslot"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1PostingFbsTimeslotSetResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "`true`, если дата изменена.\n"
            }
          }
        },
        "v1SetPostingCutoffRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "new_cutoff_date": {
              "type": "string",
              "format": "date-time",
              "description": "Новая дата отгрузки."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          },
          "required": [
            "new_cutoff_date",
            "posting_number"
          ]
        },
        "v1SetPostingCutoffResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "`true`, если установлена новая дата.\n"
            }
          }
        },
        "postingv3GetFbsPostingUnfulfilledListRequestFilter": {
          "required": [
            "cutoff_from",
            "cutoff_to"
          ],
          "properties": {
            "cutoff_from": {
              "format": "date-time",
              "type": "string",
              "description": "Фильтр по времени, до которого продавцу нужно собрать заказ. Начало периода.\n\nФормат: YYYY-MM-DDThh:mm:ss.mcsZ.\nПример: 2020-03-18T07:34:50.359Z.\n"
            },
            "cutoff_to": {
              "format": "date-time",
              "type": "string",
              "description": "Фильтр по времени, до которого продавцу нужно собрать заказ. Конец периода.\n\nФормат: YYYY-MM-DDThh:mm:ss.mcsZ.\nПример: 2020-03-18T07:34:50.359Z.\n"
            },
            "delivering_date_from": {
              "format": "date-time",
              "type": "string",
              "description": "Минимальная дата передачи отправления в доставку."
            },
            "delivering_date_to": {
              "format": "date-time",
              "type": "string",
              "description": "Максимальная дата передачи отправления в доставку."
            },
            "delivery_method_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор способа доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList)."
            },
            "is_quantum": {
              "type": "boolean",
              "description": "Укажите `true`, чтобы получить только отправления квантов.\n\nПо умолчанию — `false`, в ответе придут все отправления.\n"
            },
            "provider_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор службы доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList)."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре.\n"
            },
            "warehouse_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор склада. Можно получить с помощью метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр запроса.\n\nИспользуйте фильтр либо по времени сборки — `cutoff`, либо по дате передачи отправления в доставку — `delivering_date`.\nЕсли использовать их вместе, в ответе вернётся ошибка.\n\nЧтобы использовать фильтр по времени сборки, заполните поля `cutoff_from` и `cutoff_to`.\n\nЧтобы использовать фильтр по дате передачи отправления в доставку, заполните поля `delivering_date_from` и `delivering_date_to`.\n"
        },
        "postingv3FbsPostingWithParams": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Добавить в ответ данные аналитики."
            },
            "barcodes": {
              "type": "boolean",
              "description": "Добавить в ответ штрихкоды отправления."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Добавить в ответ финансовые данные."
            },
            "translit": {
              "type": "boolean",
              "description": "Выполнить транслитерацию возвращаемых значений."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingv3GetFbsPostingUnfulfilledListRequest": {
          "required": [
            "filter",
            "limit",
            "offset"
          ],
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParams"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3AddresseeFbsLists": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон.\n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Контактные данные получателя."
        },
        "v3FbsPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки. Только для отправлений rFBS и продавцов из СНГ."
            },
            "delivery_date_begin": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала доставки."
            },
            "delivery_date_end": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время конца доставки."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Признак, что получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты: \n- `картой онлайн`,\n- `Ozon Карта`,\n- `автосписание с Ozon Карты при выдаче`,\n- `сохранённой картой при получении`,\n- `Система Быстрых Платежей`, \n- `Ozon Рассрочка`, \n- `оплата на расчётный счёт`,\n- `SberPay`.\n"
            },
            "region": {
              "type": "string",
              "description": "Регион доставки. Только для отправлений rFBS."
            },
            "tpl_provider": {
              "type": "string",
              "description": "Служба доставки."
            },
            "tpl_provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "warehouse": {
              "type": "string",
              "description": "Название склада отправки заказа."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Данные аналитики."
        },
        "v3Barcodes": {
          "properties": {
            "lower_barcode": {
              "type": "string",
              "description": "Нижний штрихкод на маркировке отправления."
            },
            "upper_barcode": {
              "type": "string",
              "description": "Верхний штрихкод на маркировке отправления."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Штрихкоды отправления."
        },
        "v3Cancellation": {
          "properties": {
            "affect_cancellation_rating": {
              "type": "boolean",
              "description": "Если отмена влияет на рейтинг продавца — `true`."
            },
            "cancel_reason": {
              "type": "string",
              "description": "Причина отмены."
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "cancellation_initiator": {
              "type": "string",
              "description": "Инициатор отмены:\n- `Продавец`, \n- `Клиент` или `покупатель`,\n- `Ozon`,  \n- `Система`, \n- `Служба доставки`.\n"
            },
            "cancellation_type": {
              "type": "string",
              "description": "Тип отмены отправления:\n- `seller` — отменено продавцом;\n- `client` или `customer` — отменено покупателем;\n- `ozon` — отменено Ozon;\n- `system`— отменено системой;\n- `delivery` — отменено службой доставки.\n"
            },
            "cancelled_after_ship": {
              "type": "boolean",
              "description": "Если отмена произошла после сборки отправления — `true`."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация об отмене."
        },
        "v3Address": {
          "properties": {
            "address_tail": {
              "type": "string",
              "description": "Адрес в текстовом формате."
            },
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий к заказу."
            },
            "country": {
              "type": "string",
              "description": "Страна доставки."
            },
            "district": {
              "type": "string",
              "description": "Район доставки."
            },
            "latitude": {
              "format": "double",
              "type": "number",
              "description": "Широта."
            },
            "longitude": {
              "format": "double",
              "type": "number",
              "description": "Долгота."
            },
            "provider_pvz_code": {
              "type": "string",
              "description": "Код пункта выдачи заказов 3PL провайдера."
            },
            "pvz_code": {
              "format": "int64",
              "type": "integer",
              "description": "Код пункта выдачи заказов."
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            },
            "zip_code": {
              "type": "string",
              "description": "Почтовый индекс получателя."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация об адресе доставки."
        },
        "v3CustomerFbsLists": {
          "properties": {
            "address": {
              "$ref": "#/components/schemas/v3Address"
            },
            "customer_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор покупателя."
            },
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон.\n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Данные о покупателе."
        },
        "v3DeliveryMethod": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор способа доставки."
            },
            "name": {
              "type": "string",
              "description": "Название способа доставки."
            },
            "tpl_provider": {
              "type": "string",
              "description": "Служба доставки."
            },
            "tpl_provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "warehouse": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Метод доставки."
        },
        "v3PostingFinancialData": {
          "properties": {
            "cluster_from": {
              "type": "string",
              "description": "Код региона, откуда отправляется заказ."
            },
            "cluster_to": {
              "type": "string",
              "description": "Код региона, куда доставляется заказ."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/PostingFinancialDataProduct"
              },
              "type": "array",
              "description": "Список товаров в заказе."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Данные о стоимости товара, размере скидки, выплате и комиссии."
        },
        "v3FbsPostingDetailOptional": {
          "type": "object",
          "title": "object",
          "description": "Список товаров с дополнительными характеристиками.",
          "properties": {
            "products_with_possible_mandatory_mark": {
              "type": "array",
              "description": "Список товаров с возможной маркировкой."
            }
          }
        },
        "v3FbsPostingProduct": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "is_blr_traceable": {
              "type": "boolean",
              "description": "Признак прослеживаемости товара."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3FbsPostingRequirementsV3": {
          "type": "object",
          "title": "object",
          "properties": {
            "products_requiring_gtd": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать номера таможенной декларации (ГТД).\n\nДля сборки отправления передайте для всех перечисленных товаров номер таможенной декларации или информацию о том,\nчто номера нет, с помощью метода [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3)\nили [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3).\n"
            },
            "products_requiring_country": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать информацию о стране-изготовителе.\n\nДля сборки отправления передайте информацию о стране-изготовителе для всех перечисленных товаров с помощью метода [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n"
            },
            "products_requiring_mandatory_mark": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать маркировку «Честный ЗНАК».\n"
            },
            "products_requiring_jw_uin": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список товаров, для которых нужно передать уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "products_requiring_rnpt": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать регистрационный номер партии товара (РНПТ).\n"
            }
          },
          "description": "Cписок продуктов, для которых нужно передать страну-изготовителя, номер грузовой таможенной декларации (ГТД), регистрационный номер партии товара (РНПТ) или маркировку «Честный ЗНАК», чтобы перевести отправление в следующий статус."
        },
        "v3FbsTariffication": {
          "properties": {
            "current_tariff_rate": {
              "type": "number",
              "format": "double",
              "description": "Текущий процент тарификации."
            },
            "current_tariff_type": {
              "type": "string",
              "description": "Текущий тип тарификации — скидка или надбавка."
            },
            "current_tariff_charge": {
              "type": "string",
              "description": "Текущая сумма скидки или надбавки."
            },
            "current_tariff_charge_currency_code": {
              "type": "string",
              "description": "Валюта суммы."
            },
            "next_tariff_rate": {
              "type": "number",
              "format": "double",
              "description": "Процент, по которому будет тарифицироваться отправление через указанное в параметре `next_tariff_starts_at` время."
            },
            "next_tariff_type": {
              "type": "string",
              "description": "Тип тарифа, по которому будет тарифицироваться отправление через указанное в параметре `next_tariff_starts_at` время — скидка или надбавка."
            },
            "next_tariff_charge": {
              "type": "string",
              "description": "Сумма скидки или надбавки на следующем шаге тарификации."
            },
            "next_tariff_starts_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время, когда начнёт применяться новый тариф.\n\nФормат: `YYYY-MM-DDThh:mm:ss.mcsZ`. \n\nПример: `2023-11-13T08:05:57.657Z`.\n"
            },
            "next_tariff_charge_currency_code": {
              "type": "string",
              "description": "Валюта нового тарифа."
            }
          }
        },
        "v3FbsPosting": {
          "properties": {
            "addressee": {
              "$ref": "#/components/schemas/v3AddresseeFbsLists"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/v3FbsPostingAnalyticsData"
            },
            "available_actions": {
              "items": {
                "type": "string"
              },
              "description": "Доступные действия и информация об отправлении:\n- `arbitration` — открыть спор;\n- `awaiting_delivery` — перевести в статус «Ожидает отгрузки»;\n- `can_create_chat` — начать чат с покупателем;\n- `cancel` — отменить отправление;\n- `click_track_number` — просмотреть по трек-номеру историю изменения статусов в личном кабинете;\n- `customer_phone_available` — телефон покупателя;\n- `has_weight_products` — весовые товары в отправлении;\n- `hide_region_and_city` — скрыть регион и город покупателя в отчёте;\n- `invoice_get` —  получить информацию из счёта-фактуры;\n- `invoice_send` — создать счёт-фактуру;\n- `invoice_update` — отредактировать счёт-фактуру;\n- `label_download_big` — скачать большую этикетку;\n- `label_download_small` — скачать маленькую этикетку;\n- `label_download` — скачать этикетку;\n- `non_int_delivered` — перевести в статус «Условно доставлен»;\n- `non_int_delivering` — перевести в статус «Доставляется»;\n- `non_int_last_mile` — перевести в статус «Курьер в пути»;\n- `product_cancel` — отменить часть товаров в отправлении;\n- `set_cutoff` — необходимо указать дату отгрузки, воспользуйтесь методом [/v1/posting/cutoff/set](#operation/PostingAPI_SetPostingCutoff);\n- `set_timeslot` — изменить время доставки покупателю;\n- `set_track_number` — указать или изменить трек-номер;\n- `ship_async_in_process` — отправление собирается;\n- `ship_async_retry` — собрать отправление повторно после ошибки сборки;\n- `ship_async` — собрать отправление;\n- `ship_with_additional_info` — необходимо заполнить дополнительную информацию;\n- `ship` — собрать отправление;\n- `update_cis` — изменить дополнительную информацию.\n"
            },
            "barcodes": {
              "$ref": "#/components/schemas/v3Barcodes"
            },
            "cancellation": {
              "$ref": "#/components/schemas/v3Cancellation"
            },
            "customer": {
              "$ref": "#/components/schemas/v3CustomerFbsLists"
            },
            "delivering_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата передачи отправления в доставку."
            },
            "delivery_method": {
              "$ref": "#/components/schemas/v3DeliveryMethod"
            },
            "financial_data": {
              "$ref": "#/components/schemas/v3PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "is_express": {
              "type": "boolean",
              "description": "Если использовалась быстрая доставка Ozon Express — `true`."
            },
            "is_multibox": {
              "type": "boolean",
              "description": "Признак, что в отправлении есть многокоробочный товар и нужно передать количество коробок для него:\n\n- `true` — до сборки передайте количество коробок через метод [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3).\n- `false` — отправление собрано с указанием количества коробок в параметре `multi_box_qty` или в отправлении нет многокоробочного товара.\n"
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "optional": {
              "$ref": "#/components/schemas/v3FbsPostingDetailOptional"
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "parent_posting_number": {
              "type": "string",
              "description": "Номер родительского отправления, в результате разделения которого появилось текущее."
            },
            "pickup_code_verified_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время успешной валидации кода курьера. Чтобы проверить код курьера, воспользуйтесь методом [/v1/posting/fbs/pick-up-code/verify](#operation/PostingAPI_PostingFBSPickupCodeVerify)."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "prr_option": {
              "type": "string",
              "description": "Код услуги погрузочно-разгрузочных работ:\n- `lift` — подъём на лифте.\n- `stairs` — подъём по лестнице.\n- `none` — покупатель отказался от услуги, поднимать товары не нужно.\n- `delivery_default` — доставка включена в стоимость, по условиям оферты нужно доставить товар на этаж.\n\nПараметр актуален для КГТ-отправлений с доставкой силами продавца или интегрированной службой.\n"
            },
            "quantum_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор эконом-товара."
            },
            "requirements": {
              "$ref": "#/components/schemas/v3FbsPostingRequirementsV3"
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Показываем рекомендованное время отгрузки. По истечении этого времени начнёт применяться новый тариф, информацию о нём уточняйте в поле `tariffication`."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `arbitration` — арбитраж,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_deliver` — ожидает отгрузки,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_verification` — создано,\n- `cancelled` — отменено,\n- `cancelled_from_split_pending` — отменён из-за разделения отправления,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "substatus": {
              "type": "string",
              "description": "Подстатус отправления:\n- `posting_acceptance_in_progress`— идёт приёмка,\n- `posting_in_arbitration` — арбитраж,\n- `posting_created` — создано,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлено в перевозку,\n- `posting_registered` — зарегистрировано,\n- `posting_transferring_to_delivery` (`status=awaiting_deliver`) — передаётся в доставку,\n- `posting_awaiting_passport_data` — ожидает паспортных данных, \n- `posting_created` — создано,\n- `posting_awaiting_registration` — ожидает регистрации,\n- `posting_registration_error` — ошибка регистрации,\n- `posting_transferring_to_delivery` (`status=awaiting_registration`) — передаётся курьеру,\n- `posting_split_pending` — создано,\n- `posting_canceled` — отменено,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_delivered` — доставлено,\n- `posting_received` — получено,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_on_way_to_city` — в пути в ваш город,\n- `posting_on_way_to_pickup_point` — в пути в пункт выдачи,\n- `posting_returned_to_warehouse` — возвращено на склад,\n- `posting_transferred_to_courier_service` — передаётся в службу доставки,\n- `posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принято на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка службой Ozon.\n  - `3pl_tracking` — доставка интегрированной службой.\n  - `non_integrated` — доставка сторонней службой.\n  - `aggregator` — доставка через партнёрскую доставку Ozon.\n  - `hybryd` — схема доставки Почты России.\n"
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            },
            "tariffication": {
              "items": {
                "$ref": "#/components/schemas/v3FbsTariffication"
              },
              "type": "array",
              "description": "Информация по тарификации отгрузки."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingv3GetFbsPostingUnfulfilledListResponseResult": {
          "properties": {
            "count": {
              "format": "int64",
              "type": "integer",
              "description": "Счётчик элементов в ответе."
            },
            "postings": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPosting"
              },
              "type": "array",
              "description": "Список отправлений и подробная информация по каждому."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "postingv3GetFbsPostingUnfulfilledListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postinglistV3status": {
          "type": "object",
          "title": "object",
          "description": "Период, в который последний раз изменялся статус у отправлений.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания периода."
            }
          }
        },
        "postingv3GetFbsPostingListRequestFilter": {
          "required": [
            "since",
            "to"
          ],
          "properties": {
            "delivery_method_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "description": "Идентификатор способа доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList).",
              "type": "array"
            },
            "is_quantum": {
              "type": "boolean",
              "description": "Укажите `true`, чтобы получить только отправления квантов.\n\nПо умолчанию — `false`, в ответе придут все отправления.\n"
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа."
            },
            "provider_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "description": "Идентификатор службы доставки. Можно получить с помощью метода [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList).",
              "type": "array"
            },
            "since": {
              "format": "date-time",
              "type": "string",
              "description": "Дата начала периода, за который нужно получить список отправлений.\n\nФормат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.\n\nПример: 2019-08-24T14:15:22Z.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата конца периода, за который нужно получить список отправлений.\n\nФормат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.\n\nПример: 2019-08-24T14:15:22Z.\n"
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `awaiting_registration` — ожидает регистрации,\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `delivered` — доставлено,\n- `cancelled` — отменено,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` – отправлено продавцом.\n"
            },
            "warehouse_id": {
              "items": {
                "format": "int64",
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор склада. Можно получить с помощью метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)."
            },
            "last_changed_status_date": {
              "$ref": "#/components/schemas/postinglistV3status"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр."
        },
        "postingv3GetFbsPostingListRequest": {
          "required": [
            "filter",
            "limit",
            "offset"
          ],
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParams"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3GetFbsPostingListResponseV3Result": {
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не весь массив отправлений:\n- `true` — необходимо сделать новый запрос с другим значением `offset`, чтобы получить информацию об остальных отправлениях;\n- `false` — в ответе вернули весь массив отправлений для фильтра, который был задан в запросе.\n"
            },
            "postings": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPosting"
              },
              "type": "array",
              "description": "Информация об отправлении."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Массив отправлений."
        },
        "v3GetFbsPostingListResponseV3": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3GetFbsPostingListResponseV3Result"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingv3FbsPostingWithParamsExamplars": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Добавить в ответ данные аналитики."
            },
            "barcodes": {
              "type": "boolean",
              "description": "Добавить в ответ штрихкоды отправления."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Добавить в ответ финансовые данные."
            },
            "product_exemplars": {
              "type": "boolean",
              "description": "Добавить в ответ данные о продуктах и их экземплярах."
            },
            "related_postings": {
              "type": "boolean",
              "description": "Добавить в ответ номера связанных отправлений. Связанные отправления — те, на которое было разделено родительское отправление при сборке.\n"
            },
            "translit": {
              "type": "boolean",
              "description": "Выполнить транслитерацию возвращаемых значений."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingv3GetFbsPostingRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParamsExamplars"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3AdditionalDataItem": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v3Addressee": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон. \n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Контактные данные получателя."
        },
        "FbsPostingDetailCourier": {
          "type": "object",
          "title": "object",
          "description": "Данные о курьере.",
          "properties": {
            "car_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "car_number": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "name": {
              "type": "string",
              "description": "Полное имя курьера."
            },
            "phone": {
              "type": "string",
              "description": "Телефон курьера. \n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          }
        },
        "v3Customer": {
          "properties": {
            "address": {
              "$ref": "#/components/schemas/v3Address"
            },
            "customer_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор покупателя."
            },
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон. \n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Данные о покупателе."
        },
        "v3FbsPostingProductExemplarInfoV3": {
          "type": "object",
          "title": "object",
          "properties": {
            "exemplar_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор экземпляра."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "v3FbsPostingExemplarProductV3": {
          "type": "object",
          "title": "object",
          "description": "Список товаров и экземпляров.",
          "properties": {
            "exemplars": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingProductExemplarInfoV3"
              },
              "description": "Информация по экземплярам."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v3FbsPostingProductExemplarsV3": {
          "type": "object",
          "title": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingExemplarProductV3"
              }
            }
          },
          "description": "Информация по продуктам и их экзмеплярам.\n\nОтвет содержит поле `product_exemplars`, если в запросе передан признак `with.product_exemplars = true`.\n"
        },
        "v3Dimensions": {
          "properties": {
            "height": {
              "type": "string",
              "description": "Высота упаковки."
            },
            "length": {
              "type": "string",
              "description": "Длина товара."
            },
            "weight": {
              "type": "string",
              "description": "Вес товара в упаковке."
            },
            "width": {
              "type": "string",
              "description": "Ширина упаковки."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Размеры товара."
        },
        "v3PostingProductDetail": {
          "properties": {
            "dimensions": {
              "$ref": "#/components/schemas/v3Dimensions"
            },
            "mandatory_mark": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Обязательная маркировка товара.",
              "deprecated": true
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "jw_uin": {
              "type": "array of strings",
              "description": "Уникальный идентификационный номер (УИН) ювелирного изделия."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "is_blr_traceable": {
              "type": "boolean",
              "description": "Признак прослеживаемости товара."
            },
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Размеры товара."
        },
        "FbsPostingDetailPrrOption": {
          "type": "object",
          "title": "object",
          "description": "Информация об услуге погрузочно-разгрузочных работ. Актуально для КГТ-отправлений с доставкой силами продавца или интегрированной службой.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код услуги погрузочно-разгрузочных работ:\n- `lift` — подъём на лифте.\n- `stairs` — подъём по лестнице.\n- `none` — покупатель отказался от услуги, поднимать товары не нужно.\n- `delivery_default` — доставка включена в стоимость, по условиям оферты нужно доставить товар на этаж.\n"
            },
            "price": {
              "type": "string",
              "description": "Стоимость услуги, которую Ozon компенсирует продавцу."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "floor": {
              "type": "string",
              "description": "Этаж, на который нужно поднять товар."
            }
          }
        },
        "v3FbsPostingDetailRelatedPostings": {
          "type": "object",
          "title": "object",
          "description": "Связанные отправления.",
          "properties": {
            "related_posting_numbers": {
              "items": {
                "type": "string"
              },
              "description": "Список номеров связанных отправлений."
            }
          }
        },
        "v3FbsPostingDetail": {
          "properties": {
            "additional_data": {
              "items": {
                "$ref": "#/components/schemas/v3AdditionalDataItem"
              },
              "type": "array"
            },
            "addressee": {
              "$ref": "#/components/schemas/v3Addressee"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/v3FbsPostingAnalyticsData"
            },
            "available_actions": {
              "items": {
                "type": "string"
              },
              "description": "Доступные действия и информация об отправлении:\n- `arbitration` — открыть спор;\n- `awaiting_delivery` — перевести в статус «Ожидает отгрузки»;\n- `can_create_chat` — начать чат с покупателем;\n- `cancel` — отменить отправление;\n- `click_track_number` — просмотреть по трек-номеру историю изменения статусов в личном кабинете;\n- `customer_phone_available` — телефон покупателя;\n- `has_weight_products` — весовые товары в отправлении;\n- `hide_region_and_city` — скрыть регион и город покупателя в отчёте;\n- `invoice_get` —  получить информацию из счёта-фактуры;\n- `invoice_send` — создать счёт-фактуру;\n- `invoice_update` — отредактировать счёт-фактуру;\n- `label_download_big` — скачать большую этикетку;\n- `label_download_small` — скачать маленькую этикетку;\n- `label_download` — скачать этикетку;\n- `non_int_delivered` — перевести в статус «Условно доставлен»;\n- `non_int_delivering` — перевести в статус «Доставляется»;\n- `non_int_last_mile` — перевести в статус «Курьер в пути»;\n- `product_cancel` — отменить часть товаров в отправлении;\n- `set_cutoff` — необходимо указать дату отгрузки, воспользуйтесь методом [/v1/posting/cutoff/set](#operation/PostingAPI_SetPostingCutoff);\n- `set_timeslot` — изменить время доставки покупателю;\n- `set_track_number` — указать или изменить трек-номер;\n- `ship_async_in_process` — отправление собирается;\n- `ship_async_retry` — собрать отправление повторно после ошибки сборки;\n- `ship_async` — собрать отправление;\n- `ship_with_additional_info` — необходимо заполнить дополнительную информацию;\n- `ship` — собрать отправление;\n- `update_cis` — изменить дополнительную информацию.\n"
            },
            "barcodes": {
              "$ref": "#/components/schemas/v3Barcodes"
            },
            "cancellation": {
              "$ref": "#/components/schemas/v3Cancellation"
            },
            "courier": {
              "$ref": "#/components/schemas/FbsPostingDetailCourier"
            },
            "customer": {
              "$ref": "#/components/schemas/v3Customer"
            },
            "delivering_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата передачи отправления в доставку."
            },
            "delivery_method": {
              "$ref": "#/components/schemas/v3DeliveryMethod"
            },
            "delivery_price": {
              "type": "string",
              "description": "Стоимость доставки."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v3PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "is_express": {
              "type": "boolean",
              "description": "Если использовалась быстрая доставка Ozon Express — `true`."
            },
            "is_multibox": {
              "type": "boolean",
              "description": "Признак, что в отправлении есть многокоробочный товар и нужно передать количество коробок для него:\n\n- `true` — до сборки передайте количество коробок через метод [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3).\n- `false` — отправление собрано с указанием количества коробок в параметре `multi_box_qty` или в отправлении нет многокоробочного товара.\n"
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "optional": {
              "$ref": "#/components/schemas/v3FbsPostingDetailOptional"
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "parent_posting_number": {
              "type": "string",
              "description": "Номер родительского отправления, в результате разделения которого появилось текущее."
            },
            "pickup_code_verified_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время успешной валидации кода курьера. Чтобы проверить код курьера, воспользуйтесь методом [/v1/posting/fbs/pick-up-code/verify](#operation/PostingAPI_PostingFBSPickupCodeVerify)."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product_exemplars": {
              "$ref": "#/components/schemas/v3FbsPostingProductExemplarsV3"
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v3PostingProductDetail"
              },
              "type": "array",
              "description": "Массив товаров в отправлении."
            },
            "provider_status": {
              "type": "string",
              "description": "Статус службы доставки."
            },
            "prr_option": {
              "$ref": "#/components/schemas/FbsPostingDetailPrrOption"
            },
            "related_postings": {
              "$ref": "#/components/schemas/v3FbsPostingDetailRelatedPostings"
            },
            "requirements": {
              "$ref": "#/components/schemas/v3FbsPostingRequirementsV3"
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Если отправление не собрать к этой дате — оно автоматически отменится."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `arbitration` — арбитраж,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_deliver` — ожидает отгрузки,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_verification` — создано,\n- `cancelled` — отменено,\n- `cancelled_from_split_pending` — отменён из-за разделения отправления,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivered` — доставлено,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` – отправлено продавцом.\n"
            },
            "substatus": {
              "type": "string",
              "description": "Подстатус отправления:\n- `posting_acceptance_in_progress` — идёт приёмка,\n- `posting_in_arbitration` — арбитраж,\n- `posting_created` — создано,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлено в перевозку,\n- `posting_registered` — зарегистрировано,\n- `posting_transferring_to_delivery` (`status=awaiting_deliver`) — передаётся в доставку,\n- `posting_awaiting_passport_data` — ожидает паспортных данных, \n- `posting_created` — создано,\n- `posting_awaiting_registration` — ожидает регистрации,\n- `posting_registration_error` — ошибка регистрации,\n- `posting_transferring_to_delivery` (`status=awaiting_registration`) — передаётся курьеру,\n- `posting_split_pending` — создано,\n- `posting_canceled` — отменено,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_delivered` — доставлено,\n- `posting_received` — получено,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_on_way_to_city` — в пути в ваш город,\n- `posting_on_way_to_pickup_point` — в пути в пункт выдачи,\n- `posting_returned_to_warehouse` — возвращено на склад,\n- `posting_transferred_to_courier_service` — передаётся в службу доставки,\n- `posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принято на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "previous_substatus": {
              "type": "string",
              "description": "Предыдущий подстатус отправления. Возможные значения:\n- `posting_acceptance_in_progress` — идёт приёмка,\n- `posting_in_arbitration` — арбитраж,\n- `posting_created` — создано,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлено в перевозку,\n- `posting_registered` — зарегистрировано,\n- `posting_transferring_to_delivery` (`status=awaiting_deliver`) — передаётся в доставку,\n- `posting_awaiting_passport_data` — ожидает паспортных данных, \n- `posting_created` — создано,\n- `posting_awaiting_registration` — ожидает регистрации,\n- `posting_registration_error` — ошибка регистрации,\n- `posting_transferring_to_delivery` (`status=awaiting_registration`) — передаётся курьеру,\n- `posting_split_pending` — создано,\n- `posting_canceled` — отменено,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_delivered` — доставлено,\n- `posting_received` — получено,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_on_way_to_city` — в пути в ваш город,\n- `posting_on_way_to_pickup_point` — в пути в пункт выдачи,\n- `posting_returned_to_warehouse` — возвращено на склад,\n- `posting_transferred_to_courier_service` — передаётся в службу доставки,\n- `posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принято на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `aggregator` — доставка внешней службой, Ozon регистрирует заказ.\n  - `3pl_tracking` — доставка внешней службой, продавец регистрирует заказ.\n  - `non_integrated` — доставка силами продавца.\n"
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            },
            "tariffication": {
              "items": {
                "$ref": "#/components/schemas/v3FbsTariffication"
              },
              "type": "array",
              "description": "Информация по тарификации отгрузки."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация об отправлении."
        },
        "v3GetFbsPostingResponseV3": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3FbsPostingDetail"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingGetFbsPostingByBarcodeRequest": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод отправления. Можно получить с помощью методов: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3), [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList) в массиве `barcodes`.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "FbsPostingFbsPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Признак, что получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты: \n- `картой онлайн`,\n- `Ozon Карта`,\n- `автосписание с Ozon Карты при выдаче`,\n- `сохранённой картой при получении`,\n- `Система Быстрых Платежей`, \n- `Ozon Рассрочка`, \n- `оплата на расчётный счёт`,\n- `SberPay`.\n"
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Аналитические данные."
        },
        "FbsPostingBarcodes": {
          "properties": {
            "lower_barcode": {
              "type": "string",
              "description": "Нижний штрихкод на маркировке отправления."
            },
            "upper_barcode": {
              "type": "string",
              "description": "Верхний штрихкод на маркировке отправления."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Штрихкоды отправления."
        },
        "v2FbsPostingProduct": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2FbsPosting": {
          "properties": {
            "analytics_data": {
              "$ref": "#/components/schemas/FbsPostingFbsPostingAnalyticsData"
            },
            "barcodes": {
              "$ref": "#/components/schemas/FbsPostingBarcodes"
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания отправления."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v2PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v2FbsPostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Если отправление не собрать к этой дате — оно автоматически отменится."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "v2FbsPostingResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2FbsPosting"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация об отправлении."
        },
        "postingv3PostingMultiBoxQtySetV3Request": {
          "required": [
            "posting_number",
            "multi_box_qty"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор многокоробочного отправления."
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int64",
              "description": "Количество коробок, в которые упакован товар."
            }
          }
        },
        "postingv3PostingMultiBoxQtySetV3ResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат передачи количества коробок.",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Возможные значения:\n- `true` — значение передано успешно.\n- `false` — при передаче произошла ошибка. Попробуйте снова.\n"
            }
          }
        },
        "postingv3PostingMultiBoxQtySetV3Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3ResponseResult"
            }
          }
        },
        "PostingProductChangeRequestItem": {
          "required": [
            "sku",
            "weightReal"
          ],
          "properties": {
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "weightReal": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Вес единиц товара в отправлении."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingProductChangeRequest": {
          "required": [
            "items",
            "posting_number"
          ],
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/PostingProductChangeRequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingProductChangeResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2FbsPostingProductCountryListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "name_search": {
              "type": "string",
              "description": "Фильтрация по строке."
            }
          }
        },
        "v2FbsPostingProductCountryListResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название страны на русском языке."
            },
            "country_iso_code": {
              "type": "string",
              "description": "ISO код страны."
            }
          }
        },
        "v2FbsPostingProductCountryListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2FbsPostingProductCountryListResponseResult"
              },
              "description": "Список стран-изготовителей и ISO коды."
            }
          }
        },
        "v2FbsPostingProductCountrySetRequest": {
          "required": [
            "posting_number",
            "product_id",
            "country_iso_code"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "country_iso_code": {
              "type": "string",
              "description": "Двухбуквенный код добавляемой страны по стандарту ISO_3166-1.\n\nСписок доступных стран-изготовителей и их ISO коды можно получить с помощью метода [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2).\n"
            }
          }
        },
        "v2FbsPostingProductCountrySetResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "is_gtd_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать номер грузовой таможенной декларации (ГТД) для продукта и отправления."
            }
          }
        },
        "v1GetRestrictionsRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления, для которого нужно определить ограничения."
            }
          },
          "required": [
            "posting_number"
          ]
        },
        "v1Restriction": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "max_posting_weight": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по максимальному весу в граммах."
            },
            "min_posting_weight": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по минимальному весу в граммах."
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по ширине в сантиметрах."
            },
            "length": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по длине в сантиметрах."
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по высоте в сантиметрах."
            },
            "max_posting_price": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по максимальной стоимости отправления в рублях."
            },
            "min_posting_price": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по минимальной стоимости отправления в рублях."
            }
          }
        },
        "v1GetRestrictionsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1Restriction"
            }
          }
        },
        "postingPostingFBSPackageLabelRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingFBSPackageLabelResponse": {
          "properties": {
            "file_content": {
              "format": "byte",
              "type": "string",
              "description": "Содержание файла в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1CreateLabelBatchRequest": {
          "required": [
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "description": "Номера отправлений, для которых нужны этикетки.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v1CreateLabelBatchResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор задания на формирование этикеток."
            }
          }
        },
        "v1CreateLabelBatchResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1CreateLabelBatchResponseResult"
            }
          }
        },
        "v2CreateLabelBatchResponseResultTasks": {
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор задания на формирование этикеток. В зависимости от типа этикетки передайте значение в метод [/v1/posting/fbs/package-label/get](#operation/PostingAPI_GetLabelBatch)."
            },
            "task_type": {
              "type": "string",
              "description": "Тип задания на формирование этикеток:\n- `big_label` — для обычной этикетки,\n- `small_label` — для маленькой этикетки.\n"
            }
          }
        },
        "v2CreateLabelBatchResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "tasks": {
              "type": "array",
              "description": "Список заданий.",
              "items": {
                "$ref": "#/components/schemas/v2CreateLabelBatchResponseResultTasks"
              }
            }
          }
        },
        "v2CreateLabelBatchResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2CreateLabelBatchResponseResult"
            }
          }
        },
        "v1GetLabelBatchRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на формирование этикеток из ответа метода [/v1/posting/fbs/package-label/create](#operation/PostingAPI_CreateLabelBatch)."
            }
          },
          "required": [
            "task_id"
          ]
        },
        "v1GetLabelBatchResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "error": {
              "type": "string",
              "description": "Код ошибки."
            },
            "file_url": {
              "type": "string",
              "description": "Ссылка на файл с этикетками."
            },
            "status": {
              "type": "string",
              "description": "Статус формирования этикеток:\n- `pending` — задание в очереди.\n- `in_progress` — формируются.\n- `completed` — файл с этикетками готов.\n- `error` — при формировании файла произошла ошибка.\n"
            }
          }
        },
        "v1GetLabelBatchResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetLabelBatchResponseResult"
            }
          }
        },
        "postingCancelReasonRequest": {
          "required": [
            "related_posting_numbers"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "related_posting_numbers": {
              "type": "array",
              "description": "Номера отправлений.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "relatedPostingCancelReasons": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены:\n- `352` — товар закончился на складе продавца. \n- `400` — остался только бракованный товар.\n- `401` — продавец отклонил арбитраж.\n- `402` — другое (вина продавца).\n- `665` — покупатель не забрал заказ.\n- `666` — возврат из службы доставки: нет доставки в указанный регион.\n- `667` — заказ утерян службой доставки.\n"
            },
            "title": {
              "type": "string",
              "description": "Описание причины отмены."
            },
            "type_id": {
              "type": "string",
              "description": "Инициатор отмены отправления: \n  - `buyer` — покупатель,\n  - `seller` — продавец.\n"
            }
          }
        },
        "relatedPostingCancelReason": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "reasons": {
              "type": "array",
              "description": "Информация о причинах отмены.",
              "items": {
                "$ref": "#/components/schemas/relatedPostingCancelReasons"
              }
            }
          }
        },
        "postingCancelReasonResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/relatedPostingCancelReason"
              },
              "type": "array"
            }
          }
        },
        "postingCancelReason": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены.\n"
            },
            "is_available_for_cancellation": {
              "type": "boolean",
              "description": "Результат отмены отправления. `true`, если запрос доступен для отмены."
            },
            "title": {
              "type": "string",
              "description": "Название категории."
            },
            "type_id": {
              "type": "string",
              "description": "Инициатор отмены отправления:\n- `buyer` — покупатель,\n- `seller` — продавец.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingCancelReasonListResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/postingCancelReason"
              },
              "type": "array"
            }
          },
          "type": "object",
          "title": "object"
        },
        "PostingProductCancelRequestItem": {
          "required": [
            "quantity",
            "sku"
          ],
          "properties": {
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingProductCancelRequest": {
          "required": [
            "cancel_reason_id",
            "cancel_reason_message",
            "items",
            "posting_number"
          ],
          "properties": {
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления товара."
            },
            "cancel_reason_message": {
              "type": "string",
              "description": "Обязательное поле. Дополнительная информация по отмене."
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/PostingProductCancelRequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingPostingProductCancelResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Номер отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingCancelFbsPostingRequest": {
          "properties": {
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "cancel_reason_message": {
              "type": "string",
              "description": "Дополнительная информация по отмене. Если `cancel_reason_id = 402`, параметр обязательный."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingBooleanResponse": {
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат обработки запроса. `true`, если запрос выполнился без ошибок."
            }
          },
          "type": "object",
          "title": "object"
        },
        "postingMovePostingRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2MovePostingToAwaitingDeliveryRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления. Максимальное количество в одном запросе — 100."
            }
          },
          "type": "object",
          "title": "object"
        },
        "v1PostingFBSPickupCodeVerifyRequest": {
          "type": "object",
          "properties": {
            "pickup_code": {
              "description": "Код курьера.",
              "type": "string"
            },
            "posting_number": {
              "description": "Номер отправления.",
              "type": "string"
            }
          },
          "required": [
            "pickup_code",
            "posting_number"
          ]
        },
        "v1PostingFBSPickupCodeVerifyResponse": {
          "type": "object",
          "properties": {
            "valid": {
              "description": "`true`, если код корректный.\n",
              "type": "boolean"
            }
          }
        },
        "GetEtgbRequestDate": {
          "required": [
            "from",
            "to"
          ],
          "type": "object",
          "title": "object",
          "description": "Фильтр по периоду создания деклараций.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания."
            }
          }
        },
        "v1GetEtgbRequest": {
          "required": [
            "date"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "date": {
              "$ref": "#/components/schemas/GetEtgbRequestDate"
            }
          }
        },
        "GetEtgbResponseResultEtgb": {
          "type": "object",
          "title": "object",
          "description": "Информация о декларации.",
          "properties": {
            "number": {
              "type": "string",
              "description": "Номер."
            },
            "date": {
              "type": "string",
              "description": "Дата создания."
            },
            "url": {
              "type": "string",
              "description": "Ссылка на файл.\n\nЕсли поле пустое и вам нужен файл, обратитесь в поддержку Ozon.\n"
            }
          }
        },
        "GetEtgbResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "etgb": {
              "$ref": "#/components/schemas/GetEtgbResponseResultEtgb"
            }
          }
        },
        "v1GetEtgbResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/GetEtgbResponseResult"
              }
            }
          }
        },
        "v1PostingUnpaidLegalProductListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 1000,
              "description": "Количество значений в ответе.\n",
              "required": true
            }
          }
        },
        "v1PostingUnpaidLegalProductListResponseProducts": {
          "type": "object",
          "title": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество экземпляров."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "image_url": {
              "type": "string",
              "description": "Ссылка на изображение товара."
            }
          }
        },
        "v1PostingUnpaidLegalProductListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "products": {
              "type": "array",
              "description": "Список неоплаченных товаров.",
              "items": {
                "$ref": "#/components/schemas/v1PostingUnpaidLegalProductListResponseProducts"
              }
            },
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            }
          }
        },
        "CreatedAt": {
          "type": "object",
          "title": "object",
          "description": "Период создания заявки.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания периода."
            }
          }
        },
        "v2ReturnsRfbsFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "group_state": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Фильтр по статусам заявок:\n- `All` — все заявки.\n- `New` — новые.\n- `Delivering` — в пути.\n- `Checkout` — на проверке.\n- `Arbitration` — спорные.\n- `Approved` — согласованные.\n- `Rejected` — отклонённые.\n"
            },
            "created_at": {
              "$ref": "#/components/schemas/CreatedAt"
            }
          }
        },
        "v2ReturnsRfbsListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v2ReturnsRfbsFilter"
            },
            "last_id": {
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.",
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "description": "Количество значений в ответе.",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "limit"
          ]
        },
        "v2Product": {
          "type": "object",
          "title": "object",
          "description": "Данные о товаре.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v2ReturnsRfbsListV2ResponseState": {
          "type": "object",
          "title": "object",
          "description": "Статусы заявки и возврата денег.",
          "properties": {
            "group_state": {
              "type": "string",
              "description": "Статус заявки по применённому фильтру."
            },
            "money_return_state_name": {
              "type": "string",
              "description": "Статус возврата денег."
            },
            "state": {
              "type": "string",
              "description": "Статус заявки."
            },
            "state_name": {
              "type": "string",
              "description": "Название статуса заявки на русском."
            }
          }
        },
        "ReturnsRfbsListResponseReturns": {
          "type": "object",
          "title": "object",
          "description": "Данные о заявках.",
          "properties": {
            "client_name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product": {
              "$ref": "#/components/schemas/v2Product"
            },
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            },
            "return_number": {
              "type": "string",
              "description": "Номер заявки на возврат."
            },
            "state": {
              "$ref": "#/components/schemas/v2ReturnsRfbsListV2ResponseState"
            }
          }
        },
        "v2ReturnsRfbsListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "returns": {
              "$ref": "#/components/schemas/ReturnsRfbsListResponseReturns"
            }
          }
        },
        "v2ReturnsRfbsGetRequest": {
          "type": "object",
          "title": "object",
          "description": null,
          "properties": {
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки."
            }
          },
          "required": [
            "return_id"
          ]
        },
        "ReturnsRfbsGetV2ResponseAvailableAction": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор действия."
            },
            "name": {
              "type": "string",
              "description": "Название действия."
            }
          }
        },
        "ReturnsRfbsGetV2ResponseClientReturnMethodType": {
          "type": "object",
          "title": "object",
          "description": "Данные о способе возврата.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор."
            },
            "name": {
              "type": "string",
              "description": "Название."
            }
          }
        },
        "ReturnsRfbsGetV2ResponseRejectionReason": {
          "type": "object",
          "title": "object",
          "properties": {
            "hint": {
              "type": "string",
              "description": "Подсказка о дальнейших действиях с возвратом."
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор причины."
            },
            "is_comment_required": {
              "type": "boolean",
              "description": "Признак, нужно ли прикладывать комментарий."
            },
            "name": {
              "type": "string",
              "description": "Описание причины."
            }
          }
        },
        "ReturnsRfbsGetV2ResponseReturnReason": {
          "type": "object",
          "title": "object",
          "description": "Данные о причине возврата.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор причины."
            },
            "is_defect": {
              "type": "boolean",
              "description": "Признак, является ли товар бракованным."
            },
            "name": {
              "type": "string",
              "description": "Описание причины."
            }
          }
        },
        "v2ReturnsRfbsGetV2ResponseState": {
          "type": "object",
          "title": "object",
          "description": "Данные о статусе возврата.",
          "properties": {
            "state": {
              "type": "string",
              "description": "Статус."
            },
            "state_name": {
              "type": "string",
              "description": "Название статуса на русском."
            }
          }
        },
        "ReturnsRfbsGetResponseReturns": {
          "type": "object",
          "title": "object",
          "description": "Данные о заявке.",
          "properties": {
            "available_actions": {
              "type": "array",
              "description": "Данные о доступных действиях с заявкой.",
              "items": {
                "$ref": "#/components/schemas/ReturnsRfbsGetV2ResponseAvailableAction"
              }
            },
            "client_name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "client_photo": {
              "type": "array",
              "description": "Ссылки на фотографии товара.",
              "items": {
                "type": "string"
              }
            },
            "client_return_method_type": {
              "$ref": "#/components/schemas/ReturnsRfbsGetV2ResponseClientReturnMethodType"
            },
            "comment": {
              "type": "string",
              "description": "Комментарий покупателя."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product": {
              "$ref": "#/components/schemas/v2Product"
            },
            "rejection_comment": {
              "type": "string",
              "description": "Комментарий об отклонении заявки."
            },
            "rejection_reason": {
              "type": "array",
              "description": "Данные о причине отклонения заявки.",
              "items": {
                "$ref": "#/components/schemas/ReturnsRfbsGetV2ResponseRejectionReason"
              }
            },
            "return_method_description": {
              "type": "string",
              "description": "Способ возврата товара."
            },
            "return_number": {
              "type": "string",
              "description": "Номер заявки на возврат."
            },
            "return_reason": {
              "$ref": "#/components/schemas/ReturnsRfbsGetV2ResponseReturnReason"
            },
            "ru_post_tracking_number": {
              "type": "string",
              "description": "Трек-номер почтового отправления."
            },
            "state": {
              "$ref": "#/components/schemas/v2ReturnsRfbsGetV2ResponseState"
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "v2ReturnsRfbsGetResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "returns": {
              "$ref": "#/components/schemas/ReturnsRfbsGetResponseReturns"
            }
          }
        },
        "v2ReturnsRfbsRejectRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий.\n\nПередайте комментарий, если в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) параметр `rejection_reason.is_comment_required` — `true`.\n"
            },
            "rejection_reason_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены.\n\nПередайте идентификатор из списка причин, полученного в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) в параметре `rejection_reason`.\n"
            }
          },
          "required": [
            "return_id",
            "rejection_reason_id"
          ]
        },
        "v2ReturnsRfbsCompensateRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "compensation_amount": {
              "type": "string",
              "description": "Сумма компенсации."
            },
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            }
          },
          "required": [
            "return_id"
          ]
        },
        "v2ReturnsRfbsVerifyRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            },
            "return_method_description": {
              "type": "string",
              "description": "Способ возврата товара."
            }
          },
          "required": [
            "return_id"
          ]
        },
        "v2ReturnsRfbsReceiveReturnRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            }
          },
          "required": [
            "return_id"
          ]
        },
        "v2ReturnsRfbsReturnMoneyRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "return_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на возврат."
            },
            "return_for_back_way": {
              "type": "integer",
              "format": "int64",
              "description": "Сумма, возмещаемая покупателю за пересылку товара."
            }
          },
          "required": [
            "return_id"
          ]
        },
        "v1GetConditionalCancellationRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            }
          },
          "required": [
            "cancellation_id"
          ]
        },
        "ConditionalCancellationCancellationReason": {
          "type": "object",
          "title": "object",
          "description": "Причина отмены.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены."
            },
            "name": {
              "type": "string",
              "description": "Название причины отмены."
            }
          }
        },
        "ConditionalCancellationState": {
          "type": "object",
          "title": "object",
          "description": "Статус заявки на отмену.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор статуса."
            },
            "name": {
              "type": "string",
              "description": "Название статуса."
            },
            "state": {
              "type": "string",
              "enum": [
                "ON_APPROVAL",
                "APPROVED",
                "REJECTED"
              ],
              "description": "Статус заявки:\n- `ON_APPROVAL` — ожидает решения.\n- `APPROVED` — подтверждённая.\n- `REJECTED` — отклонённая.\n"
            }
          }
        },
        "v1ConditionalCancellation": {
          "type": "object",
          "title": "object",
          "description": "Результат запроса.",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "cancellation_reason": {
              "$ref": "#/components/schemas/ConditionalCancellationCancellationReason"
            },
            "cancelled_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки на отмену."
            },
            "cancellation_reason_message": {
              "type": "string",
              "description": "Комментарий к заявке на отмену, введённый инициатором отмены вручную."
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки."
            },
            "state": {
              "$ref": "#/components/schemas/ConditionalCancellationState"
            },
            "cancellation_initiator": {
              "type": "string",
              "enum": [
                "OZON",
                "SELLER",
                "CLIENT",
                "SYSTEM",
                "DELIVERY"
              ],
              "description": "Инициатор отмены:\n- `OZON` — Ozon, \n- `SELLER` — продавец, \n- `CLIENT` — покупатель, \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n"
            },
            "order_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заказа."
            },
            "approve_comment": {
              "type": "string",
              "description": "Комментарий, оставленный при подтверждении или отклонении заявки на отмену."
            },
            "approve_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата подтверждения или отклонения заявки на отмену."
            },
            "auto_approve_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, после которой заявка будет автоматически подтверждена."
            }
          }
        },
        "v1GetConditionalCancellationResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ConditionalCancellation"
            }
          }
        },
        "GetConditionalCancellationListRequestFilters": {
          "type": "object",
          "title": "object",
          "description": "Фильтры.",
          "properties": {
            "cancellation_initiator": {
              "description": "Инициатор отмены:\n- `SELLER` — продавец, \n- `CLIENT` — клиент или покупатель,\n- `OZON` — Ozon,  \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n\nНеобязательный параметр. Можно передавать несколько значений.\n",
              "items": {
                "type": "string",
                "enum": [
                  "OZON",
                  "SELLER",
                  "CLIENT",
                  "SYSTEM",
                  "DELIVER"
                ]
              }
            },
            "posting_number": {
              "description": "Фильтр по номеру отправления.\n\nНеобязательный параметр. Можно передавать несколько значений.\n",
              "type": "array of strings"
            },
            "state": {
              "description": "Фильтр по статусу заявки на отмену:\n- `ALL` — заявки в любом статусе, \n- `ON_APPROVAL` — заявки на рассмотрении,\n- `APPROVED` — подтверждённые заявки, \n- `REJECTED` — отклонённые заявки.\n",
              "type": "string",
              "enum": [
                "ALL",
                "ON_APPROVAL",
                "APPROVED",
                "REJECTED"
              ]
            }
          }
        },
        "GetConditionalCancellationListRequestWith": {
          "type": "object",
          "title": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "counters": {
              "type": "boolean",
              "description": "Признак, что в ответе нужно вывести счётчик заявок в разных статусах."
            }
          }
        },
        "v1GetConditionalCancellationListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filters": {
              "$ref": "#/components/schemas/GetConditionalCancellationListRequestFilters"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок в ответе."
            },
            "offset": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/GetConditionalCancellationListRequestWith"
            }
          },
          "required": [
            "limit"
          ]
        },
        "GetConditionalCancellationListResponseCounters": {
          "type": "object",
          "title": "object",
          "description": "Cчётчик заявок в разных статусах.",
          "properties": {
            "on_approval": {
              "description": "Количество заявок на рассмотрении.",
              "type": "integer",
              "format": "int64"
            },
            "approved": {
              "description": "Количество подтверждённых заявок.",
              "type": "integer",
              "format": "int64"
            },
            "rejected": {
              "description": "Количество отклонённых заявок.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1GetConditionalCancellationListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Список заявок на отмену.",
              "items": {
                "$ref": "#/components/schemas/v1ConditionalCancellation"
              }
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество заявок по заданным фильтрам."
            },
            "counters": {
              "$ref": "#/components/schemas/GetConditionalCancellationListResponseCounters"
            }
          }
        },
        "v1ConditionalCancellationMoveRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий."
            }
          },
          "required": [
            "cancellation_id"
          ]
        },
        "v1TimeRange_return_date": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по дате создания возврата.",
          "properties": {
            "time_from": {
              "type": "string",
              "description": "Начало периода.",
              "format": "date-time"
            },
            "time_to": {
              "type": "string",
              "description": "Окончание периода.",
              "format": "date-time"
            }
          }
        },
        "v1TimeRange_storage_tariffication": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по дате начала тарификации.",
          "properties": {
            "time_from": {
              "type": "string",
              "description": "Начало периода.",
              "format": "date-time"
            },
            "time_to": {
              "type": "string",
              "description": "Окончание периода.",
              "format": "date-time"
            }
          }
        },
        "v1TimeRange_visual_status": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по дате изменения статуса возврата.",
          "properties": {
            "time_from": {
              "type": "string",
              "description": "Начало периода.",
              "format": "date-time"
            },
            "time_to": {
              "type": "string",
              "description": "Окончание периода.",
              "format": "date-time"
            }
          }
        },
        "GetReturnsListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтры. Используйте только один фильтр в запросе: `logistic_return_date`, `storage_tariffication_start_date` или `visual_status_change_moment`, иначе вернётся ошибка.\n",
          "properties": {
            "logistic_return_date": {
              "$ref": "#/components/schemas/v1TimeRange_return_date"
            },
            "storage_tariffication_start_date": {
              "$ref": "#/components/schemas/v1TimeRange_storage_tariffication"
            },
            "visual_status_change_moment": {
              "$ref": "#/components/schemas/v1TimeRange_visual_status"
            },
            "order_id": {
              "type": "integer",
              "description": "Фильтр по идентификатору заказа.",
              "format": "int64"
            },
            "posting_numbers": {
              "type": "array",
              "description": "Фильтр по номеру отправления. Передавайте не больше 50 постингов.",
              "items": {
                "type": "string"
              }
            },
            "product_name": {
              "type": "string",
              "description": "Фильтр по названию товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Фильтр по артикулу товара."
            },
            "visual_status_name": {
              "type": "string",
              "description": "Фильтр по статусу возврата:\n- `DisputeOpened` — открыт спор с покупателем;\n- `OnSellerApproval` — на согласовании у продавца;\n- `ArrivedAtReturnPlace` — в пункте выдачи;\n- `OnSellerClarification` — на уточнении у продавца;\n- `OnSellerClarificationAfterPartialCompensation` — на уточнении у продавца после частичной компенсации;\n- `OfferedPartialCompensation` — предложена частичная компенсация;\n- `ReturnMoneyApproved` — одобрен возврат денег;\n- `PartialCompensationReturned` — вернули часть денег;\n- `CancelledDisputeNotOpen` — возврат отклонён, спор не открыт;\n- `Rejected` — заявка отклонена;\n- `CrmRejected` — заявка отклонена Ozon;\n- `Cancelled` — заявка отменена;\n- `Approved` — заявка одобрена продавцом;\n- `ApprovedByOzon` — заявка одобрена Ozon;\n- `ReceivedBySeller` — продавец получил возврат;\n- `MovingToSeller` — возврат на пути к продавцу;\n- `ReturnCompensated` — продавец получил компенсацию;\n- `ReturningToSellerByCourier` — курьер везёт возврат продавцу;\n- `Utilizing` — на утилизации;\n- `Utilized` — утилизирован;\n- `MoneyReturned` — покупателю вернули всю сумму;\n- `PartialCompensationInProcess` — одобрен частичный возврат денег;\n- `DisputeYouOpened` — продавец открыл спор;\n- `CompensationRejected` — отказано в компенсации;\n- `DisputeOpening` — обращение в поддержку отправлено;\n- `CompensationOffered` — ожидает вашего решения по компенсации;\n- `WaitingCompensation` — ожидает компенсации;\n- `SendingError` — ошибка при отправке обращения в поддержку;\n- `CompensationRejectedBySla` — истёк срок решения;\n- `CompensationRejectedBySeller` — продавец отказался от компенсации;\n- `MovingToOzon` — едет на склад Ozon;\n- `ReturnedToOzon` — на складе Ozon;\n- `MoneyReturnedBySystem` — быстрый возврат;\n- `WaitingShipment` — ожидает отправки.\n"
            },
            "warehouse_id": {
              "type": "integer",
              "description": "Фильтр по идентификатору склада. Можно получить с помощью метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList).",
              "format": "int64"
            },
            "barcode": {
              "type": "string",
              "description": "Фильтр по штрихкоду возвратной этикетки."
            },
            "return_schema": {
              "type": "string",
              "description": "Фильтр по схеме доставки: `FBS` или `FBO`.\n"
            }
          }
        },
        "v1GetReturnsListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/GetReturnsListRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество подгружаемых возвратов. Максимальное значение — 500."
            },
            "last_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор последнего подгруженного возврата."
            }
          },
          "required": [
            "limit"
          ]
        },
        "GetReturnsListResponseExemplar": {
          "type": "object",
          "title": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Идентификатор экземпляра.",
              "format": "int64"
            }
          }
        },
        "GetReturnsListResponsePlace_now": {
          "type": "object",
          "title": "object",
          "description": "Склад, где находится возврат.",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Идентификатор склада.",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "address": {
              "type": "string",
              "description": "Адрес."
            }
          }
        },
        "GetReturnsListResponsePlace_target": {
          "type": "object",
          "title": "object",
          "description": "Склад, куда едет возврат.",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Идентификатор склада.",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "address": {
              "type": "string",
              "description": "Адрес."
            }
          }
        },
        "seller_returnsv1Money_storage": {
          "type": "object",
          "title": "object",
          "description": "Стоимость хранения.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость хранения."
            }
          }
        },
        "seller_returnsv1Money_utilization": {
          "type": "object",
          "title": "object",
          "description": "Стоимость утилизации.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость утилизации."
            }
          }
        },
        "GetReturnsListResponseStorage": {
          "type": "object",
          "title": "object",
          "description": "Информация о хранении.",
          "properties": {
            "sum": {
              "$ref": "#/components/schemas/seller_returnsv1Money_storage"
            },
            "tariffication_first_date": {
              "type": "string",
              "description": "Первый день тарификации за хранение.",
              "format": "date-time"
            },
            "tariffication_start_date": {
              "type": "string",
              "description": "Дата старта тарификации за хранение.",
              "format": "date-time"
            },
            "arrived_moment": {
              "type": "string",
              "description": "Дата, когда возврат был готов к выдаче.",
              "format": "date-time"
            },
            "days": {
              "type": "integer",
              "description": "Сколько дней возврат ожидает выдачи продавцу.",
              "format": "int64"
            },
            "utilization_sum": {
              "format": "date-time",
              "$ref": "#/components/schemas/seller_returnsv1Money_utilization"
            },
            "utilization_forecast_date": {
              "type": "string",
              "description": "Планируемая дата утилизации."
            }
          }
        },
        "seller_returnsv1Money_product": {
          "type": "object",
          "title": "object",
          "description": "Стоимость товара.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость товара."
            }
          }
        },
        "seller_returnsv1Money_without_commission": {
          "type": "object",
          "title": "object",
          "description": "Стоимость товара без комиссии.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость товара без комиссии."
            }
          }
        },
        "seller_returnsv1Money_commission": {
          "type": "object",
          "title": "object",
          "description": "Информация о комиссии.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Размер комиссии."
            }
          }
        },
        "GetReturnsListResponseProduct": {
          "type": "object",
          "title": "object",
          "description": "Информация о товаре.",
          "properties": {
            "sku": {
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "format": "int64"
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "price": {
              "$ref": "#/components/schemas/seller_returnsv1Money_product"
            },
            "price_without_commission": {
              "$ref": "#/components/schemas/seller_returnsv1Money_without_commission"
            },
            "commission_percent": {
              "type": "number",
              "description": "Процент комиссии.",
              "format": "double"
            },
            "commission": {
              "$ref": "#/components/schemas/seller_returnsv1Money_commission"
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара."
            }
          }
        },
        "GetReturnsListResponseLogistic": {
          "type": "object",
          "title": "object",
          "description": "Информация о возврате.",
          "properties": {
            "technical_return_moment": {
              "type": "string",
              "description": "Дата, когда заказ поставили на технический возврат.",
              "format": "date-time"
            },
            "final_moment": {
              "type": "string",
              "description": "Дата, когда возврат прибыл на фулфилмент или выдан продавцу.",
              "format": "date-time"
            },
            "cancelled_with_compensation_moment": {
              "type": "string",
              "description": "Дата, когда продавцу компенсировали возврат.",
              "format": "date-time"
            },
            "return_date": {
              "type": "string",
              "description": "Дата, когда покупатель вернул товар.",
              "format": "date-time"
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод этикетки возврата."
            }
          }
        },
        "GetReturnsListResponseVisualStatus": {
          "type": "object",
          "title": "object",
          "description": "Статус возврата.",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Идентификатор статуса возврата.",
              "format": "int32"
            },
            "display_name": {
              "type": "string",
              "description": "Название статуса возврата."
            },
            "sys_name": {
              "type": "string",
              "description": "Системное название статуса возврата."
            }
          }
        },
        "GetReturnsListResponseVisual": {
          "type": "object",
          "title": "object",
          "description": "Информация о статусе возврата.",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/GetReturnsListResponseVisualStatus"
            },
            "change_moment": {
              "type": "string",
              "description": "Дата изменения статуса возврата.",
              "format": "date-time"
            }
          }
        },
        "GetReturnsListResponseAdditionalInfo": {
          "type": "object",
          "title": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "is_opened": {
              "type": "boolean",
              "description": "`true`, если возврат вскрыт.\n"
            },
            "is_super_econom": {
              "type": "boolean",
              "description": "`true`, если возврат относится к товарам «Суперэконом».\n"
            }
          }
        },
        "GetReturnsListResponseReturnsItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "exemplars": {
              "type": "array",
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/GetReturnsListResponseExemplar"
              }
            },
            "id": {
              "type": "integer",
              "description": "Идентификатор возврата.",
              "format": "int64"
            },
            "company_id": {
              "type": "integer",
              "description": "Идентификатор продавца.",
              "format": "int64"
            },
            "return_reason_name": {
              "type": "string",
              "description": "Причина возврата или отмены."
            },
            "type": {
              "type": "string",
              "description": "Тип возврата: \n`Cancellation` - отмена (до вручения);\n`FullReturn` - полный отказ при вручении;\n`PartialReturn` - частичный отказ при вручении;\n`ClientReturn` - клиентский возврат (после вручения);\n`Unknown` - технический возврат.\n"
            },
            "schema": {
              "type": "string",
              "description": "Схема возврата:\n`FBS`;\n`FBO`.\n"
            },
            "order_id": {
              "type": "integer",
              "description": "Идентификатор заказа.",
              "format": "int64"
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа."
            },
            "place": {
              "$ref": "#/components/schemas/GetReturnsListResponsePlace_now"
            },
            "target_place": {
              "$ref": "#/components/schemas/GetReturnsListResponsePlace_target"
            },
            "storage": {
              "$ref": "#/components/schemas/GetReturnsListResponseStorage"
            },
            "product": {
              "$ref": "#/components/schemas/GetReturnsListResponseProduct"
            },
            "logistic": {
              "$ref": "#/components/schemas/GetReturnsListResponseLogistic"
            },
            "visual": {
              "$ref": "#/components/schemas/GetReturnsListResponseVisual"
            },
            "additional_info": {
              "$ref": "#/components/schemas/GetReturnsListResponseAdditionalInfo"
            },
            "source_id": {
              "type": "integer",
              "description": "Предыдущий идентификатор возврата.",
              "format": "int64"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "clearing_id": {
              "type": "integer",
              "description": "Штрихкод изначального отправления.",
              "format": "int64"
            },
            "return_clearing_id": {
              "type": "integer",
              "description": "Возвратный штрихкод изначального отправления.",
              "format": "int64"
            }
          }
        },
        "v1GetReturnsListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "returns": {
              "type": "array",
              "description": "Информация о возвратах.",
              "items": {
                "$ref": "#/components/schemas/GetReturnsListResponseReturnsItem"
              }
            },
            "has_next": {
              "type": "boolean",
              "description": "`true`, если у продавца есть другие возвраты.\n"
            }
          }
        },
        "v1ReturnsCompanyFbsInfoRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтры.",
          "properties": {
            "place_id": {
              "type": "integer",
              "format": "int64",
              "description": "Фильтр по идентификатору drop-off пункта."
            }
          }
        },
        "ReturnsCompanyFbsInfoRequestPagination": {
          "required": [
            "limit"
          ],
          "type": "object",
          "title": "object",
          "description": "Разделение ответа метода.",
          "properties": {
            "last_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор последнего drop-off пункта на странице. Для первого запроса оставьте это поле пустым.\n\nЧтобы получить следующие значения, укажите `id` последнего drop-off пункта из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество drop-off пунктов на странице. Максимум — 500."
            }
          }
        },
        "v1ReturnsCompanyFbsInfoRequest": {
          "required": [
            "pagination"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v1ReturnsCompanyFbsInfoRequestFilter"
            },
            "pagination": {
              "$ref": "#/components/schemas/ReturnsCompanyFbsInfoRequestPagination"
            }
          }
        },
        "ReturnsCompanyFbsInfoResponsePass_info": {
          "type": "object",
          "title": "object",
          "description": "Информация о пропуске.",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество пропусков на drop-off пункт."
            },
            "is_required": {
              "type": "boolean",
              "description": "Признак, нужен ли пропуск на drop-off пункт."
            }
          }
        },
        "ReturnsCompanyFbsInfoResponseDropOffPoints": {
          "type": "object",
          "title": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес drop-off пункта."
            },
            "box_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок в drop-off пункте."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор drop-off пункта."
            },
            "name": {
              "type": "string",
              "description": "Название drop-off пункта."
            },
            "pass_info": {
              "$ref": "#/components/schemas/ReturnsCompanyFbsInfoResponsePass_info"
            },
            "place_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада, на который приедет отгрузка."
            },
            "returns_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество возвратов в drop-off пункте."
            },
            "utc_offset": {
              "type": "string",
              "description": "Смещение часового пояса времени отгрузки от UTC-0."
            },
            "warehouses_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификатор складов продавца."
            }
          }
        },
        "v1ReturnsCompanyFbsInfoResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "drop_off_points": {
              "description": "Информация о drop-off пунктах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReturnsCompanyFbsInfoResponseDropOffPoints"
              }
            },
            "has_next": {
              "type": "boolean",
              "description": "Признак, есть ли ещё пункты, где продавца ожидают возвраты."
            }
          }
        },
        "v1GiveoutIsEnabledResponse": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "`true`, если вы можете получить возвратную отгрузку по штрихкоду.\n",
              "type": "boolean"
            }
          }
        },
        "v1GiveoutListRequest": {
          "required": [
            "limit"
          ],
          "type": "object",
          "properties": {
            "last_id": {
              "description": "Идентификатор последнего значения на странице.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "Количество элементов в ответе.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1GiveoutStatus": {
          "type": "string",
          "description": "Статусы возвратной отгрузки:\n - `GIVEOUT_STATUS_UNSPECIFIED` — не определён, напишите в поддержку.\n - `GIVEOUT_STATUS_CREATED` — создана.\n - `GIVEOUT_STATUS_APPROVED` — одобрена.\n - `GIVEOUT_STATUS_COMPLETED` — завершена.\n - `GIVEOUT_STATUS_CANCELLED` — отменена.\n"
        },
        "GiveoutListResponseGiveoutDetails": {
          "type": "object",
          "properties": {
            "approved_articles_count": {
              "description": "Количество товаров в отгрузке.",
              "type": "integer",
              "format": "int32"
            },
            "created_at": {
              "description": "Дата и время.",
              "type": "string",
              "format": "date-time"
            },
            "giveout_id": {
              "description": "Идентификатор отгрузки.",
              "type": "integer",
              "format": "int64"
            },
            "giveout_status": {
              "$ref": "#/components/schemas/v1GiveoutStatus"
            },
            "total_articles_count": {
              "description": "Общее количество товаров, которые нужно забрать со склада.",
              "type": "integer",
              "format": "int32"
            },
            "warehouse_address": {
              "description": "Адрес склада.",
              "type": "string"
            },
            "warehouse_id": {
              "description": "Идентификатор склада.",
              "type": "integer",
              "format": "int64"
            },
            "warehouse_name": {
              "description": "Название склада.",
              "type": "string"
            }
          }
        },
        "v1GiveoutListResponse": {
          "type": "object",
          "properties": {
            "giveouts": {
              "description": "Идентификатор отгрузки.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GiveoutListResponseGiveoutDetails"
              }
            }
          }
        },
        "v1GiveoutInfoRequest": {
          "required": [
            "giveout_id"
          ],
          "type": "object",
          "properties": {
            "giveout_id": {
              "description": "Идентификатор отгрузки.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1GiveoutDeliverySchema": {
          "type": "string",
          "description": "Cхема доставки:\n - `GIVEOUT_DELIVERY_SCHEMA_UNSPECIFIED` — не определёна, напишите в поддержку.\n - `GIVEOUT_DELIVERY_SCHEMA_FBO` — FBO.\n - `GIVEOUT_DELIVERY_SCHEMA_FBS` — FBS.\n"
        },
        "GiveoutInfoResponseArticleDetails": {
          "type": "object",
          "properties": {
            "approved": {
              "description": "`true`, если отгрузка подтверждена.\n",
              "type": "boolean"
            },
            "delivery_schema": {
              "$ref": "#/components/schemas/v1GiveoutDeliverySchema"
            },
            "name": {
              "description": "Название товара.",
              "type": "string"
            },
            "seller_id": {
              "description": "Идентификатор продавца.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1GiveoutInfoResponse": {
          "type": "object",
          "properties": {
            "articles": {
              "description": "Артикулы товаров.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GiveoutInfoResponseArticleDetails"
              }
            },
            "giveout_id": {
              "description": "Идентификатор отгрузки.",
              "type": "integer",
              "format": "int64"
            },
            "giveout_status": {
              "$ref": "#/components/schemas/v1GiveoutStatus"
            },
            "warehouse_address": {
              "description": "Адрес склада.",
              "type": "string"
            },
            "warehouse_name": {
              "description": "Название склада.",
              "type": "string"
            }
          }
        },
        "v1GiveoutGetBarcodeResponse": {
          "type": "object",
          "properties": {
            "barcode": {
              "description": "Значение штрихкода в текстовом виде.",
              "type": "string"
            }
          }
        },
        "v1GiveoutGetPDFResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "file_content": {
              "type": "string",
              "description": "PDF-файл со штрихкодом в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "v1GiveoutGetPNGResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "file_content": {
              "type": "string",
              "description": "PNG-файл со штрихкодом в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "v1GiveoutBarcodeResetResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "file_content": {
              "type": "string",
              "description": "Изображение со штрихкодом в бинарном виде."
            },
            "file_name": {
              "type": "string",
              "description": "Название файла."
            },
            "content_type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "chatChatSendMessageRequest": {
          "required": [
            "chat_id",
            "text"
          ],
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "text": {
              "type": "string",
              "description": "Текст сообщения в формате plain text от 1 до 1000 символов."
            }
          },
          "title": "ChatSendMessage",
          "type": "object"
        },
        "chatChatSendMessageResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Результат обработки запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "chatChatSendFileRequest": {
          "required": [
            "chat_id"
          ],
          "properties": {
            "base64_content": {
              "type": "string",
              "description": "Файл в виде строки base64."
            },
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "name": {
              "type": "string",
              "description": "Название файла с расширением."
            }
          },
          "title": "ChatSendFile",
          "type": "object"
        },
        "chatChatSendFileResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Результат обработки запроса."
            }
          },
          "type": "object",
          "title": "object"
        },
        "chatChatStartRequest": {
          "required": [
            "posting_number"
          ],
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "title": "ChatStart",
          "type": "object"
        },
        "ChatStartResponseResult": {
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат работы метода."
        },
        "chatChatStartResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ChatStartResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "ChatListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр по чатам.",
          "properties": {
            "chat_status": {
              "type": "string",
              "description": "Фильтр по статусу чата:\n- `All` — все чаты.\n- `Opened` — открытые чаты.\n- `Closed` — закрытые чаты.\n\nЗначение по умолчанию: `All`.\n"
            },
            "unread_only": {
              "type": "boolean",
              "description": "Фильтр по чатам с непрочитанными сообщениями."
            }
          }
        },
        "ChatList": {
          "required": [
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/ChatListRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений в ответе. Значение по умолчанию — 30. Максимальное значение — 1000."
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента."
            }
          }
        },
        "ChatInfo": {
          "type": "object",
          "title": "object",
          "description": "Данные чата.",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "chat_status": {
              "type": "string",
              "description": "Статус чата:\n- `All` — все чаты.\n- `Opened` — открытые чаты.\n- `Closed` — закрытые чаты.\n"
            },
            "chat_type": {
              "type": "string",
              "description": "Тип чата:\n- `Seller_Support` — чат с поддержкой.\n- `Buyer_Seller` — чат с покупателем.\n"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания чата."
            },
            "first_unread_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор первого непрочитанного сообщения в чате."
            },
            "last_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор последнего сообщения в чате."
            },
            "unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество непрочитанных сообщений в чате."
            }
          }
        },
        "v2ChatListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "chats": {
              "description": "Данные чатов.",
              "items": {
                "$ref": "#/components/schemas/ChatInfo"
              }
            },
            "total_chats_count": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество чатов."
            },
            "total_unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество непрочитанных сообщений."
            }
          }
        },
        "ChatHistory": {
          "type": "object",
          "title": "object",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "direction": {
              "type": "string",
              "description": "Направление сортировки сообщений:\n- `Forward` — от старых к новым.\n- `Backward` — от новых к старым.\n\nЗначение по умолчанию — `Backward`. Количество сообщений можно установить в параметре `limit`.\n"
            },
            "from_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения, с которого начать вывод истории чата. По умолчанию — последнее видимое сообщение."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество сообщений в ответе. По умолчанию — 50. Максимальное значение — 1000."
            }
          },
          "required": [
            "chat_id",
            "limit"
          ]
        },
        "v2User": {
          "type": "object",
          "title": "object",
          "description": "Информация об участнике чата.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор участника чата."
            },
            "type": {
              "type": "string",
              "description": "Тип участника чата:\n- `customer` — покупатель,\n- `seller` — продавец,\n- `crm` — системные сообщения,\n- `courier` — курьер,\n- `support` — поддержка.\n"
            }
          }
        },
        "v2ChatMessage": {
          "type": "object",
          "title": "object",
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания сообщения."
            },
            "data": {
              "description": "Массив с содержимым сообщения в формате Markdown.",
              "items": {
                "type": "string"
              }
            },
            "is_read": {
              "type": "boolean",
              "description": "Признак, что сообщение прочитано."
            },
            "messageId": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения."
            },
            "user": {
              "$ref": "#/components/schemas/v2User"
            }
          }
        },
        "v2ChatHistoryResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не все сообщения."
            },
            "messages": {
              "description": "Массив сообщений, отсортированный в соответствии с параметром `direction` из тела запроса.",
              "items": {
                "$ref": "#/components/schemas/v2ChatMessage"
              }
            }
          }
        },
        "ChatRead": {
          "type": "object",
          "title": "object",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "from_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения."
            }
          },
          "required": [
            "chat_id"
          ]
        },
        "v2ChatReadResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество непрочитанных сообщений в чате."
            }
          }
        },
        "v2HsCode": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "HS-код товара."
            },
            "sku": {
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v2InvoiceCreateOrUpdateV2Request": {
          "required": [
            "date",
            "posting_number",
            "url"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата счёта-фактуры."
            },
            "hs_codes": {
              "type": "array",
              "description": "HS-коды товаров.",
              "items": {
                "$ref": "#/components/schemas/v2HsCode"
              }
            },
            "number": {
              "type": "string",
              "description": "Номер счёта-фактуры. Номер может содержать буквы и цифры, максимальная длина — 50 символов."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость, указанная в счёте-фактуре. Разделитель дробной части — точка, до двух знаков после точки."
            },
            "price_currency": {
              "type": "string",
              "description": "Валюта счёта-фактуры:\n- `USD` — доллар, \n- `EUR` — евро, \n- `TRY` — турецкая лира, \n- `CNY` — юань, \n- `RUB` — рубль, \n- `GBP` — фунт стерлингов.\n\nЗначение по умолчанию — `USD`.\n"
            },
            "url": {
              "type": "string",
              "description": "Ссылка на счёт-фактуру. Чтобы создать ссылку, используйте метод [v1/invoice/file/upload](#operation/invoice_upload)."
            }
          }
        },
        "v2InvoiceCreateOrUpdateV2Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода."
            }
          }
        },
        "v1InvoiceFileUploadRequest": {
          "required": [
            "base64_content",
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "base64_content": {
              "type": "string",
              "description": "Счёт-фактура в кодировке Base64."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1InvoiceFileUploadResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Ссылка на счёт-фактуру."
            }
          }
        },
        "v1InvoiceGetRequest": {
          "required": [
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "InvoiceGetV2ResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Информация о счёте-фактуре.",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата загрузки счёта-фактуры."
            },
            "file_url": {
              "type": "string",
              "description": "Ссылка на счёт-фактуру."
            },
            "hs_codes": {
              "type": "array",
              "description": "HS-коды товаров.",
              "items": {
                "$ref": "#/components/schemas/v2HsCode"
              }
            },
            "number": {
              "type": "string",
              "description": "Номер счёта-фактуры."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Стоимость, указанная в счёте-фактуре.\nРазделитель дробной части — точка, до двух знаков после точки.\nПример: `199.99`.\n"
            },
            "price_currency": {
              "type": "string",
              "description": "Валюта счёта-фактуры:\n- `USD` — доллар, \n- `EUR` — евро, \n- `TRY` — турецкая лира, \n- `CNY` — юань, \n- `RUB` — рубль, \n- `GBP` — фунт стерлингов.\n\nЗначение по умолчанию — `USD`.\n"
            }
          }
        },
        "v2InvoiceGetV2Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/InvoiceGetV2ResponseResult"
            }
          }
        },
        "v1InvoiceDeleteRequest": {
          "required": [
            "posting_number"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1InvoiceDeleteResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода."
            }
          }
        },
        "reportReportInfoRequest": {
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            }
          },
          "title": "ReportInfo",
          "type": "object"
        },
        "reportReportinfo": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата создания отчёта."
            },
            "error": {
              "type": "string",
              "description": "Код ошибки при генерации отчёта."
            },
            "file": {
              "type": "string",
              "description": "Ссылка на XLSX-файл.\n\nДля отчёта с типом `SELLER_RETURNS` ссылка доступна 5 минут после выполнения запроса.\n"
            },
            "params": {
              "additionalProperties": {
                "type": "string",
                "description": "Фильтр."
              },
              "type": "object",
              "description": "Массив с фильтрами, указанными при создании отчёта продавцом."
            },
            "report_type": {
              "type": "string",
              "description": "Тип отчёта:\n  - `SELLER_PRODUCTS` — отчёт по товарам,\n  - `SELLER_TRANSACTIONS` — отчёт по транзакциям,\n  - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,\n  - `SELLER_STOCK` — отчёт об остатках товаров,\n  - `SELLER_RETURNS` — отчёт о возвратах,\n  - `SELLER_POSTINGS` — отчёт об отправлениях,\n  - `SELLER_FINANCE` — отчёт о финансах,\n  - `SELLER_PRODUCT_DISCOUNTED` — отчёт об уценённых товарах,\n  - `DOCUMENT_B2B_SALES` — отчёт о продажах юридическим лицам,\n  - `MUTUAL_SETTLEMENT` — отчёт о взаиморасчётах,\n  - `SELLER_RETURNS_V2` — отчёт о возвратах FBO и FBS,\n  - `COMPENSATION` — отчёт о компенсациях,\n  - `DECOMPENSATION` — отчёт о декомпенсациях.\n"
            },
            "status": {
              "type": "string",
              "description": "Статус генерации отчёта:\n  - `waiting` — в очереди на обработку,\n  - `processing` — обрабатывается,\n  - `success` — отчёт успешно создан,\n  - `failed` — ошибка при создании отчёта.\n"
            }
          },
          "title": "Common",
          "type": "object",
          "description": "Информация об отчёте."
        },
        "reportReportInfoResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/reportReportinfo"
            }
          },
          "type": "object",
          "title": "object"
        },
        "ReportListRequestReportType": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "title": "string",
          "description": "Тип отчёта:\n  - `ALL` — все отчёты,\n  - `SELLER_PRODUCTS` — отчёт по товарам,\n  - `SELLER_TRANSACTIONS` — отчёт по транзакциям,\n  - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,\n  - `SELLER_STOCK` — отчёт об остатках товаров,\n  - `SELLER_RETURNS` — отчёт о возвратах,\n  - `SELLER_POSTINGS` — отчёт об отправлениях,\n  - `SELLER_FINANCE` — отчёт о финансах,\n  - `SELLER_PRODUCT_DISCOUNTED` — отчёт об уценённых товарах,\n  - `DOCUMENT_B2B_SALES` — отчёт о продажах юридическим лицам,\n  - `MUTUAL_SETTLEMENT` — отчёт о взаиморасчётах,\n  - `SELLER_RETURNS_V2` — отчёт о возвратах FBO и FBS,\n  - `COMPENSATION` — отчёт о компенсациях,\n  - `DECOMPENSATION` — отчёт о декомпенсациях.\n"
        },
        "reportReportListRequest": {
          "required": [
            "page",
            "page_size"
          ],
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество значений на странице:\n  - по умолчанию — 100,\n  - маĸсимальное значение — 1000.\n"
            },
            "report_type": {
              "$ref": "#/components/schemas/ReportListRequestReportType"
            }
          },
          "title": "ReportList",
          "type": "object"
        },
        "reportReport": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта. Чтобы получить отчёт, передайте это значение в метод [/v1/report/info](#operation/ReportAPI_ReportInfo)."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата создания отчёта."
            },
            "error": {
              "type": "string",
              "description": "Код ошибки при генерации отчёта."
            },
            "file": {
              "type": "string",
              "description": "Ссылка на XLSX-файл.\n\nДля отчёта с типом `SELLER_RETURNS` ссылка доступна 5 минут после выполнения запроса.\n"
            },
            "params": {
              "additionalProperties": {
                "type": "string",
                "description": "Фильтр."
              },
              "type": "object",
              "description": "Массив с фильтрами, указанными при создании отчёта продавцом."
            },
            "report_type": {
              "type": "string",
              "description": "Тип отчёта:\n  - `SELLER_PRODUCTS` — отчёт по товарам,\n  - `SELLER_TRANSACTIONS` — отчёт по транзакциям,\n  - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,\n  - `SELLER_STOCK` — отчёт об остатках товаров,\n  - `SELLER_RETURNS` — отчёт о возвратах,\n  - `SELLER_POSTINGS` — отчёт об отправлениях,\n  - `SELLER_FINANCE` — отчёт о финансах,\n  - `SELLER_PRODUCT_DISCOUNTED` — отчёт об уценённых товарах,\n  - `DOCUMENT_B2B_SALES` — отчёт о продажах юридическим лицам,\n  - `MUTUAL_SETTLEMENT` — отчёт о взаиморасчётах,\n  - `SELLER_RETURNS_V2` — отчёт о возвратах FBO и FBS,\n  - `COMPENSATION` — отчёт о компенсациях,\n  - `DECOMPENSATION` — отчёт о декомпенсациях.\n"
            },
            "status": {
              "type": "string",
              "description": "Статус генерации отчёта:\n  - `waiting` — в очереди на обработку,\n  - `processing` — обрабатывается,\n  - `success` — отчёт успешно создан,\n  - `failed` — ошибка при создании отчёта.\n"
            }
          },
          "title": "Common",
          "type": "object",
          "description": "Информация об отчёте."
        },
        "ReportListResponseResult": {
          "properties": {
            "reports": {
              "items": {
                "$ref": "#/components/schemas/reportReport"
              },
              "type": "array",
              "description": "Массив со всеми сгенерированными отчётами."
            },
            "total": {
              "format": "int32",
              "type": "integer",
              "description": "Суммарное количество отчётов."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "reportReportListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ReportListResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "reportLanguage": {
          "default": "DEFAULT",
          "enum": null,
          "title": "Language",
          "type": "string",
          "description": "Язык ответа:\n  - `RU` — русский,\n  - `EN` — английский.\n"
        },
        "reportCreateCompanyProductsReportRequestVisibility": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "title": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары, кроме архивных.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `BANNED` — заблокированные товары.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n"
        },
        "reportCreateCompanyProductsReportRequest": {
          "properties": {
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            },
            "offer_id": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "search": {
              "type": "string",
              "description": "Поиск по содержанию записи, проверяет наличие."
            },
            "sku": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "visibility": {
              "$ref": "#/components/schemas/reportCreateCompanyProductsReportRequestVisibility"
            }
          },
          "title": "CreateCompanyProductsReport",
          "type": "object"
        },
        "CreateReportResponseCode": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта. По нему вы можете получить отчёт в течение 3 дней после запроса. Чтобы получить отчёт, передайте это значение в метод [/v1/report/info](#operation/ReportAPI_ReportInfo)."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "reportCreateReportResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CreateReportResponseCode"
            }
          },
          "type": "object",
          "title": "object"
        },
        "v2ReportReturnsCreateRequestFilter": {
          "properties": {
            "delivery_schema": {
              "type": "string",
              "enum": [
                "FBS",
                "FBO",
                "ALL"
              ],
              "description": "Фильтр по схеме работы: \n- `FBS` — возвраты на свой склад. \n- `FBO` — возвраты на склад маркетплейса.\n- `ALL` — все возвраты.\n"
            },
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, с которой данные отображаются в отчёте.\n\nДоступно только за последние три месяца.\n"
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, по которую данные отображаются в отчёте.\n\nДоступно только за последние три месяца.\n"
            },
            "status": {
              "type": "string",
              "enum": [
                "DisputeOpened",
                "OnSellerApproval",
                "ArrivedAtReturnPlace",
                "OnSellerClarification",
                "OnSellerClarificationAfterPartialCompensation",
                "OfferedPartialCompensation",
                "ReturnMoneyApproved",
                "PartialCompensationReturned",
                "CancelledDisputeNotOpen",
                "Rejected",
                "CrmRejected",
                "Cancelled",
                "Approved",
                "ApprovedByOzon",
                "ReceivedBySeller",
                "MovingToSeller",
                "ReturnCompensated",
                "ReturningToSellerByCourier",
                "Utilizing",
                "Utilized",
                "MoneyReturned",
                "PartialCompensationInProcess",
                "DisputeYouOpened",
                "CompensationRejected",
                "DisputeOpening",
                "CompensationOffered",
                "WaitingCompensation",
                "SendingError",
                "CompensationRejectedBySla",
                "CompensationRejectedBySeller",
                "MovingToOzon",
                "ReturnedToOzon",
                "MoneyReturnedBySystem",
                "WaitingShipment"
              ],
              "description": "Фильтр по статусу возврата:\n- `DisputeOpened` — открыт спор с покупателем;\n- `OnSellerApproval` — на согласовании у продавца;\n- `ArrivedAtReturnPlace` — в пункте выдачи;\n- `OnSellerClarification` — на уточнении у продавца;\n- `OnSellerClarificationAfterPartialCompensation` — на уточнении у продавца после частичной компенсации;\n- `OfferedPartialCompensation` — предложена частичная компенсация;\n- `ReturnMoneyApproved` — одобрен возврат денег;\n- `PartialCompensationReturned` — вернули часть денег;\n- `CancelledDisputeNotOpen` — возврат отклонён, спор не открыт;\n- `Rejected` — заявка отклонена;\n- `CrmRejected` — заявка отклонена Ozon;\n- `Cancelled` — заявка отменена;\n- `Approved` — заявка одобрена продавцом;\n- `ApprovedByOzon` — заявка одобрена Ozon;\n- `ReceivedBySeller` — продавец получил возврат;\n- `MovingToSeller` — возврат на пути к продавцу;\n- `ReturnCompensated` — продавец получил компенсацию;\n- `ReturningToSellerByCourier` — курьер везёт возврат продавцу;\n- `Utilizing` — на утилизации;\n- `Utilized` — утилизирован;\n- `MoneyReturned` — покупателю вернули всю сумму;\n- `PartialCompensationInProcess` — одобрен частичный возврат денег;\n- `DisputeYouOpened` — продавец открыл спор;\n- `CompensationRejected` — отказано в компенсации;\n- `DisputeOpening` — обращение в поддержку отправлено;\n- `CompensationOffered` — ожидает вашего решения по компенсации;\n- `WaitingCompensation` — ожидает компенсации;\n- `SendingError` — ошибка при отправке обращения в поддержку;\n- `CompensationRejectedBySla` — истёк срок решения;\n- `CompensationRejectedBySeller` — продавец отказался от компенсации;\n- `MovingToOzon` — едет на склад Ozon;\n- `ReturnedToOzon` — на складе Ozon;\n- `MoneyReturnedBySystem` — быстрый возврат;\n- `WaitingShipment` — ожидает отправки.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "required": [
            "date_from",
            "date_to",
            "status"
          ]
        },
        "v2ReportReturnsCreateRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "type": "object",
              "description": "Фильтр.",
              "$ref": "#/components/schemas/v2ReportReturnsCreateRequestFilter"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          }
        },
        "v2ReportReturnsCreateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CreateReportResponseCode"
            }
          }
        },
        "reportCreateCompanyPostingsReportRequestFilter": {
          "properties": {
            "cancel_reason_id": {
              "description": "Идентификатор причины отмены.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "delivery_schema": {
              "description": "Схема работы — FBO или FBS.\n\nЗа один запрос вы можете передать только одно значение:\n* `fbo` — чтобы получить отчёт по схеме FBO,\n* `fbs` — чтобы получить отчёт по схеме FBS.\n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "offer_id": {
              "description": "Идентификатор товара в системе продавца — артикул.",
              "type": "string"
            },
            "processed_at_from": {
              "format": "date-time",
              "type": "string",
              "description": "Время, когда заказ попал в обработку."
            },
            "processed_at_to": {
              "format": "date-time",
              "type": "string",
              "description": "Время, когда заказ появился в личном кабинете."
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "status_alias": {
              "description": "Текст статуса.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "statuses": {
              "description": "Числовой статус.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "title": {
              "description": "Название товара.",
              "type": "string"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр."
        },
        "reportCreateCompanyPostingsReportRequest": {
          "required": [
            "filter"
          ],
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/reportCreateCompanyPostingsReportRequestFilter"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object",
          "title": "object"
        },
        "financev3Period": {
          "type": "object",
          "title": "object",
          "description": "Период формирования отчёта.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, с ĸоторой рассчитывается отчёт."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, по ĸоторую рассчитывается отчёт."
            }
          },
          "required": [
            "from",
            "to"
          ]
        },
        "v3FinanceCashFlowStatementListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "date": {
              "$ref": "#/components/schemas/financev3Period"
            },
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "with_details": {
              "type": "boolean",
              "description": "`true`, если нужно добавить дополнительные параметры в ответ."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "required": [
            "page",
            "page_size",
            "date"
          ]
        },
        "v3FinanceCashFlowStatementListResponsePeriod": {
          "type": "object",
          "title": "object",
          "description": "Период.",
          "properties": {
            "begin": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор."
            }
          }
        },
        "FinanceCashFlowStatementListResponseCashFlow": {
          "type": "object",
          "title": "object",
          "properties": {
            "period": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponsePeriod"
            },
            "orders_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма цен реализованных товаров."
            },
            "returns_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма цен возвращённых товаров."
            },
            "commission_amount": {
              "type": "number",
              "format": "double",
              "description": "Комиссия Ozon за реализацию товаров."
            },
            "services_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма дополнительных услуг."
            },
            "item_delivery_and_return_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма услуг логистики."
            },
            "currency_code": {
              "type": "string",
              "description": "Код валюты, в которой рассчитываются комиссии."
            }
          }
        },
        "FinanceCashFlowStatementListResponseDeliveryService": {
          "type": "object",
          "title": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceServiceItemDirectFlowLogisticSum` — логистика,\n - `MarketplaceServiceItemDirectFlowLogisticDC` — логистика РЦ,\n - `MarketplaceServiceItemDropoff` — обработка отправления Drop-off,\n - `MarketplaceServiceItemDirectFlowTrans` — магистраль,\n - `MarketplaceServiceDCFlowTrans` — магистраль РЦ,\n - `MarketplaceServiceItemFulfillment` — сборка заказа,\n - `MarketplaceServiceItemDelivToCustomer` — последняя миля.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsServices": {
          "type": "object",
          "title": "object",
          "description": "Плата за обработку и доставку.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDeliveryService"
            }
          }
        },
        "DetailsDeliveryDetails": {
          "type": "object",
          "title": "object",
          "description": "Заказы.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма, на которую выкуплено товаров с учётом комиссий."
            },
            "delivery_services": {
              "$ref": "#/components/schemas/DetailsServices",
              "description": "Плата за обработку и доставку."
            }
          }
        },
        "DetailsPayment": {
          "type": "object",
          "title": "object",
          "description": "Выплачено за период.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "payment": {
              "type": "number",
              "format": "double",
              "description": "Сумма выплаты."
            }
          }
        },
        "FinanceCashFlowStatementListResponseReturnService": {
          "type": "object",
          "title": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возвратов,\n - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка частичного невыкупа,\n - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отменённых и невостребованных товаров,\n - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsReturns": {
          "type": "object",
          "title": "object",
          "description": "Плата за возвраты и отмены.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseReturnService"
            }
          }
        },
        "DetailsReturnDetails": {
          "type": "object",
          "title": "object",
          "description": "Возвраты и отмены.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма, на которую получено возвратов с учётом комиссий."
            },
            "return_services": {
              "$ref": "#/components/schemas/DetailsReturns",
              "description": "Плата за возвраты и отмены."
            }
          }
        },
        "DetailsRfbsDetails": {
          "type": "object",
          "title": "object",
          "description": "Перечисления по схеме rFBS.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "transfer_delivery": {
              "type": "number",
              "format": "double",
              "description": "Перечисления от покупателей."
            },
            "transfer_delivery_return": {
              "type": "number",
              "format": "double",
              "description": "Возврат перечислений покупателям."
            },
            "compensation_delivery_return": {
              "type": "number",
              "format": "double",
              "description": "Компенсация перечислений за доставку."
            },
            "partial_compensation": {
              "type": "number",
              "format": "double",
              "description": "Перечисления частичных компенсаций покупателям."
            },
            "partial_compensation_return": {
              "type": "number",
              "format": "double",
              "description": "Возврат частичных компенсаций."
            }
          }
        },
        "FinanceCashFlowStatementListResponseService": {
          "type": "object",
          "title": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции:\n  - `MarketplaceServiceItemElectronicServiceStencil` — услуга «Трафареты»;\n  - `MarketplaceServiceItemElectronicServicesPromotionInSearch` — услуга «Продвижение в поиске»;\n  - `MarketplaceServiceItemElectronicServicesBrandShelf` — услуга «Брендовая полка»;\n  - `MarketplaceServiceBrandPromotion` и `MarketplaceServiceBrandCommission` — услуга «Продвижение бренда»;\n  - `MarketplaceServiceItemMarketingServices` — маркетинговые услуги; \n  - `MarketplaceServiceItemTechnicalServicesAndOtherServices` — технические и иные услуги;  \n  - `MarketplaceServiceItemOtherElectronicServices` — иные электронные услуги;  \n  - `ItemAgentServiceStarsMembership` — звёздные товары;\n  - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS;\n  - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе;\n  - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца»;\n  - `OperationMarketplaceServiceStorage` — услуга размещения товаров;\n  - `MarketplaceServiceStockDisposal` — утилизация со стока;\n  - `MarketplaceReturnDisposalServiceFbsItem` — утилизация FBS;\n  - `MarketplaceServiceItemFlexiblePaymentSchedule` — услуга «Гибкий график выплат»;\n  - `MarketplaceServiceProcessingSpoilage` — обработка брака;\n  - `MarketplaceServiceProcessingIdentifiedSurplus` — обработка опознанных излишков;\n  - `MarketplaceServiceProcessingIdentifiedDiscrepancies` — бронирование места для размещения на складе;\n  - `MarketplaceServiceItemInternetSiteAdvertising` — реклама на сайте Ozon;\n  - `MarketplaceServiceItemSubscribtionPremium` — премиум-подписка;\n  - `MarketplaceAgencyFeeAggregator3PLGlobalItem` — агентское вознаграждение Ozon.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsService": {
          "type": "object",
          "title": "object",
          "description": "Услуги.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseService"
              }
            }
          }
        },
        "FinanceCashFlowStatementListResponseDetailsOthers": {
          "type": "object",
          "title": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга,\n - `MarketplaceSellerCompensationLossOfGoodsOperation` — компенсация за уничтоженный товар,\n - `MarketplaceSellerCorrectionOperation` — корректировка стоимости услуг,\n - `OperationCorrectionSeller` — инвентаризация взаиморасчётов,\n - `OperationMarketplaceWithHoldingForUndeliverableGoods` — компенсация за недовложение товаров,\n - `OperationClaim` — начисления по претензиям.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsOthers": {
          "type": "object",
          "title": "object",
          "description": "Компенсация и прочие начисления.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDetailsOthers"
              }
            }
          }
        },
        "FinanceCashFlowStatementListResponseDetails": {
          "type": "object",
          "title": "object",
          "description": "Детализированная информация.",
          "properties": {
            "begin_balance_amount": {
              "type": "number",
              "format": "double",
              "description": "Баланс на начало периода."
            },
            "delivery": {
              "$ref": "#/components/schemas/DetailsDeliveryDetails",
              "description": "Результат работы метода."
            },
            "invoice_transfer": {
              "type": "number",
              "format": "double",
              "description": "Сумма к выплате за период."
            },
            "loan": {
              "type": "number",
              "format": "double",
              "description": "Перевод по договорам займа."
            },
            "payments": {
              "description": "Выплачено в периоде.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/DetailsPayment"
            },
            "period": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponsePeriod",
              "description": "Период."
            },
            "return": {
              "$ref": "#/components/schemas/DetailsReturnDetails"
            },
            "rfbs": {
              "$ref": "#/components/schemas/DetailsRfbsDetails",
              "description": "Перечисления по схеме rFBS."
            },
            "services": {
              "$ref": "#/components/schemas/DetailsService",
              "description": "Услуги."
            },
            "others": {
              "$ref": "#/components/schemas/DetailsOthers",
              "description": "Компенсация и прочие начисления."
            },
            "end_balance_amount": {
              "type": "number",
              "format": "double",
              "description": "Баланс на конец периода."
            }
          }
        },
        "v3FinanceCashFlowStatementListResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат работы метода.",
          "properties": {
            "cash_flows": {
              "description": "Список отчётов.",
              "items": {
                "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseCashFlow"
              }
            },
            "details": {
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDetails",
              "description": "Детализированная информация."
            },
            "page_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество страниц с отчётами."
            }
          }
        },
        "v3FinanceCashFlowStatementListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponseResult"
            }
          }
        },
        "reportCreateDiscountedRequest": {
          "type": "object",
          "title": "object"
        },
        "reportCreateDiscountedResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта. Чтобы получить отчёт, передайте это значение в метод [/v1/report/info](#operation/ReportAPI_ReportInfo)."
            }
          }
        },
        "v1CreateStockByWarehouseReportRequest": {
          "required": [
            "warehouseId"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            },
            "warehouseId": {
              "description": "Идентификаторы складов.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "commonCreateReportResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CreateReportResponseCode"
            }
          }
        },
        "seller_serviceanalyticsDimension": {
          "default": "unknownDimension",
          "enum": null,
          "type": "string",
          "title": "string"
        },
        "FilterOp": {
          "default": "EQ",
          "enum": null,
          "type": "string",
          "title": "string",
          "description": "<br>\n\nОперация сравнения:\n  - `EQ` — равно,\n  - `GT` — больше,\n  - `GTE` — больше или равно,\n  - `LT` — меньше,\n  - `LTE` — меньше или равно.\n"
        },
        "analyticsFilter": {
          "properties": {
            "key": {
              "type": "string",
              "description": "Параметр сортировки. Можно передать любой атрибут из параметров `dimension` и `metric`, кроме атрибута `brand`."
            },
            "op": {
              "$ref": "#/components/schemas/FilterOp"
            },
            "value": {
              "type": "string",
              "description": "Значение для сравнения."
            }
          },
          "type": "object",
          "title": "object"
        },
        "analyticsMetric": {
          "default": "unknown_metric",
          "enum": null,
          "type": "string",
          "title": "string"
        },
        "SortingOrder": {
          "default": "ASC",
          "enum": null,
          "type": "string",
          "title": "string",
          "description": "Вид сортировки:\n  - `ASC` — по возрастанию,\n  - `DESC` — по убыванию.\n"
        },
        "analyticsSorting": {
          "properties": {
            "key": {
              "type": "string",
              "description": "Метрика, по которой будет отсортирован результат запроса."
            },
            "order": {
              "$ref": "#/components/schemas/SortingOrder"
            }
          },
          "type": "object",
          "title": "object"
        },
        "analyticsAnalyticsGetDataRequest": {
          "required": [
            "date_from",
            "date_to",
            "dimension",
            "metrics",
            "limit"
          ],
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата, с которой будут данные в отчёте.\n\nЕсли у вас нет Premium-подписки, укажите дату в пределах последних трёх месяцев.\n"
            },
            "date_to": {
              "type": "string",
              "description": "Дата, по которую будут данные в отчёте."
            },
            "dimension": {
              "items": {
                "$ref": "#/components/schemas/seller_serviceanalyticsDimension"
              },
              "type": "array",
              "description": "Группировка данных в отчёте.\n\nСпособы группировки, доступные всем продавцам:\n  - `unknownDimension` — неизвестное измерение,\n  - `sku` — идентификатор товара,\n  - `spu` — идентификатор товара,\n  - `day` — день,\n  - `week` — неделя,\n  - `month` — месяц.\n\nСпособы группировки, доступные только продавцам с Premium-подпиской:\n  - `year` — год,\n  - `category1` — категория первого уровня,\n  - `category2` — категория второго уровня,\n  - `category3` — категория третьего уровня,\n  - `category4` — категория четвертого уровня,\n  - `brand` — бренд,\n  - `modelID` — модель.\n"
            },
            "filters": {
              "items": {
                "$ref": "#/components/schemas/analyticsFilter"
              },
              "type": "array",
              "description": "Фильтры."
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "metrics": {
              "items": {
                "$ref": "#/components/schemas/analyticsMetric"
              },
              "type": "array",
              "description": "Укажите до 14 метрик. Если их будет больше, вы получите ошибку с кодом `InvalidArgument`.\n\nСписок метриĸ, по ĸоторым будет сформирован отчёт.\n\nМетрики, доступные всем продавцам:\n  - `revenue` — заказано на сумму,\n  - `ordered_units` — заказано товаров.\n\nМетрики, доступные только продавцам с Premium-подпиской:\n  - `unknown_metric` — неизвестная метрика.\n  - `hits_view_search` — показы в поиске и в категории.\n  - `hits_view_pdp` — показы на карточке товара.\n  - `hits_view` — всего показов.\n  - `hits_tocart_search` — в корзину из поиска или категории.\n  - `hits_tocart_pdp` — в корзину из карточки товара.\n  - `hits_tocart` — всего добавлено в корзину.\n  - `session_view_search` — сессии с показом в поиске или в каталоге. Считаются уникальные посетители с просмотром в поиске или каталоге.\n  - `session_view_pdp` — сессии с показом на карточке товара. Считаются уникальные посетители, которые просмотрели карточку товара.\n  - `session_view` — всего сессий. Считаются уникальные посетители.\n  - `conv_tocart_search` — конверсия в корзину из поиска или категории.\n  - `conv_tocart_pdp` — конверсия в корзину из карточки товара.\n  - `conv_tocart` — общая конверсия в корзину.\n  - `returns` — возвращено товаров.\n  - `cancellations` — отменено товаров.\n  - `delivered_units` — доставлено товаров.\n  - `position_category` — позиция в поиске и категории.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "sort": {
              "items": {
                "$ref": "#/components/schemas/analyticsSorting"
              },
              "type": "array",
              "description": "Настройки сортировки отчёта."
            }
          },
          "type": "object",
          "title": "object"
        },
        "analyticsDataRowDimension": {
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "name": {
              "type": "string",
              "description": "Наименование."
            }
          },
          "type": "object",
          "title": "object"
        },
        "analyticsDataRow": {
          "properties": {
            "dimensions": {
              "items": {
                "$ref": "#/components/schemas/analyticsDataRowDimension"
              },
              "type": "array",
              "description": "Группировка данных в отчёте."
            },
            "metrics": {
              "items": {
                "format": "double",
                "type": "number"
              },
              "type": "array",
              "description": "Список значений метрики."
            }
          },
          "type": "object",
          "title": "object"
        },
        "AnalyticsGetDataResponseResult": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/analyticsDataRow"
              },
              "type": "array",
              "description": "Массив данных."
            },
            "totals": {
              "items": {
                "format": "double",
                "type": "number"
              },
              "type": "array",
              "description": "Итоговые и средние значения метрик."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "analyticsAnalyticsGetDataResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/AnalyticsGetDataResponseResult"
            },
            "timestamp": {
              "type": "string",
              "description": "Время создания отчёта."
            }
          },
          "type": "object",
          "title": "object"
        },
        "AnalyticsGetStockOnWarehousesRequestWarehouseType": {
          "default": "ALL",
          "enum": [
            "ALL",
            "EXPRESS_DARK_STORE",
            "NOT_EXPRESS_DARK_STORE"
          ],
          "description": "Фильтр по типу склада:\n  - `EXPRESS_DARK_STORE` — склады Ozon с доставкой Fresh.\n  - `NOT_EXPRESS_DARK_STORE` — склады Ozon без доставки Fresh.\n  - `ALL` — все склады Ozon.\n",
          "type": "string"
        },
        "analyticsStockOnWarehouseRequest": {
          "required": [
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество ответов на странице. По умолчанию — 100."
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "warehouse_type": {
              "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesRequestWarehouseType"
            }
          }
        },
        "analyticsStockOnWarehouseResultRows": {
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "item_code": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "item_name": {
              "type": "string",
              "description": "Название товара в системе Ozon."
            },
            "free_to_sell_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, доступное к продаже на Ozon."
            },
            "promised_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, указанное в подтверждённых будущих поставках."
            },
            "reserved_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, зарезервированное для покупки, возврата и перевозки между складами."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада, где находится товар."
            }
          }
        },
        "analyticsStockOnWarehouseResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Результат запроса.",
          "properties": {
            "rows": {
              "type": "array",
              "description": "Информация о товарах и остатках.",
              "items": {
                "$ref": "#/components/schemas/analyticsStockOnWarehouseResultRows"
              }
            }
          }
        },
        "analyticsStockOnWarehouseResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/analyticsStockOnWarehouseResponseResult"
            }
          }
        },
        "v1AnalyticsTurnoverStocksRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 1000,
              "description": "Количество значений в ответе.\n"
            },
            "offset": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов, которое будет пропущено в ответе.\n\nНапример, если `offset = 10`, ответ начнётся с 11-го найденного элемента.\n"
            },
            "sku": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификаторы товаров в системе Ozon — SKU."
            }
          }
        },
        "v1AnalyticsTurnoverStocksResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "ads": {
              "type": "number",
              "format": "double",
              "description": "Среднесуточное количество проданных единиц товара за последние 60 дней."
            },
            "current_stock": {
              "type": "integer",
              "format": "int64",
              "description": "Остаток товара, шт."
            },
            "idc": {
              "type": "number",
              "format": "double",
              "description": "На сколько дней хватит остатка товара с учётом среднесуточных продаж."
            },
            "idc_grade": {
              "type": "string",
              "enum": [
                "GRADES_NONE",
                "GRADES_NOSALES",
                "GRADES_GREEN",
                "GRADES_YELLOW",
                "GRADES_RED",
                "GRADES_CRITICAL"
              ],
              "default": "GRADES_NONE",
              "description": "Уровень остатка товара:\n- `GRADES_NONE` — ожидаются поставки;\n- `GRADES_NOSALES` — нет продаж;\n- `GRADES_GREEN` — зелёный, «хороший»;\n- `GRADES_YELLOW` — жёлтый, «средний»;\n- `GRADES_RED` — красный, «плохой»;\n- `GRADES_CRITICAL` — критический.\n"
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "turnover": {
              "type": "number",
              "format": "double",
              "description": "Фактическая оборачиваемость в днях."
            },
            "turnover_grade": {
              "type": "string",
              "enum": [
                "GRADES_NONE",
                "GRADES_NOSALES",
                "GRADES_GREEN",
                "GRADES_YELLOW",
                "GRADES_RED",
                "GRADES_CRITICAL"
              ],
              "default": "GRADES_NONE",
              "description": "Уровень оборачиваемости:\n- `GRADES_NONE` — ожидаются поставки;\n- `GRADES_NOSALES` — нет продаж;\n- `GRADES_GREEN` — зелёный, «хороший»;\n- `GRADES_YELLOW` — жёлтый, «средний»;\n- `GRADES_RED` — красный, «плохой»;\n- `GRADES_CRITICAL` — критический.\n"
            }
          }
        },
        "v1AnalyticsTurnoverStocksResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "description": "Товары.",
              "items": {
                "$ref": "#/components/schemas/v1AnalyticsTurnoverStocksResponseItem"
              }
            }
          }
        },
        "v2GetRealizationReportRequestV2": {
          "required": [
            "month",
            "year"
          ],
          "type": "object",
          "properties": {
            "month": {
              "description": "Месяц.",
              "type": "integer",
              "format": "int32"
            },
            "year": {
              "description": "Год.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "GetRealizationReportResponseV2Header": {
          "properties": {
            "contract_date": {
              "type": "string",
              "description": "Дата заключения договора."
            },
            "contract_number": {
              "type": "string",
              "description": "Номер договора."
            },
            "currency_sys_name": {
              "type": "string",
              "description": "Валюта."
            },
            "doc_amount": {
              "type": "number",
              "format": "double",
              "description": "Всего к начислению."
            },
            "doc_date": {
              "type": "string",
              "description": "Дата формирования документа."
            },
            "number": {
              "type": "string",
              "description": "Номер отчёта о реализации."
            },
            "payer_inn": {
              "type": "string",
              "description": "ИНН плательщика."
            },
            "payer_kpp": {
              "type": "string",
              "description": "КПП плательщика."
            },
            "payer_name": {
              "type": "string",
              "description": "Название плательщика."
            },
            "receiver_inn": {
              "type": "string",
              "description": "ИНН получателя."
            },
            "receiver_kpp": {
              "type": "string",
              "description": "КПП получателя."
            },
            "receiver_name": {
              "type": "string",
              "description": "Название получателя."
            },
            "start_date": {
              "type": "string",
              "description": "Начало периода."
            },
            "stop_date": {
              "type": "string",
              "description": "Конец периода."
            },
            "vat_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма НДС в составе начислений."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Титульный лист отчёта."
        },
        "RowItemCommission": {
          "properties": {
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма."
            },
            "bonus": {
              "type": "number",
              "format": "double",
              "description": "Баллы за скидки."
            },
            "commission": {
              "type": "number",
              "format": "double",
              "description": "Итого комиссия с учётом скидок и наценки."
            },
            "compensation": {
              "type": "number",
              "format": "double",
              "description": "Доплата за счёт Ozon."
            },
            "price_per_instance": {
              "type": "number",
              "format": "double",
              "description": "Цена за экземпляр."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара."
            },
            "standard_fee": {
              "type": "number",
              "format": "double",
              "description": "Базовое вознаграждение Ozon."
            },
            "bank_coinvestment": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: зелёные цены."
            },
            "stars": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: звёзды."
            },
            "pick_up_point_coinvestment": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: АПВЗ."
            },
            "total": {
              "type": "number",
              "format": "double",
              "description": "Итого к начислению."
            }
          },
          "description": "Комиссия за доставку.",
          "type": "object",
          "title": "object"
        },
        "RowItem": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод товара."
            },
            "name": {
              "type": "string",
              "description": "Наименование товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация о товаре."
        },
        "RowItemCommissionReturn": {
          "properties": {
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма."
            },
            "bonus": {
              "type": "number",
              "format": "double",
              "description": "Баллы за скидки."
            },
            "commission": {
              "type": "number",
              "format": "double",
              "description": "Итого комиссия с учётом скидок и наценки."
            },
            "compensation": {
              "type": "number",
              "format": "double",
              "description": "Доплата за счёт Ozon."
            },
            "price_per_instance": {
              "type": "number",
              "format": "double",
              "description": "Цена за экземпляр."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара."
            },
            "standard_fee": {
              "type": "number",
              "format": "double",
              "description": "Базовое вознаграждение Ozon."
            },
            "bank_coinvestment": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: зелёные цены."
            },
            "stars": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: звёзды."
            },
            "pick_up_point_coinvestment": {
              "type": "number",
              "format": "double",
              "description": "Выплаты по механикам лояльности партнёров: АПВЗ."
            },
            "total": {
              "type": "number",
              "format": "double",
              "description": "Итого к начислению."
            }
          },
          "description": "Комиссия за возврат товара.",
          "type": "object",
          "title": "object"
        },
        "GetRealizationReportResponseV2Row": {
          "type": "object",
          "title": "object",
          "properties": {
            "commission_ratio": {
              "type": "number",
              "format": "double",
              "description": "Доля комиссии за продажу по категории."
            },
            "delivery_commission": {
              "$ref": "#/components/schemas/RowItemCommission"
            },
            "item": {
              "$ref": "#/components/schemas/RowItem"
            },
            "return_commission": {
              "$ref": "#/components/schemas/RowItemCommissionReturn"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32",
              "description": "Номер строки в отчёте."
            },
            "seller_price_per_instance": {
              "type": "number",
              "format": "double",
              "description": "Цена продавца с учётом скидки."
            }
          }
        },
        "GetRealizationReportResponseV2Result": {
          "properties": {
            "header": {
              "$ref": "#/components/schemas/GetRealizationReportResponseV2Header"
            },
            "rows": {
              "description": "Таблица отчёта.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetRealizationReportResponseV2Row"
              }
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "v2GetRealizationReportResponseV2": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/GetRealizationReportResponseV2Result"
            }
          }
        },
        "FilterPeriod": {
          "properties": {
            "from": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр по дате."
        },
        "FinanceTransactionListV3RequestFilter": {
          "oneOf": [
            {
              "title": "posting_number",
              "required": [
                "posting_number"
              ]
            },
            {
              "title": "date",
              "required": [
                "date"
              ]
            }
          ],
          "properties": {
            "date": {
              "$ref": "#/components/schemas/FilterPeriod"
            },
            "operation_type": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Тип операции:\n  - `ClientReturnAgentOperation` — получение возврата, отмены, невыкупа от покупателя;\n  - `MarketplaceMarketingActionCostOperation` — услуги продвижения товаров;\n  - `MarketplaceSaleReviewsOperation` — приобретение отзывов на платформе;\n  - `MarketplaceSellerCompensationOperation` — прочие компенсации;\n  - `OperationAgentDeliveredToCustomer` — доставка покупателю;\n  - `OperationAgentDeliveredToCustomerCanceled` — доставка покупателю — исправленное начисление;\n  - `OperationAgentStornoDeliveredToCustomer` — доставка покупателю — отмена начисления;\n  - `OperationClaim` — начисление по претензии;\n  - `OperationCorrectionSeller` — инвентаризация взаиморасчетов;\n  - `OperationDefectiveWriteOff` — компенсация за повреждённый на складе товар;\n  - `OperationItemReturn` — доставка и обработка возврата, отмены, невыкупа;\n  - `OperationLackWriteOff` — компенсация за утерянный на складе товар;\n  - `OperationMarketplaceCrossDockServiceWriteOff` — доставка товаров на склад Ozon (кросс-докинг);\n  - `OperationMarketplaceServiceStorage` — услуга размещения товаров на складе;\n  - `OperationSetOff` — взаимозачёт с другими договорами контрагента;\n  - `MarketplaceSellerReexposureDeliveryReturnOperation` — перечисление за доставку от покупателя;\n  - `OperationReturnGoodsFBSofRMS` — доставка и обработка возврата, отмены, невыкупа;\n  - `ReturnAgentOperationRFBS` — возврат перечисления за доставку покупателю;\n  - `ItemAgentServiceStarsMembership` — вознаграждение за услугу [«Звёздные товары»](https://s.ozon.ru/e7NlR6b);\n  - `MarketplaceSellerShippingCompensationReturnOperation` — компенсация перечисления за доставку;\n  - `OperationMarketplaceServicePremiumCashback` — услуга продвижения Premium;\n  - `MarketplaceServicePremiumPromotion` — услуга продвижения Premium, фиксированная комиссия;\n  - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга;\n  - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS;\n  - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS;\n  - `MarketplaceServiceItemDeliveryKGT` — доставка КГТ;\n  - `MarketplaceServiceItemDirectFlowLogistic` — логистика;\n  - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика;\n  - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца»;\n  - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара;\n  - `MarketplaceServiceItemDirectFlowLogisticVDC` — логистика вРЦ;\n  - `MarketplaceServiceItemDropoffPPZ` — услуга drop-off в пункте приёма заказов;\n  - `MarketplaceServicePremiumCashback` — услуга продвижения Premium;\n  - `MarketplaceServiceItemRedistributionReturnsPVZ` — перевыставление возвратов на пункте выдачи;\n  - `OperationElectronicServiceStencil` — услуга «Трафареты»;\n  - `OperationElectronicServicesPromotionInSearch` — услуга «Продвижение в поиске»;\n  - `OperationMarketplaceServiceItemElectronicServicesBrandShelf` — услуга «Брендовая полка»;\n  - `OperationSubscriptionPremium` — подписка Premium.\n"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "transaction_type": {
              "type": "string",
              "description": "Тип начисления:\n  - `all` — все,\n  - `orders` — заказы,\n  - `returns` — возвраты и отмены,\n  - `services` — сервисные сборы,\n  - `compensation` — компенсация,\n  - `transferDelivery` — стоимость доставки,\n  - `other` — прочее.\n\nНекоторые операции могут быть разделены во времени. Например, при приёме возврата от покупателя списывается стоимость товара и возвращается комиссия, а когда товар возвращается на склад, взимается стоимость услуга по обработке возврата.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр."
        },
        "financev3FinanceTransactionListV3Request": {
          "required": [
            "page",
            "page_size"
          ],
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/FinanceTransactionListV3RequestFilter"
            },
            "page": {
              "format": "int64",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object",
          "title": "object"
        },
        "OperationItem": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "title": "object"
        },
        "OperationPosting": {
          "properties": {
            "delivery_schema": {
              "type": "string",
              "description": "Схема доставки:\n  - `FBO` — доставка со склада Ozon,\n  - `FBS` — доставка со своего склада,\n  - `CROSSBORDER` — доставка из-за рубежа,\n  - `RFBS` — доставка по выбору продавца,\n  - `FBP` — доставка с партнёрских складов Ozon,\n  - `FBOECONOMY` — доставка эконом-товаров со склада Ozon,\n  - `FBSECONOMY` — доставка эконом-товаров со своего склада.\n"
            },
            "order_date": {
              "type": "string",
              "description": "Дата принятия отправления в обработку."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Информация об отправлении."
        },
        "OperationService": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название услуги:\n  - `MarketplaceNotDeliveredCostItem` — возврат невостребованного товара от покупателя на склад.\n  - `MarketplaceReturnAfterDeliveryCostItem` — возврат от покупателя на склад после доставки.\n  - `MarketplaceDeliveryCostItem` — доставка товара до покупателя.\n  - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе.\n  - `ItemAdvertisementForSupplierLogistic` — доставка товаров на склад Ozon — кросс-докинг.\n  - `OperationMarketplaceServiceStorage` — размещения товаров.\n  - `MarketplaceMarketingActionCostItem` — продвижение товаров.\n  - `MarketplaceServiceItemInstallment` — продвижениe и продажа в рассрочку.\n  - `MarketplaceServiceItemMarkingItems` — обязательная маркировка товаров.\n  - `MarketplaceServiceItemFlexiblePaymentSchedule` — гибкий график выплат.\n  - `MarketplaceServiceItemReturnFromStock` — комплектация товаров для вывоза продавцом.\n  - `ItemAdvertisementForSupplierLogisticSeller` — транспортно-экспедиционные услуги.\n  - `ItemAgentServiceStarsMembership` — вознаграждение за услугу [«Звёздные товары»](https://s.ozon.ru/e7NlR6b).\n  - `MarketplaceServiceItemDelivToCustomer` — последняя миля.\n  - `MarketplaceServiceItemDirectFlowTrans` — магистраль.\n  - `MarketplaceServiceItemDropoffFF` — обработка отправления.\n  - `MarketplaceServiceItemDropoffPVZ` — обработка отправления.\n  - `MarketplaceServiceItemDropoffSC` — обработка отправления.\n  - `MarketplaceServiceItemFulfillment` — сборка заказа.\n  - `MarketplaceServiceItemPickup` — выезд транспортного средства по адресу продавца для забора отправлений — Pick-up.\n  - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возврата.\n  - `MarketplaceServiceItemReturnFlowTrans` — обратная магистраль.\n  - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отмен.\n  - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка невыкупа.\n  - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга.\n  - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS.\n  - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS.\n  - `MarketplaceServiceItemDeliveryKGT` — доставка крупногабаритного товара (КГТ).\n  - `MarketplaceServiceItemDirectFlowLogistic` — логистика.\n  - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.\n  - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца».\n  - `MarketplaceServicePremiumPromotion` — услуга продвижение Premium, фиксированная комиссия.\n  - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара.\n  - `MarketplaceServiceItemDropoffPPZ` — услуга drop-off в пункте приёма заказов.\n  - `MarketplaceServiceItemRedistributionReturnsPVZ` — перевыставление возвратов на ПВЗ.\n  - `OperationMarketplaceAgencyFeeAggregator3PLGlobal` — тарификация агентской услуги Agregator 3PL Global.\n  - `MarketplaceServiceItemDirectFlowLogisticVDC` — логистика вРЦ.\n"
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Цена."
            }
          },
          "type": "object",
          "title": "object"
        },
        "FinanceTransactionListV3ResponseOperation": {
          "properties": {
            "accruals_for_sale": {
              "format": "double",
              "type": "number",
              "description": "Стоимость товаров с учётом скидок продавца."
            },
            "amount": {
              "format": "double",
              "type": "number",
              "description": "Итоговая сумма операции."
            },
            "delivery_charge": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки для начислений по тарифам, которые действовали до 1 февраля 2021 года, а также начислений для крупногабаритных товаров."
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/OperationItem"
              },
              "type": "array",
              "description": "Информация о товаре."
            },
            "operation_date": {
              "type": "string",
              "description": "Дата операции."
            },
            "operation_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор операции."
            },
            "operation_type": {
              "type": "string",
              "description": "Тип операции."
            },
            "operation_type_name": {
              "type": "string",
              "description": "Название типа операции."
            },
            "posting": {
              "$ref": "#/components/schemas/OperationPosting"
            },
            "return_delivery_charge": {
              "format": "double",
              "type": "number",
              "description": "Плата за возвраты и отмены для начислений по тарифам, которые действовали до 1 февраля 2021 года, а также начислений для крупногабаритных товаров."
            },
            "sale_commission": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за продажу или возврат комиссии за продажу."
            },
            "services": {
              "items": {
                "$ref": "#/components/schemas/OperationService"
              },
              "type": "array",
              "description": "Название услуги."
            },
            "type": {
              "type": "string",
              "description": "Тип начисления:\n- `all` — все,\n- `orders` — заказы,\n- `returns` — возвраты и отмены,\n- `services` — сервисные сборы,\n- `compensation` — компенсация,\n- `transferDelivery` — стоимость доставки,\n- `other` — прочее.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "financev3FinanceTransactionListV3ResponseResult": {
          "properties": {
            "operations": {
              "items": {
                "$ref": "#/components/schemas/FinanceTransactionListV3ResponseOperation"
              },
              "type": "array",
              "description": "Информация об операциях."
            },
            "page_count": {
              "format": "int64",
              "type": "integer",
              "description": "Количество страниц. Если 0, страниц больше нет."
            },
            "row_count": {
              "format": "int64",
              "type": "integer",
              "description": "Количество транзакций на всех страницах. Если 0, транзакций больше нет."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "financev3FinanceTransactionListV3Response": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/financev3FinanceTransactionListV3ResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "FinanceTransactionTotalsV3RequestDate": {
          "properties": {
            "from": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          },
          "type": "object",
          "title": "object",
          "description": "Фильтр по дате."
        },
        "financev3FinanceTransactionTotalsV3Request": {
          "oneOf": [
            {
              "title": "posting_number",
              "required": [
                "posting_number"
              ]
            },
            {
              "title": "date",
              "required": [
                "date"
              ]
            }
          ],
          "properties": {
            "date": {
              "$ref": "#/components/schemas/FinanceTransactionTotalsV3RequestDate"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "transaction_type": {
              "type": "string",
              "description": "Тип операции:\n - `all` — все,\n - `orders` — заказы,\n - `returns` — возвраты и отмены,\n - `services` — сервисные сборы,\n - `compensation` — компенсация,\n - `transferDelivery` — стоимость доставки,\n - `other` — прочее.\n"
            }
          },
          "type": "object",
          "title": "object"
        },
        "financev3FinanceTransactionTotalsV3ResponseResult": {
          "properties": {
            "accruals_for_sale": {
              "format": "double",
              "type": "number",
              "description": "Общая стоимость товаров и возвратов в заданный период."
            },
            "compensation_amount": {
              "format": "double",
              "type": "number",
              "description": "Компенсации."
            },
            "money_transfer": {
              "format": "double",
              "type": "number",
              "description": "Начисления за доставку и возвраты при работе по схеме «Доставка по выбору продавца»."
            },
            "others_amount": {
              "format": "double",
              "type": "number",
              "description": "Прочие начисления."
            },
            "processing_and_delivery": {
              "format": "double",
              "type": "number",
              "description": "Стоимость услуг обработки отправлений, сборки заказов, магистрали и последней мили, а также доставки до введения новых комиссий и тарифов с 1 февраля 2021 года.\n\nМагистраль — доставка товаров между кластерами.\n\nПоследняя миля — доставка товаров покупателю в пункт выдачи заказов, постамат или курьером.\n"
            },
            "refunds_and_cancellations": {
              "format": "double",
              "type": "number",
              "description": "Стоимость обратной магистрали, обработки возвратов, отмен и невыкупа товара, а также возвратов до введения новых комиссий и тарифов с 1 февраля 2021 года.\n\nМагистраль — доставка товаров между кластерами.\n\nПоследняя миля — доставка товаров покупателю в пункт выдачи заказов, постамат или курьером.\n"
            },
            "sale_commission": {
              "format": "double",
              "type": "number",
              "description": "Сумма комиссии, которая была удержана при продаже товара и возвращена при его возврате."
            },
            "services_amount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость дополнительных услуг, не связанных напрямую с доставками и возвратами товаров. Например, продвижения или размещения товаров."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результаты запроса."
        },
        "financev3FinanceTransactionTotalsV3Response": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3ResponseResult"
            }
          },
          "type": "object",
          "title": "object"
        },
        "commonLanguage": {
          "default": "DEFAULT",
          "enum": null,
          "title": "Language",
          "type": "string",
          "description": "Язык ответа:\n  - `RU` — русский,\n  - `EN` — английский.\n"
        },
        "v1CreateDocumentB2BSalesReportRequest": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Отчётный период в формате `YYYY-MM`."
            },
            "language": {
              "$ref": "#/components/schemas/commonLanguage"
            }
          }
        },
        "v1CreateMutualSettlementReportRequest": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Отчётный период в формате `YYYY-MM`."
            },
            "language": {
              "$ref": "#/components/schemas/commonLanguage"
            }
          }
        },
        "RatingItemChange": {
          "type": "object",
          "title": "object",
          "description": "Изменение рейтинга: отношение предыдущего значения к текущему.\n",
          "properties": {
            "direction": {
              "description": "Как изменилось значение рейтинга:\n- `DIRECTION_UNKNOWN` — не определено.\n- `DIRECTION_NONE` — не изменилось.\n- `DIRECTION_RISE` — выросло.\n- `DIRECTION_FALL` — упало.\n",
              "type": "string"
            },
            "meaning": {
              "description": "Что означает изменение:\n- `MEANING_UNKNOWN` — неизвестно.\n- `MEANING_NONE` — нейтрально.\n- `MEANING_GOOD` — показатель улучшается, всё хорошо.\n- `MEANING_BAD` — показатель падает, нужно что-то сделать.\n",
              "type": "string"
            }
          }
        },
        "v1RatingItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "change": {
              "$ref": "#/components/schemas/RatingItemChange"
            },
            "current_value": {
              "description": "Текущее значение рейтинга.",
              "type": "number",
              "format": "double"
            },
            "name": {
              "description": "Название рейтинга.",
              "type": "string"
            },
            "past_value": {
              "description": "Предыдущее значение рейтинга.",
              "type": "number",
              "format": "double"
            },
            "rating": {
              "description": "Название рейтинга в системе.",
              "type": "string"
            },
            "rating_direction": {
              "description": "Каким должно быть значение рейтинга, чтобы оно считалось хорошим:\n- `UNKNOWN_DIRECTION` — не определено.\n- `NEUTRAL` — неважно.\n- `HIGHER_IS_BETTER` — чем выше, тем лучше.\n- `LOWER_IS_BETTER` — чем ниже, тем лучше.\n",
              "type": "string"
            },
            "status": {
              "description": "Статус рейтинга:\n- `UNKNOWN_STATUS` — не определён.\n- `OK` — все хорошо.\n- `WARNING` — показатели требуют внимания.\n- `CRITICAL` — критичный рейтинг.\n",
              "type": "string"
            },
            "value_type": {
              "description": "Тип значения:\n- `UNKNOWN_VALUE` — не определён.\n- `INDEX` — индекс.\n- `PERCENT` — процент.\n- `TIME` — время.\n- `RATIO` — коэффициент.\n- `REVIEW_SCORE` — оценка.\n- `COUNT` — счёт.\n",
              "type": "string"
            }
          }
        },
        "RatingSummaryV1ResponseGroup": {
          "type": "object",
          "title": "object",
          "properties": {
            "group_name": {
              "description": "Название группы рейтингов.",
              "type": "string"
            },
            "items": {
              "description": "Список рейтингов.",
              "items": {
                "$ref": "#/components/schemas/v1RatingItem"
              }
            }
          }
        },
        "RatingSummaryV1ResponseLocalIndex": {
          "type": "object",
          "properties": {
            "calculation_date": {
              "description": "Дата расчёта индекса локализации.",
              "format": "date-time",
              "type": "string"
            },
            "localization_percentage": {
              "description": "Значение индекса локализации.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v1RatingSummaryV1Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "groups": {
              "description": "Список с группами рейтингов.",
              "items": {
                "$ref": "#/components/schemas/RatingSummaryV1ResponseGroup"
              }
            },
            "localization_index": {
              "description": "Данные по индексу локализации. Если за последние 14 дней у вас не было продаж, поля параметра будут пустыми.",
              "items": {
                "$ref": "#/components/schemas/RatingSummaryV1ResponseLocalIndex"
              }
            },
            "penalty_score_exceeded": {
              "description": "Признак, что баланс штрафных баллов превышен.",
              "type": "boolean"
            },
            "premium": {
              "description": "Признак наличия подписки [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program).",
              "type": "boolean"
            },
            "premium_plus": {
              "description": "Признак наличия подписки [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).",
              "type": "boolean"
            }
          }
        },
        "v1RatingHistoryV1Request": {
          "type": "object",
          "title": "object",
          "properties": {
            "date_from": {
              "description": "Начало периода.",
              "type": "string",
              "format": "date-time"
            },
            "date_to": {
              "description": "Конец периода.",
              "type": "string",
              "format": "date-time"
            },
            "ratings": {
              "description": "Фильтр по рейтингу.\n\nРейтинги, по которым нужно получить значение за период:\n\n- `rating_on_time` — процент заказов, выполненных вовремя за последние 30 дней.\n- `rating_review_avg_score_total` — средняя оценка всех товаров.\n- `rating_price` — индекс цен: отношение стоимости ваших товаров к самой низкой цене на такой же товар на других площадках.\n- `rating_order_cancellation` — процент отмен FBS-отправлений по вашей вине за последние 7 дней. Текущий и предыдущий день не учитываются.\n- `rating_shipment_delay` — процент FBS-отправлений, которые за последние 7 дней не были переданы в доставку по вашей вине. Текущий и предыдущий день не учитываются.\n- `rating_ssl` — оценка работы по FBO. Учитывает `rating_on_time_supply_delivery`, `rating_on_time_supply_cancellation` и `rating_order_accuracy`.\n- `rating_on_time_supply_delivery` — процент поставок, которые вы привезли на склад в выбранный временной интервал за последние 60 дней.\n- `rating_order_accuracy` — процент поставок без излишков, недостач, пересорта и брака за последние 60 дней.\n- `rating_on_time_supply_cancellation` — процент заявок на поставку, которые завершились или были отменены без опоздания за последние 60 дней.\n- `rating_reaction_time` — время, в течение которого покупатели в среднем ждали ответа на своё первое сообщение в чате за последние 30 дней.\n- `rating_average_response_time` — время, в течение которого покупатели в среднем ждали вашего ответа за последние 30 дней.\n- `rating_replied_dialogs_ratio` — доля диалогов хотя бы с одним вашим ответом в течение 24 часов за последние 30 дней.\n\nЕсли вы хотите получить информацию по начисленным штрафным баллам для рейтингов `rating_on_time` и `rating_review_avg_score_total`,\nпередайте значения нужных рейтингов в этом параметре и `with_premium_scores=true`.\n",
              "items": {
                "type": "string"
              }
            },
            "with_premium_scores": {
              "description": "Признак, что в ответе нужно вернуть информацию о штрафных баллах в Premium-программе.",
              "type": "boolean"
            }
          },
          "required": [
            "ratings",
            "date_from",
            "date_to"
          ]
        },
        "PremiumScoresScore": {
          "type": "object",
          "title": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, когда были начислены штрафные баллы."
            },
            "rating_value": {
              "type": "number",
              "format": "double",
              "description": "Значение рейтинга, за которое были начислены штрафные баллы."
            },
            "value": {
              "type": "integer",
              "format": "int32",
              "description": "Количество начисленных штрафных баллов."
            }
          }
        },
        "v1PremiumScores": {
          "type": "object",
          "title": "object",
          "properties": {
            "rating": {
              "description": "Название рейтинга.",
              "type": "string"
            },
            "scores": {
              "description": "Информация о штрафных баллах.",
              "items": {
                "$ref": "#/components/schemas/PremiumScoresScore"
              }
            }
          }
        },
        "v1RatingStatus": {
          "type": "object",
          "title": "object",
          "description": "Статус рейтинга.",
          "properties": {
            "danger": {
              "type": "boolean",
              "description": "Признак, превышено ли пороговое значение рейтинга для блокировки."
            },
            "premium": {
              "type": "boolean",
              "description": "Признак, достигнуто ли пороговое значение для участия в Premium-программе."
            },
            "warning": {
              "type": "boolean",
              "description": "Признак наличия предупреждения о возможном превышении порогового значения для блокировки."
            }
          }
        },
        "RatingValue": {
          "type": "object",
          "title": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала подсчёта рейтинга."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца подсчёта рейтинга."
            },
            "status": {
              "$ref": "#/components/schemas/v1RatingStatus"
            },
            "value": {
              "type": "number",
              "format": "double",
              "description": "Значение рейтинга."
            }
          }
        },
        "v1Rating": {
          "type": "object",
          "title": "object",
          "properties": {
            "danger_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга, после которого продажи будут заблокированы."
            },
            "premium_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга для участия в Premium-программе."
            },
            "rating": {
              "type": "string",
              "description": "Системное название рейтинга."
            },
            "values": {
              "description": "Список значений рейтинга.",
              "items": {
                "$ref": "#/components/schemas/RatingValue"
              }
            },
            "warning_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга, после которого появится предупреждение о возможной блокировке."
            }
          }
        },
        "v1RatingHistoryV1Response": {
          "type": "object",
          "title": "object",
          "properties": {
            "premium_scores": {
              "description": "Информация о штрафных баллах в Premium-программе.",
              "items": {
                "$ref": "#/components/schemas/v1PremiumScores"
              }
            },
            "ratings": {
              "description": "Информация о рейтингах продавца.",
              "items": {
                "$ref": "#/components/schemas/v1Rating"
              }
            }
          }
        },
        "v1AnalyticsManageStocksRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "properties": {
            "skus": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификаторы товаров в системе Ozon — SKU."
            },
            "stock_types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "STOCK_TYPE_VALID",
                  "STOCK_TYPE_WAITING_DOCS",
                  "STOCK_TYPE_EXPIRING",
                  "STOCK_TYPE_DEFECT"
                ]
              },
              "description": "Тип оставшегося на складе товара:\n- `STOCK_TYPE_VALID` — валидный сток. Остаток товара, доступного для продажи. \n- `STOCK_TYPE_WAITING_DOCS` — превалидный сток. Остаток товара, который Ozon не может продавать, пока продавец не прислал в Ozon документы по обязательной маркировке. Товар перейдёт в валидный сток, когда документы будут подписаны.\n- `STOCK_TYPE_EXPIRING` — предпросрок. Остаток товара, который снят с полки, но срок годности формально не истёк. \n- `STOCK_TYPE_DEFECT` — брак. Остаток товара, который находится на складах Ozon, но повреждён.\n"
            },
            "warehouse_ids": {
              "type": "array",
              "description": "Идентификаторы складов.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1AnalyticsManageStocksRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "type": "object",
              "$ref": "#/components/schemas/v1AnalyticsManageStocksRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 1000,
              "description": "Количество значений в ответе.\n",
              "required": true
            },
            "offset": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов, которое будет пропущено в ответе.\n\nНапример, если `offset = 10`, ответ начнётся с 11-го найденного элемента.\n",
              "required": true
            }
          }
        },
        "v1AnalyticsManageStocksResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "defect_stock_count": {
              "type": "integer",
              "format": "int64",
              "description": "Остаток дефектного товара, шт."
            },
            "expiring_stock_count": {
              "type": "integer",
              "format": "int64",
              "description": "Остаток товара с истекающим сроком годности, шт."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "valid_stock_count": {
              "type": "integer",
              "format": "int64",
              "description": "Остаток товара, доступного для продажи."
            },
            "waitingdocs_stock_count": {
              "type": "integer",
              "format": "int64",
              "description": "Остаток товара, ожидающего документы."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            }
          }
        },
        "v1AnalyticsManageStocksResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "description": "Товары.",
              "items": {
                "$ref": "#/components/schemas/v1AnalyticsManageStocksResponseItem"
              }
            }
          }
        },
        "AnalyticsProductQueriesRequestSortBy": {
          "type": "string",
          "description": "Параметр, по которому товары будут отсортированы. Возможные значения: \n- `BY_SEARCHES` — по количеству запросов;\n- `BY_VIEWS` — по количеству просмотров;\n- `BY_POSITION` — по средней позиции товара;\n- `BY_CONVERSION` — по значению конверсии;\n- `BY_GMV` — по объёму продаж по запросам.\n",
          "default": "BY_SEARCHES",
          "enum": [
            "BY_SEARCHES",
            "BY_VIEWS",
            "BY_POSITION",
            "BY_CONVERSION",
            "BY_GMV"
          ]
        },
        "AnalyticsProductQueriesRequestSortDir": {
          "type": "string",
          "default": "DESCENDING",
          "description": "Направление сортировки:\n- `DESCENDING` — по убыванию;\n- `ASCENDING` — по возрастанию.\n",
          "enum": [
            "DESCENDING",
            "ASCENDING"
          ]
        },
        "v1AnalyticsProductQueriesRequest": {
          "type": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала формирования аналитики."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания формирования аналитики."
            },
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            },
            "skus": {
              "type": "array",
              "description": "Список SKU, идентификаторов товара в системе Ozon. По ним вернётся аналитика по запросам. Максимум — 1000 SKU.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "sort_by": {
              "$ref": "#/components/schemas/AnalyticsProductQueriesRequestSortBy"
            },
            "sort_dir": {
              "$ref": "#/components/schemas/AnalyticsProductQueriesRequestSortDir"
            }
          },
          "required": [
            "page_size",
            "date_from",
            "skus"
          ]
        },
        "AnalyticsProductQueriesResponseAnalyticsPeriod": {
          "type": "object",
          "description": "Период, за который формируется аналитика.",
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата начала формирования аналитики."
            },
            "date_to": {
              "type": "string",
              "description": "Дата окончания формирования аналитики."
            }
          }
        },
        "v1AnalyticsProductQueriesResponseItem": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Название категории."
            },
            "currency": {
              "type": "string",
              "description": "Валюта."
            },
            "gmv": {
              "type": "number",
              "format": "float",
              "description": "Продажи по запросам."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "position": {
              "type": "number",
              "format": "float",
              "description": "Средняя позиция товара. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "unique_search_users": {
              "type": "integer",
              "format": "int64",
              "description": "Количество покупателей, которые искали ваш товар на Ozon."
            },
            "unique_view_users": {
              "type": "integer",
              "format": "int64",
              "description": "Количество покупателей, которые увидели ваш товар на Ozon. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            },
            "view_conversion": {
              "type": "number",
              "format": "float",
              "description": "Конверсия из просмотра товара. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            }
          }
        },
        "v1AnalyticsProductQueriesResponse": {
          "type": "object",
          "properties": {
            "analytics_period": {
              "$ref": "#/components/schemas/AnalyticsProductQueriesResponseAnalyticsPeriod"
            },
            "items": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/v1AnalyticsProductQueriesResponseItem"
              }
            },
            "page_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество страниц."
            },
            "total": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество запросов."
            }
          }
        },
        "v1AnalyticsProductQueriesDetailsRequestSortBy": {
          "type": "string",
          "description": "Параметр, по которому товары будут отсортированы. Возможные значения: \n- `BY_SEARCHES` — по количеству запросов;\n- `BY_VIEWS` — по количеству просмотров;\n- `BY_POSITION` — по средней позиции товара;\n- `BY_CONVERSION` — по значению конверсии;\n- `BY_GMV` — по объёму продаж по запросам.\n\nСортировка по параметрам `BY_VIEWS`, `BY_POSITION` и `BY_CONVERSION` доступна только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n",
          "default": "BY_SEARCHES",
          "enum": [
            "BY_SEARCHES",
            "BY_VIEWS",
            "BY_POSITION",
            "BY_CONVERSION",
            "BY_GMV"
          ]
        },
        "v1AnalyticsProductQueriesDetailsRequestSortDir": {
          "type": "string",
          "default": "DESCENDING",
          "description": "Направление сортировки:\n- `DESCENDING` — по убыванию;\n- `ASCENDING` — по возрастанию.\n",
          "enum": [
            "DESCENDING",
            "ASCENDING"
          ]
        },
        "v1AnalyticsProductQueriesDetailsRequest": {
          "type": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала формирования аналитики."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания формирования аналитики."
            },
            "limit_by_sku": {
              "type": "integer",
              "format": "int32",
              "description": "Лимит числа запросов по одному SKU. Максимум — 15 запросов."
            },
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе. Минимум — 0."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице. Максимум — 100."
            },
            "skus": {
              "type": "array",
              "description": "Список SKU, идентификаторов товара в системе Ozon. По ним вернётся аналитика по запросам. Максимум — 1000 SKU.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "sort_by": {
              "$ref": "#/components/schemas/v1AnalyticsProductQueriesDetailsRequestSortBy"
            },
            "sort_dir": {
              "$ref": "#/components/schemas/v1AnalyticsProductQueriesDetailsRequestSortDir"
            }
          },
          "required": [
            "page_size",
            "date_from",
            "skus",
            "limit_by_sku"
          ]
        },
        "v1AnalyticsProductQueriesDetailsResponseAnalyticsPeriod": {
          "type": "object",
          "description": "Период, за который формируется аналитика.",
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата начала формирования аналитики."
            },
            "date_to": {
              "type": "string",
              "description": "Дата окончания формирования аналитики."
            }
          }
        },
        "AnalyticsProductQueriesDetailsResponseQuery": {
          "type": "object",
          "properties": {
            "currency": {
              "type": "string",
              "description": "Валюта."
            },
            "gmv": {
              "type": "number",
              "format": "float",
              "description": "Продажи по запросам."
            },
            "order_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество заказов по запросу."
            },
            "position": {
              "type": "number",
              "format": "float",
              "description": "Средняя позиция товара. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            },
            "query": {
              "type": "string",
              "description": "Текст запроса."
            },
            "query_index": {
              "type": "integer",
              "format": "int64",
              "description": "Порядковый номер запроса."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "unique_search_users": {
              "type": "integer",
              "format": "int64",
              "description": "Количество покупателей, которые искали ваш товар на Ozon."
            },
            "unique_view_users": {
              "type": "integer",
              "format": "int64",
              "description": "Количество покупателей, которые увидели ваш товар на Ozon. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            },
            "view_conversion": {
              "type": "number",
              "format": "float",
              "description": "Конверсия из просмотра товара. Доступно только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus), иначе поле вернётся пустым."
            }
          }
        },
        "v1AnalyticsProductQueriesDetailsResponse": {
          "type": "object",
          "properties": {
            "analytics_period": {
              "$ref": "#/components/schemas/v1AnalyticsProductQueriesDetailsResponseAnalyticsPeriod"
            },
            "page_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество страниц."
            },
            "queries": {
              "type": "array",
              "description": "Список запросов.",
              "items": {
                "$ref": "#/components/schemas/AnalyticsProductQueriesDetailsResponseQuery"
              }
            },
            "total": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество запросов."
            }
          }
        },
        "v1AnalyticsStocksRequest": {
          "type": "object",
          "title": "object",
          "required": [
            "skus"
          ],
          "properties": {
            "cluster_ids": {
              "description": "Фильтр по идентификаторам кластеров. Получить идентификаторы можно через метод [/v1/cluster/list](#operation/SupplyDraftAPI_DraftClusterList).",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "item_tags": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ITEM_ATTRIBUTE_NONE",
                  "ECONOM",
                  "NOVEL",
                  "DISCOUNT",
                  "FBS_RETURN",
                  "SUPER"
                ]
              },
              "description": "Фильтр по тегам товара:      \n- `ITEM_ATTRIBUTE_NONE` — без тега;\n- `ECONOM` — эконом-товар;\n- `NOVEL` — новинка;\n- `DISCOUNT` — уценённый товар;\n- `FBS_RETURN` — товар из возврата FBS;\n- `SUPER` — Super-товар.\n"
            },
            "skus": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "maximum": 100,
              "description": "Фильтр по идентификаторам товаров в системе Ozon — SKU."
            },
            "turnover_grades": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TURNOVER_GRADE_NONE",
                  "DEFICIT",
                  "POPULAR",
                  "ACTUAL",
                  "SURPLUS",
                  "WAS_NO_SALES",
                  "COLLECTING_DATA",
                  "WAITING_FOR_SUPPLY",
                  "WAS_DEFICIT",
                  "WAS_POPULAR",
                  "WAS_ACTUAL",
                  "WAS_SURPLUS"
                ]
              },
              "description": "Фильтр по статусу ликвидности товаров:      \n- `TURNOVER_GRADE_NONE` — нет статуса ликвидности.      \n- `DEFICIT` — дефицитный. Остатков товара хватит до 28 дней.\n- `POPULAR` — очень популярный. Остатков товара хватит на 28–56 дней.\n- `ACTUAL` — популярный. Остатков товара хватит на 56–120 дней.\n- `SURPLUS` — избыточный. Товар продаётся медленно, остатков хватит более чем на 120 дней.\n- `WAS_NO_SALES` — без продаж. У товара не было продаж последние 28 дней.\n- `COLLECTING_DATA` — сбор данных. Для расчёта ликвидности нового товара собираем данные в течение 60 дней после поставки.\n- `WAITING_FOR_SUPPLY` — ожидаем поставки. На складе нет остатков, доступных к продаже. Сделайте поставку для начала сбора данных.\n- `WAS_DEFICIT` — был дефицитным. Товар был дефицитным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_POPULAR` — был очень популярным. Товар был очень популярным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_ACTUAL` — был популярным. Товар был популярным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_SURPLUS` — был избыточным. Товар был избыточным последние 56 дней. Сейчас у него нет остатков.\n"
            },
            "warehouse_ids": {
              "description": "Фильтр по идентификаторам складов. Получить идентификаторы можно через метод [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList).",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1AnalyticsStocksResponseItem": {
          "type": "object",
          "title": "object",
          "properties": {
            "ads": {
              "type": "number",
              "format": "double",
              "description": "Среднесуточное количество проданных единиц товара за последние 28 дней."
            },
            "available_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара, доступное к продаже."
            },
            "cluster_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор кластера. Получить подробную информацию о кластере можно через метод [/v1/cluster/list](#operation/SupplyDraftAPI_DraftClusterList)."
            },
            "cluster_name": {
              "type": "string",
              "description": "Название кластера."
            },
            "days_without_sales": {
              "type": "integer",
              "format": "int32",
              "description": "Количество дней без продаж."
            },
            "excess_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество излишков с поставки, которые доступны к вывозу."
            },
            "expiring_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара с истекающим сроком годности."
            },
            "idc": {
              "type": "number",
              "format": "double",
              "description": "Количество дней, на которое хватит остатка товара с учётом среднесуточных продаж за 28 дней."
            },
            "item_tags": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ITEM_ATTRIBUTE_NONE",
                  "ECONOM",
                  "NOVEL",
                  "DISCOUNT",
                  "FBS_RETURN",
                  "SUPER"
                ]
              },
              "description": "Теги товара:      \n- `ITEM_ATTRIBUTE_NONE` — без тега;\n- `ECONOM` — эконом-товар;\n- `NOVEL` — новинка;\n- `DISCOUNT` — уценённый товар;\n- `FBS_RETURN` — товар из возврата FBS;\n- `SUPER` — Super-товар.\n"
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "other_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара, проходящих проверку."
            },
            "requested_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара в заявках на поставку."
            },
            "return_from_customer_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара в процессе возврата от покупателей."
            },
            "return_to_seller_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара, готовящихся к вывозу по вашей заявке."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "stock_defect_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество брака, доступное к вывозу со стока."
            },
            "transit_defect_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество брака, доступное к вывозу с поставки."
            },
            "transit_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара в поставках в пути."
            },
            "turnover_grade": {
              "type": "string",
              "enum": [
                "TURNOVER_GRADE_NONE",
                "DEFICIT",
                "POPULAR",
                "ACTUAL",
                "SURPLUS",
                "WAS_NO_SALES",
                "COLLECTING_DATA",
                "WAITING_FOR_SUPPLY",
                "WAS_DEFICIT",
                "WAS_POPULAR",
                "WAS_ACTUAL",
                "WAS_SURPLUS"
              ],
              "description": "Статус ликвидности товара:      \n- `TURNOVER_GRADE_NONE` — нет статуса ликвидности.\n- `DEFICIT` — дефицитный. Остатков товара хватит до 28 дней.\n- `POPULAR` — очень популярный. Остатков товара хватит на 28–56 дней.\n- `ACTUAL` — популярный. Остатков товара хватит на 56–120 дней.\n- `SURPLUS` — избыточный. Товар продаётся медленно, остатков хватит более чем на 120 дней.\n- `WAS_NO_SALES` — без продаж. У товара не было продаж последние 28 дней.\n- `COLLECTING_DATA` — сбор данных. Для расчёта ликвидности нового товара собираем данные в течение 60 дней после поставки.\n- `WAITING_FOR_SUPPLY` — ожидаем поставки. На складе нет остатков, доступных к продаже. Сделайте поставку для начала сбора данных.\n- `WAS_DEFICIT` — был дефицитным. Товар был дефицитным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_POPULAR` — был очень популярным. Товар был очень популярным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_ACTUAL` — был популярным. Товар был популярным последние 56 дней. Сейчас у него нет остатков.\n- `WAS_SURPLUS` — был избыточным. Товар был избыточным последние 56 дней. Сейчас у него нет остатков.\n"
            },
            "valid_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество единиц товара, доступное для продажи."
            },
            "waiting_docs_stock_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество маркируемых товаров, которые ожидают ваших действий."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            }
          }
        },
        "v1AnalyticsStocksResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "description": "Информация о товарах.",
              "items": {
                "$ref": "#/components/schemas/v1AnalyticsStocksResponseItem"
              }
            }
          }
        },
        "v1SetPostingsRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор отгрузки.",
              "required": true
            },
            "posting_numbers": {
              "type": "array",
              "description": "Актуальный список отправлений.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SetPostingsResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "result": {
              "description": "Результат обработки запроса. `true`, если запрос был обработан успешно.\n",
              "type": "boolean"
            }
          }
        },
        "v1SetPostingsResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/SetPostingsResponseResult"
              }
            }
          }
        },
        "v1CarriageCancelRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор отгрузки.",
              "required": true
            }
          }
        },
        "v1CarriageCancelResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "carriage_status": {
              "type": "string",
              "description": "Статус отгрузки."
            }
          }
        },
        "v1GetRealizationReportByDayRequest": {
          "required": [
            "day",
            "month",
            "year"
          ],
          "type": "object",
          "properties": {
            "day": {
              "description": "День.",
              "type": "integer",
              "format": "int32"
            },
            "month": {
              "description": "Месяц.",
              "type": "integer",
              "format": "int32"
            },
            "year": {
              "description": "Год.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "GetRealizationReportByDayResponseRow": {
          "type": "object",
          "title": "object",
          "properties": {
            "commission_ratio": {
              "type": "number",
              "format": "double",
              "description": "Доля комиссии за продажу по категории."
            },
            "delivery_commission": {
              "$ref": "#/components/schemas/RowItemCommission"
            },
            "item": {
              "$ref": "#/components/schemas/RowItem"
            },
            "return_commission": {
              "$ref": "#/components/schemas/RowItemCommissionReturn"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32",
              "description": "Номер строки в отчёте."
            },
            "seller_price_per_instance": {
              "type": "number",
              "format": "double",
              "description": "Цена продавца с учётом скидки."
            }
          }
        },
        "GetRealizationReportByDayResponse": {
          "properties": {
            "rows": {
              "description": "Таблица отчёта.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetRealizationReportByDayResponseRow"
              }
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "v1GetRealizationReportPostingRequest": {
          "required": [
            "month",
            "year"
          ],
          "type": "object",
          "properties": {
            "month": {
              "description": "Месяц.",
              "type": "integer",
              "format": "int32"
            },
            "year": {
              "description": "Год.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "RowItemOrder": {
          "type": "object",
          "title": "object",
          "description": "Информация о заказе.",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "created_date": {
              "type": "string",
              "description": "Дата заказа в формате «ГГГГ-ММ-ДД»."
            }
          }
        },
        "RowItemLegalEntityDocument": {
          "type": "object",
          "title": "object",
          "description": "Информация о продаже юридическому лицу.",
          "properties": {
            "number": {
              "type": "string",
              "description": "Номер счёта-фактуры."
            },
            "sale_date": {
              "type": "string",
              "description": "Дата в формате «ГГГГ-ММ-ДД»."
            }
          }
        },
        "v1GetRealizationReportPostingResponseRow": {
          "type": "object",
          "title": "object",
          "properties": {
            "commission_ratio": {
              "type": "number",
              "format": "double",
              "description": "Доля комиссии за продажу по категории."
            },
            "delivery_commission": {
              "$ref": "#/components/schemas/RowItemCommission"
            },
            "item": {
              "$ref": "#/components/schemas/RowItem"
            },
            "return_commission": {
              "$ref": "#/components/schemas/RowItemCommissionReturn"
            },
            "row_number": {
              "type": "integer",
              "format": "int32",
              "description": "Номер строки в отчёте."
            },
            "seller_price_per_instance": {
              "type": "number",
              "format": "double",
              "description": "Цена продавца с учётом скидки."
            },
            "order": {
              "$ref": "#/components/schemas/RowItemOrder"
            },
            "legal_entity_document": {
              "$ref": "#/components/schemas/RowItemLegalEntityDocument"
            }
          }
        },
        "v1GetRealizationReportPostingResponse": {
          "type": "object",
          "title": "object",
          "description": "Результат запроса.",
          "properties": {
            "header": {
              "$ref": "#/components/schemas/GetRealizationReportResponseV2Header"
            },
            "rows": {
              "description": "Таблица отчёта.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetRealizationReportPostingResponseRow"
              }
            }
          }
        },
        "compensationReportLanguage": {
          "default": "RU",
          "enum": null,
          "title": "Language",
          "type": "string",
          "description": "Язык отчёта:\n  - `RU` — русский,\n  - `EN` — английский.\n"
        },
        "v1GetCompensationReportRequest": {
          "required": [
            "date"
          ],
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Отчётный период в формате `YYYY-MM`."
            },
            "language": {
              "$ref": "#/components/schemas/compensationReportLanguage"
            }
          }
        },
        "CreateReportResponseCodeNoDeadline": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта. Чтобы получить отчёт, передайте это значение в метод [/v1/report/info](#operation/ReportAPI_ReportInfo)."
            }
          },
          "type": "object",
          "title": "object",
          "description": "Результат запроса."
        },
        "CreateReportResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CreateReportResponseCodeNoDeadline"
            }
          }
        },
        "v1GetDecompensationReportRequest": {
          "required": [
            "date"
          ],
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Отчётный период в формате `YYYY-MM`."
            },
            "language": {
              "$ref": "#/components/schemas/compensationReportLanguage"
            }
          }
        },
        "v1ProductActionTimerUpdateRequest": {
          "type": "object",
          "properties": {
            "product_ids": {
              "description": "Список идентификаторов товаров в системе продавца — `product_id`.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1ProductActionTimerUpdateResponse": {
          "type": "object",
          "title": "object"
        },
        "v1ProductActionTimerStatusRequest": {
          "type": "object",
          "properties": {
            "product_ids": {
              "description": "Список идентификаторов товаров в системе продавца — `product_id`.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1ProductActionTimerStatusResponseStatuses": {
          "type": "object",
          "properties": {
            "expired_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время окончания таймера."
            },
            "min_price_for_auto_actions_enabled": {
              "type": "boolean",
              "description": "`true`, если Ozon учитывает минимальную цену при добавлении в акции.\n"
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            }
          }
        },
        "v1ProductActionTimerStatusResponse": {
          "type": "object",
          "properties": {
            "statuses": {
              "items": {
                "$ref": "#/components/schemas/v1ProductActionTimerStatusResponseStatuses"
              }
            }
          }
        },
        "ChatHistoryRequestFilter": {
          "type": "object",
          "description": "Фильтр по сообщениям.",
          "properties": {
            "message_ids": {
              "description": "Идентификаторы сообщений.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uint64"
              }
            }
          }
        },
        "v3ChatHistoryRequest": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "direction": {
              "type": "string",
              "description": "Направление сортировки сообщений:\n- `Forward` — от старых к новым.\n- `Backward` — от новых к старым.\n\nЗначение по умолчанию — `Backward`. Количество сообщений можно установить в параметре `limit`.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/ChatHistoryRequestFilter"
            },
            "from_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения, с которого начать вывод истории чата. По умолчанию — последнее видимое сообщение."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество сообщений в ответе. По умолчанию — 50. Максимальное значение — 1000."
            }
          },
          "required": [
            "chat_id"
          ]
        },
        "ChatMessageContext": {
          "type": "object",
          "description": "Информация о чате.",
          "properties": {
            "order_number": {
              "description": "Номер заказа.",
              "type": "string"
            },
            "sku": {
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "ChatMessageModerateImageStatus": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "MODERATION",
            "FAILED"
          ],
          "description": "Статус модерации изображения: \n  - `SUCCESS` — прошло модерацию;\n  - `MODERATION` — на модерации;\n  - `FAILED` — не прошло модерацию.\n"
        },
        "v3User": {
          "type": "object",
          "description": "Информация об участнике чата.",
          "properties": {
            "id": {
              "description": "Идентификатор участника чата.",
              "type": "string"
            },
            "type": {
              "type": "string",
              "description": "Тип участника чата:\n- `customer` — покупатель,\n- `seller` — продавец,\n- `crm` — системные сообщения,\n- `courier` — курьер,\n- `support` — поддержка.\n"
            }
          }
        },
        "v3ChatMessage": {
          "type": "object",
          "properties": {
            "context": {
              "$ref": "#/components/schemas/ChatMessageContext"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания сообщения."
            },
            "data": {
              "description": "Массив с содержимым сообщения в формате Markdown.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "is_image": {
              "description": "Признак, что сообщение содержит изображение.",
              "type": "boolean"
            },
            "is_read": {
              "type": "boolean",
              "description": "Признак, что сообщение прочитано."
            },
            "message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения."
            },
            "moderate_image_status": {
              "description": "Статус модерации изображения.",
              "$ref": "#/components/schemas/ChatMessageModerateImageStatus"
            },
            "user": {
              "$ref": "#/components/schemas/v3User"
            }
          }
        },
        "v3ChatHistoryResponse": {
          "type": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не все сообщения."
            },
            "messages": {
              "description": "Массив сообщений, отсортированный в соответствии с параметром `direction` из тела запроса.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ChatMessage"
              }
            }
          }
        },
        "v1ProductInfoWrongVolumeRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 1000,
              "description": "Максимальное количество элементов в ответе."
            }
          }
        },
        "ProductInfoWrongVolumeResponseWrongVolumeProduct": {
          "type": "object",
          "title": "object",
          "properties": {
            "height": {
              "type": "integer",
              "format": "int64",
              "description": "Высота товара."
            },
            "length": {
              "type": "integer",
              "format": "int64",
              "description": "Длина товара."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "weight": {
              "type": "integer",
              "format": "int64",
              "description": "Вес товара в упаковке."
            },
            "width": {
              "type": "integer",
              "format": "int64",
              "description": "Ширина товара."
            }
          }
        },
        "v1ProductInfoWrongVolumeResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/ProductInfoWrongVolumeResponseWrongVolumeProduct"
              }
            }
          }
        },
        "v2ConditionalCancellationMoveV2Request": {
          "required": [
            "cancellation_id"
          ],
          "type": "object",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий."
            }
          }
        },
        "v2CancellationInitiatorEnum": {
          "type": "string",
          "description": "Инициатор отмены:\n- `SELLER` — продавец, \n- `CLIENT` — покупатель,\n- `OZON` — Ozon,  \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n",
          "enum": [
            "OZON",
            "SELLER",
            "CLIENT",
            "SYSTEM",
            "DELIVERY"
          ]
        },
        "v2CancellationStateEnumFilters": {
          "type": "string",
          "default": "ALL",
          "description": "Фильтр по статусу заявки на отмену:\n- `ALL` — заявки в любом статусе, \n- `ON_APPROVAL` — заявки на рассмотрении,\n- `APPROVED` — подтверждённые заявки, \n- `REJECTED` — отклонённые заявки.\n",
          "enum": [
            "ALL",
            "ON_APPROVAL",
            "APPROVED",
            "REJECTED"
          ]
        },
        "GetConditionalCancellationListV2RequestFilters": {
          "type": "object",
          "description": "Фильтры.",
          "properties": {
            "cancellation_initiator": {
              "type": "array",
              "description": "Инициатор отмены:\n- `SELLER` — продавец, \n- `CLIENT` — покупатель,\n- `OZON` — Ozon,  \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n",
              "items": {
                "$ref": "#/components/schemas/v2CancellationInitiatorEnum"
              }
            },
            "posting_number": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Фильтр по номеру отправления."
            },
            "state": {
              "description": "Фильтр по статусу заявки на отмену:\n  - `ALL` — заявки в любом статусе,\n  - `ON_APPROVAL` — заявки на рассмотрении,\n  - `APPROVED` — подтверждённые заявки,\n  - `REJECTED` — отклонённые заявки.\n",
              "$ref": "#/components/schemas/v2CancellationStateEnumFilters"
            }
          }
        },
        "GetConditionalCancellationListV2RequestWith": {
          "type": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "counter": {
              "description": "Признак, что в ответе нужно вывести счётчик заявок в статусе `ON_APPROVAL`.",
              "type": "boolean"
            }
          }
        },
        "v2GetConditionalCancellationListV2Request": {
          "required": [
            "limit"
          ],
          "type": "object",
          "title": "object",
          "properties": {
            "filters": {
              "$ref": "#/components/schemas/GetConditionalCancellationListV2RequestFilters"
            },
            "last_id": {
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок в ответе.",
              "maximum": 500
            },
            "with": {
              "$ref": "#/components/schemas/GetConditionalCancellationListV2RequestWith"
            }
          }
        },
        "GetConditionalCancellationListV2ResponseCancellationReason": {
          "type": "object",
          "description": "Причина отмены.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены."
            },
            "name": {
              "type": "string",
              "description": "Название причины отмены."
            }
          }
        },
        "v2CancellationStateEnum": {
          "type": "string",
          "description": "Статус заявки:\n- `ON_APPROVAL` — заявка на рассмотрении,\n- `APPROVED` — подтверждённая заявка,\n- `REJECTED` — отклонённая заявка.\n",
          "enum": [
            "ON_APPROVAL",
            "APPROVED",
            "REJECTED"
          ]
        },
        "GetConditionalCancellationListV2ResponseState": {
          "type": "object",
          "description": "Статус заявки на отмену.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор статуса."
            },
            "name": {
              "description": "Название статуса.",
              "type": "string"
            },
            "state": {
              "$ref": "#/components/schemas/v2CancellationStateEnum"
            }
          }
        },
        "GetConditionalCancellationListV2ResponseResult": {
          "type": "object",
          "properties": {
            "approve_comment": {
              "type": "string",
              "description": "Комментарий, оставленный при подтверждении или отклонении заявки на отмену."
            },
            "approve_date": {
              "description": "Дата подтверждения или отклонения заявки на отмену.",
              "type": "string",
              "format": "date-time"
            },
            "auto_approve_date": {
              "description": "Дата, после которой заявка будет автоматически подтверждена.",
              "type": "string",
              "format": "date-time"
            },
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "cancellation_initiator": {
              "$ref": "#/components/schemas/v2CancellationInitiatorEnum"
            },
            "cancellation_reason": {
              "$ref": "#/components/schemas/GetConditionalCancellationListV2ResponseCancellationReason"
            },
            "cancellation_reason_message": {
              "description": "Комментарий к заявке на отмену, введённый инициатором отмены вручную.",
              "type": "string"
            },
            "cancelled_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки на отмену."
            },
            "order_date": {
              "description": "Дата создания заказа.",
              "type": "string",
              "format": "date-time"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "source_id": {
              "type": "integer",
              "format": "int64",
              "description": "Предыдущий идентификатор заявки на отмену.\n\nИспользуется для поддержания обратной совместимости.\n"
            },
            "state": {
              "$ref": "#/components/schemas/GetConditionalCancellationListV2ResponseState"
            },
            "tpl_integration_type": {
              "description": "Тип интеграции со службой доставки.",
              "type": "string"
            }
          }
        },
        "v2GetConditionalCancellationListV2Response": {
          "type": "object",
          "properties": {
            "counter": {
              "description": "Cчётчик заявок в статусе `ON_APPROVAL`.",
              "type": "integer",
              "format": "int64"
            },
            "last_id": {
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n",
              "type": "integer",
              "format": "int64"
            },
            "result": {
              "type": "array",
              "description": "Информация о заявках на отмену.",
              "items": {
                "$ref": "#/components/schemas/GetConditionalCancellationListV2ResponseResult"
              }
            }
          }
        },
        "v1CommentCreateRequest": {
          "type": "object",
          "properties": {
            "mark_review_as_processed": {
              "description": "Обновление статуса у отзыва:\n- `true` — статус изменится на `Processed`.\n- `false` — статус не изменится.\n",
              "type": "boolean"
            },
            "parent_comment_id": {
              "description": "Идентификатор родительского комментария, на который вы отвечаете.",
              "type": "string"
            },
            "review_id": {
              "description": "Идентификатор отзыва.",
              "type": "string"
            },
            "text": {
              "description": "Текст комментария.",
              "type": "string"
            }
          },
          "required": [
            "review_id",
            "text"
          ]
        },
        "v1CommentCreateResponse": {
          "type": "object",
          "properties": {
            "comment_id": {
              "description": "Идентификатор комментария.",
              "type": "string"
            }
          }
        },
        "v1CommentDeleteRequest": {
          "type": "object",
          "properties": {
            "comment_id": {
              "description": "Идентификатор комментария.",
              "type": "string"
            }
          },
          "required": [
            "comment_id"
          ]
        },
        "v1CommentSort": {
          "type": "string",
          "default": "ASC",
          "enum": [
            "ASC",
            "DESC"
          ],
          "description": "Направление сортировки:\n  - `ASC` — по возрастанию,\n  - `DESC` — по убыванию.\n"
        },
        "v1CommentListRequest": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "Ограничение значений в ответе.\nМинимум — 20. Максимум — 100.\n",
              "type": "integer",
              "format": "int32"
            },
            "offset": {
              "description": "Количество элементов, которое будет пропущено с начала списка в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента.",
              "type": "integer",
              "format": "int32"
            },
            "review_id": {
              "description": "Идентификатор отзыва.",
              "type": "string"
            },
            "sort_dir": {
              "$ref": "#/components/schemas/v1CommentSort"
            }
          },
          "required": [
            "review_id",
            "limit"
          ]
        },
        "CommentListResponseComment": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Идентификатор комментария.",
              "type": "string"
            },
            "is_official": {
              "description": "`true`, если комментарий оставило официальное лицо, `false` — покупатель.\n",
              "type": "boolean"
            },
            "is_owner": {
              "description": "`true`, если комментарий оставил продавец, `false` — покупатель.\n",
              "type": "boolean"
            },
            "parent_comment_id": {
              "description": "Идентификатор родительского комментария, на который нужно ответить.",
              "type": "string"
            },
            "published_at": {
              "description": "Дата публикации комментария.",
              "type": "string",
              "format": "date-time"
            },
            "text": {
              "description": "Текст комментария.",
              "type": "string"
            }
          }
        },
        "v1CommentListResponse": {
          "type": "object",
          "properties": {
            "comments": {
              "description": "Информация о комментарии.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommentListResponseComment"
              }
            },
            "offset": {
              "description": "Количество элементов в выдаче.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v1ReviewChangeStatusRequest": {
          "type": "object",
          "title": "ReviewChangeStatus",
          "properties": {
            "review_ids": {
              "description": "Массив с идентификаторами отзывов от 1 до 100.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "description": "Статус отзыва:\n- `PROCESSED` — обработанный,\n- `UNPROCESSED` — необработанный.\n",
              "type": "string"
            }
          },
          "required": [
            "review_ids",
            "status"
          ]
        },
        "v1ReviewCountResponse": {
          "type": "object",
          "properties": {
            "processed": {
              "description": "Количество обработанных отзывов.",
              "type": "integer",
              "format": "int32"
            },
            "total": {
              "description": "Количество всех отзывов.",
              "type": "integer",
              "format": "int32"
            },
            "unprocessed": {
              "description": "Количество необработанных отзывов.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v1ReviewInfoRequest": {
          "type": "object",
          "title": "ReviewInfo",
          "properties": {
            "review_id": {
              "description": "Идентификатор отзыва.",
              "type": "string"
            }
          },
          "required": [
            "review_id"
          ]
        },
        "ReviewInfoResponsePhoto": {
          "type": "object",
          "properties": {
            "height": {
              "description": "Высота.",
              "type": "integer",
              "format": "int32"
            },
            "url": {
              "description": "Ссылка на изображение.",
              "type": "string"
            },
            "width": {
              "description": "Ширина.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "ReviewInfoResponseVideo": {
          "type": "object",
          "properties": {
            "height": {
              "description": "Высота.",
              "type": "integer",
              "format": "int64"
            },
            "preview_url": {
              "description": "Ссылка на превью видео.",
              "type": "string"
            },
            "short_video_preview_url": {
              "description": "Ссылка на короткое видео.",
              "type": "string"
            },
            "url": {
              "description": "Ссылка на видео.",
              "type": "string"
            },
            "width": {
              "description": "Ширина.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1ReviewInfoResponse": {
          "type": "object",
          "properties": {
            "comments_amount": {
              "description": "Количество комментариев к отзыву.",
              "type": "integer",
              "format": "int32"
            },
            "dislikes_amount": {
              "description": "Количество дизлайков на отзыве.",
              "type": "integer",
              "format": "int32"
            },
            "id": {
              "description": "Идентификатор отзыва.",
              "type": "string"
            },
            "is_rating_participant": {
              "description": "`true`, если отзыв участвует в подсчёте рейтинга.\n",
              "type": "boolean"
            },
            "likes_amount": {
              "description": "Количество лайков на отзыве.",
              "type": "integer",
              "format": "int32"
            },
            "order_status": {
              "type": "string",
              "description": "Статус заказа, на который покупатель оставил отзыв:\n- `DELIVERED` — доставлен,\n- `CANCELLED` — отменён.\n"
            },
            "photos": {
              "type": "array",
              "description": "Информация об изображении.",
              "items": {
                "$ref": "#/components/schemas/ReviewInfoResponsePhoto"
              }
            },
            "photos_amount": {
              "description": "Количество изображений у отзыва.",
              "type": "integer",
              "format": "int32"
            },
            "published_at": {
              "description": "Дата публикации отзыва.",
              "type": "string",
              "format": "date-time"
            },
            "rating": {
              "description": "Оценка отзыва.",
              "type": "integer",
              "format": "int32"
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "description": "Статус отзыва:\n- `UNPROCESSED` — не обработан,\n- `PROCESSED` — обработан.\n",
              "type": "string"
            },
            "text": {
              "description": "Текст отзыва.",
              "type": "string"
            },
            "videos": {
              "type": "array",
              "description": "Информация о видео.",
              "items": {
                "$ref": "#/components/schemas/ReviewInfoResponseVideo"
              }
            },
            "videos_amount": {
              "description": "Количество видео у отзыва.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v1ReviewListRequest": {
          "type": "object",
          "title": "ReviewList",
          "properties": {
            "last_id": {
              "description": "Идентификатор последнего отзыва на странице.",
              "type": "string"
            },
            "limit": {
              "description": "Количество отзывов в ответе. Минимум — 20, максимум — 100.",
              "type": "integer",
              "format": "int32"
            },
            "sort_dir": {
              "description": "Направление сортировки:\n- `ASC` — по возрастанию,\n- `DESC` — по убыванию.\n",
              "type": "string"
            },
            "status": {
              "description": "Статусы отзывов:\n- `ALL` — все,\n- `UNPROCESSED` — необработанные,\n- `PROCESSED` — обработанные.\n",
              "type": "string"
            }
          },
          "required": [
            "limit"
          ]
        },
        "ReviewListResponseReview": {
          "type": "object",
          "properties": {
            "comments_amount": {
              "description": "Количество комментариев у отзыва.",
              "type": "integer",
              "format": "int32"
            },
            "id": {
              "description": "Идентификатор отзыва.",
              "type": "string"
            },
            "is_rating_participant": {
              "description": "`true`, если отзыв участвует в подсчёте рейтинга.\n",
              "type": "boolean"
            },
            "order_status": {
              "description": "Статус заказа, на который покупатель оставил отзыв:\n- `DELIVERED` — доставлен,\n- `CANCELLED` — отменён.\n",
              "type": "string"
            },
            "photos_amount": {
              "description": "Количество изображений у отзыва.",
              "type": "integer",
              "format": "int32"
            },
            "published_at": {
              "description": "Дата публикации отзыва.",
              "type": "string",
              "format": "date-time"
            },
            "rating": {
              "description": "Оценка отзыва.",
              "type": "integer",
              "format": "int32"
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon — SKU.",
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "description": "Статус отзыва:\n- `UNPROCESSED` — не обработан,\n- `PROCESSED` — обработан.\n",
              "type": "string"
            },
            "text": {
              "description": "Текст отзыва.",
              "type": "string"
            },
            "videos_amount": {
              "description": "Количество видео у отзыва.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "v1ReviewListResponse": {
          "type": "object",
          "properties": {
            "has_next": {
              "description": "`true`, если в ответе вернули не все отзывы.\n",
              "type": "boolean"
            },
            "last_id": {
              "description": "Идентификатор последнего отзыва на странице.",
              "type": "string"
            },
            "reviews": {
              "description": "Информация об отзыве.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReviewListResponseReview"
              }
            }
          }
        },
        "ProductV1QuantListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество элементов в ответе."
            },
            "visibility": {
              "default": "ALL",
              "enum": [
                "ALL",
                "VISIBLE",
                "INVISIBLE",
                "EMPTY_STOCK",
                "NOT_MODERATED",
                "MODERATED",
                "DISABLED",
                "STATE_FAILED",
                "READY_TO_SUPPLY",
                "VALIDATION_STATE_PENDING",
                "VALIDATION_STATE_FAIL",
                "VALIDATION_STATE_SUCCESS",
                "TO_SUPPLY",
                "IN_SALE",
                "REMOVED_FROM_SALE",
                "OVERPRICED",
                "CRITICALLY_OVERPRICED",
                "EMPTY_BARCODE",
                "BARCODE_EXISTS",
                "QUARANTINE",
                "ARCHIVED",
                "OVERPRICED_WITH_STOCK",
                "PARTIAL_APPROVED"
              ],
              "type": "string",
              "description": "Фильтр по видимости товара:\n- `ALL` — все товары, кроме архивных.\n- `VISIBLE` — товары, которые видны покупателям.\n- `INVISIBLE` — товары, которые не видны покупателям.\n- `EMPTY_STOCK` — товары, которых нет в наличии.\n- `NOT_MODERATED` — товары, которые не прошли модерацию.\n- `MODERATED` — товары, которые прошли модерацию.\n- `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n- `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n- `READY_TO_SUPPLY` — товары, готовые к поставке.\n- `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n- `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n- `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n- `TO_SUPPLY` — товары, готовые к продаже.\n- `IN_SALE` — товары в продаже.\n- `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n- `OVERPRICED` — превышение цены.\n- `CRITICALLY_OVERPRICED` — критическое превышение цены.\n- `EMPTY_BARCODE` — пустой штрихкод.\n- `BARCODE_EXISTS` — штрихкод указан.\n- `QUARANTINE` — товар в карантине после изменения цены на 50% и больше.\n- `ARCHIVED` — товары в архиве.\n- `OVERPRICED_WITH_STOCK` — товары в продаже, цена которых выше, чем у конкурентов.\n- `PARTIAL_APPROVED` — товары в продаже, у которых пустое или неполное описание.\n"
            }
          }
        },
        "ProductV1QuantListResponseProductsQuants": {
          "type": "object",
          "title": "object",
          "properties": {
            "quant_code": {
              "type": "string",
              "description": "Идентификатор кванта."
            },
            "quant_size": {
              "type": "integer",
              "format": "int64",
              "description": "Размер кванта."
            }
          }
        },
        "ProductV1QuantListResponseProducts": {
          "type": "object",
          "title": "object",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quants": {
              "description": "Список квантов товара.",
              "items": {
                "$ref": "#/components/schemas/ProductV1QuantListResponseProductsQuants"
              }
            }
          }
        },
        "ProductV1QuantListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "products": {
              "description": "Эконом-товары.",
              "items": {
                "$ref": "#/components/schemas/ProductV1QuantListResponseProducts"
              }
            },
            "total_items": {
              "type": "integer",
              "format": "int32",
              "description": "Остаток на всех складах, шт."
            }
          }
        },
        "ProductV1QuantInfoRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "quant_code": {
              "minItems": 1,
              "maxItems": 1000,
              "description": "Список квантов с товарами.\n",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "quant_code"
          ]
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfoQuantsBarcodesExtended": {
          "type": "object",
          "title": "object",
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "error": {
              "type": "string",
              "description": "Ошибка получения штрихкода."
            },
            "status": {
              "type": "string",
              "description": "Статус штрихкода."
            }
          }
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfoQuantsDimensions": {
          "type": "object",
          "title": "object",
          "description": "Габариты.",
          "properties": {
            "depth": {
              "type": "integer",
              "format": "int64",
              "description": "Глубина, мм."
            },
            "height": {
              "type": "integer",
              "format": "int64",
              "description": "Высота, мм."
            },
            "weight": {
              "type": "integer",
              "format": "int64",
              "description": "Вес, г."
            },
            "width": {
              "type": "integer",
              "format": "int64",
              "description": "Ширина, мм."
            }
          }
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfoQuantsMarketingPrice": {
          "type": "object",
          "title": "object",
          "description": "Цена на товар с учётом всех акций, которая будет указана на витрине Ozon, без учёта скидки по Ozon Карте.",
          "properties": {
            "price": {
              "type": "string",
              "description": "Цена продажи."
            },
            "seller_price": {
              "type": "string",
              "description": "Цена, которую указал продавец."
            }
          }
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfoQuantsTexts": {
          "type": "object",
          "title": "object",
          "description": "Описание статусов.",
          "properties": {
            "state_description": {
              "type": "string",
              "description": "Описание статуса."
            },
            "state_name": {
              "type": "string",
              "description": "Название статуса."
            },
            "state_sys_name": {
              "type": "string",
              "description": "Системное название статуса."
            },
            "state_tooltip": {
              "type": "string",
              "description": "Подсказка о текущем состоянии товара."
            }
          }
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfoQuants": {
          "type": "object",
          "title": "object",
          "properties": {
            "barcodes_extended": {
              "description": "Информация о штрихкодах.",
              "items": {
                "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfoQuantsBarcodesExtended"
              }
            },
            "dimensions": {
              "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfoQuantsDimensions"
            },
            "marketing_price": {
              "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfoQuantsMarketingPrice"
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена, указанная продавцом."
            },
            "old_price": {
              "type": "string",
              "description": "Зачёркнутая цена, указанная продавцом."
            },
            "price": {
              "type": "string",
              "description": "Цена продажи, указанная продавцом."
            },
            "quant_code": {
              "type": "string",
              "description": "Идентификатор эконом-товара."
            },
            "quant_sice": {
              "type": "integer",
              "format": "int64",
              "description": "Размер кванта."
            },
            "shipment_type": {
              "type": "string",
              "description": "Тип доставки товара."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "statuses": {
              "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfoQuantsTexts"
            }
          }
        },
        "ProductV1QuantInfoResponseResultItemsQuantInfo": {
          "type": "object",
          "title": "object",
          "description": "Информация о кванте.",
          "properties": {
            "quants": {
              "description": "Список квантов.",
              "items": {
                "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfoQuants"
              }
            }
          }
        },
        "ProductV1QuantInfoResponseResultItems": {
          "type": "object",
          "title": "object",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "quant_info": {
              "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItemsQuantInfo"
            }
          }
        },
        "ProductV1QuantInfoResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "items": {
              "type": "array",
              "description": "Эконом-товары.",
              "items": {
                "$ref": "#/components/schemas/ProductV1QuantInfoResponseResultItems"
              }
            }
          }
        },
        "QuantsV1ListRequestFilterCreatedAt": {
          "type": "object",
          "title": "object",
          "description": "Период создания кванта.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода."
            }
          }
        },
        "QuantsV1ListRequestFilterCutoff": {
          "type": "object",
          "title": "object",
          "description": "Время на сборку кванта.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода."
            }
          }
        },
        "v1QuantStatus": {
          "type": "string",
          "default": "unknown",
          "enum": [
            "unknown",
            "new",
            "filling",
            "fulled",
            "reserving",
            "awaiting_stock",
            "awaiting_packaging",
            "shipped",
            "awaiting_delivery",
            "delivering",
            "delivered",
            "not_accepted",
            "failed",
            "ship_in_process",
            "ship_failed",
            "quant_in_carriage",
            "acceptance_in_progress",
            "cancelled"
          ],
          "description": "Статус:  \n- `unknown` — неизвестен,\n- `new` — новый,\n- `filling` — заполняется,\n- `fulled` — заполнен,\n- `reserving` — зарезервирован,\n- `awaiting_stock` — ожидает на складе,\n- `awaiting_packaging` — ожидает упаковки,\n- `shipped` — отправлен,\n- `awaiting_delivery` — ожидает доставки,\n- `delivering` — доставляется,\n- `delivered` — доставлен,\n- `not_accepted` — не подтверждён,\n- `failed` — не набрался,\n- `ship_in_process` — отгружается,\n- `ship_failed` — не отгружен,\n- `quant_in_carriage` — доставляется,\n- `acceptance_in_progress` — ожидает подтверждение получения,\n- `cancelled` — отменён.\n"
        },
        "QuantsV1ListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "properties": {
            "created_at": {
              "$ref": "#/components/schemas/QuantsV1ListRequestFilterCreatedAt"
            },
            "cutoff": {
              "$ref": "#/components/schemas/QuantsV1ListRequestFilterCutoff"
            },
            "destination_place_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор пункта назначения."
            },
            "inv_quant_ids": {
              "type": "array",
              "description": "Инвентарные идентификаторы кванта.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул."
            },
            "sku_name": {
              "type": "string",
              "description": "Название товара."
            },
            "statuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1QuantStatus"
              },
              "description": "Статусы кванта:\n  - `unknown` — неизвестен,\n  - `new` — новый,\n  - `filling` — заполняется,\n  - `fulled` — заполнен,\n  - `reserving` — зарезервирован,\n  - `awaiting_stock` — ожидает на складе,\n  - `awaiting_packaging` — ожидает упаковки,\n  - `shipped` — отправлен,\n  - `awaiting_delivery` — ожидает доставки,\n  - `delivering` — доставляется,\n  - `delivered` — доставлен,\n  - `not_accepted` — не подтверждён,\n  - `failed` — не набрался,\n  - `ship_in_process` — отгружается,\n  - `ship_failed` — не отгружен,\n  - `quant_in_carriage` — доставляется,\n  - `acceptance_in_progress` — ожидает подтверждение получения,\n  - `cancelled` — отменён.\n"
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "QuantsV1ListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "filter": {
              "$ref": "#/components/schemas/QuantsV1ListRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000,
              "description": "Максимальное количество значений в ответе."
            },
            "sort": {
              "type": "string",
              "description": "Параметр, по которому товары будут отсортированы."
            },
            "sort_dir": {
              "type": "string",
              "description": "Направление сортировки:\n- `asc` — по возрастанию,\n- `desc` — по убыванию.\n"
            }
          }
        },
        "QuantsV1ListResponseResultQuantsCancelReason": {
          "type": "object",
          "title": "object",
          "description": "Причина отмены.",
          "properties": {
            "cancel_reason_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены кванта."
            },
            "cancel_reason_name": {
              "type": "string",
              "description": "Причина отмены."
            },
            "responsible": {
              "type": "string",
              "description": "Инициатор отмены."
            }
          }
        },
        "QuantsV1ListResponseResultQuants": {
          "type": "object",
          "title": "object",
          "properties": {
            "available_actions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Доступные действия с квантом."
            },
            "awaiting_stock_due_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, до которой нужно указать остатки."
            },
            "cancel_reason": {
              "$ref": "#/components/schemas/QuantsV1ListResponseResultQuantsCancelReason"
            },
            "company_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор компании продавца."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания кванта."
            },
            "current_postings_count": {
              "type": "integer",
              "format": "int64",
              "description": "Текущее количество отправлений в кванте."
            },
            "cutoff": {
              "type": "string",
              "format": "date-time",
              "description": "Время, до которого нужно собрать квант."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Метод доставки."
            },
            "destination_place_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор пункта назначения."
            },
            "destination_place_name": {
              "type": "string",
              "description": "Название пункта назначения."
            },
            "filling_percent": {
              "type": "number",
              "format": "float",
              "description": "Наполненность кванта в процентах."
            },
            "first_posting_cancellation_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, когда отправления начнут отменяться, если квант не будет зарезервирован."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор кванта в системе Ozon."
            },
            "inv_quant_id": {
              "type": "integer",
              "format": "int64",
              "description": "Инвентарный идентификатор кванта."
            },
            "last_status_change_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата последнего изменения статуса кванта."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — `product_id`."
            },
            "products_price": {
              "type": "number",
              "format": "float",
              "description": "Суммарная стоимость товаров в кванте."
            },
            "quantum_start_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала наполнения кванта."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "sku_name": {
              "type": "string",
              "description": "Название товара."
            },
            "status": {
              "$ref": "#/components/schemas/v1QuantStatus"
            },
            "target_postings_count": {
              "type": "integer",
              "format": "int64",
              "description": "Необходимое количество товаров в кванте."
            },
            "tpl_provider_name": {
              "type": "string",
              "description": "Название службы доставки."
            },
            "type": {
              "type": "string",
              "description": "Тип кванта — коробка или палета."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада продавца."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада продавца."
            }
          }
        },
        "QuantsV1ListResponseResult": {
          "type": "object",
          "title": "object",
          "description": "Список квантов.",
          "properties": {
            "cursor": {
              "type": "string",
              "description": "Указатель для выборки следующих данных."
            },
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернулась только часть значений:\n- `true` — сделайте повторный запрос с новым параметром `cursor` для получения остальных значений;\n- `false` — ответ содержит все значения характеристики.\n"
            },
            "quants": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuantsV1ListResponseResultQuants"
              },
              "description": "Список квантов."
            }
          }
        },
        "QuantsV1ListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/QuantsV1ListResponseResult"
            }
          }
        },
        "QuantsV1GetRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "inv_quant_id": {
              "type": "integer",
              "format": "int64",
              "description": "Инвентарный идентификатор кванта."
            }
          },
          "required": [
            "inv_quant_id"
          ]
        },
        "QuantsV1GetResponseResultCancelReason": {
          "type": "object",
          "title": "object",
          "description": "Причина отмены отправления.",
          "properties": {
            "cancel_reason_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены отправления."
            },
            "cancel_reason_name": {
              "type": "string",
              "description": "Причина отмены отправления."
            },
            "responsible": {
              "type": "string",
              "description": "Инициатор отмены."
            }
          }
        },
        "QuantsV1GetResponseResultPostings": {
          "type": "object",
          "title": "object",
          "properties": {
            "cancel_reason": {
              "description": null,
              "$ref": "#/components/schemas/QuantsV1GetResponseResultCancelReason"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products_price": {
              "type": "number",
              "format": "float",
              "description": "Суммарная стоимость товаров в кванте."
            },
            "status_alias": {
              "type": "string",
              "description": "Текст статуса."
            },
            "status_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор статуса."
            }
          }
        },
        "QuantsV1GetResponseResult": {
          "type": "object",
          "title": "object",
          "properties": {
            "available_actions": {
              "type": "array",
              "description": "Доступные действия.",
              "items": {
                "type": "string"
              }
            },
            "awaiting_stock_due_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, до которой нужно указать остатки."
            },
            "cancel_reason": {
              "$ref": "#/components/schemas/QuantsV1GetResponseResultCancelReason"
            },
            "current_postings_count": {
              "type": "integer",
              "format": "int64",
              "description": "Текущее количество отправлений в кванте."
            },
            "cutoff": {
              "type": "string",
              "format": "date-time",
              "description": "Время, до которого нужно собрать квант."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Метод доставки."
            },
            "destination_place_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор пункта назначения."
            },
            "destination_place_name": {
              "type": "string",
              "description": "Название пункта назначения."
            },
            "filling_percent": {
              "type": "number",
              "format": "float",
              "description": "Наполненность кванта в процентах."
            },
            "first_posting_cancellation_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, когда отправления начнут отменяться, если квант не будет зарезервирован."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор кванта."
            },
            "inv_quant_id": {
              "type": "integer",
              "format": "int64",
              "description": "Инвентарный идентификатор кванта."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "postings": {
              "type": "array",
              "description": "Отправления.",
              "items": {
                "$ref": "#/components/schemas/QuantsV1GetResponseResultPostings"
              }
            },
            "product_picture_url": {
              "type": "string",
              "description": "Ссылка на фото товара."
            },
            "products_price": {
              "type": "number",
              "format": "float",
              "description": "Суммарная стоимость товаров в кванте."
            },
            "quantum_start_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала наполнения кванта."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "sku_name": {
              "type": "string",
              "description": "Название товара."
            },
            "status": {
              "$ref": "#/components/schemas/v1QuantStatus"
            },
            "target_postings_count": {
              "type": "integer",
              "format": "int64",
              "description": "Необходимое количество товаров в кванте."
            },
            "tpl_provider_name": {
              "type": "string",
              "description": "Название службы доставки."
            },
            "type": {
              "type": "string",
              "description": "Тип кванта — коробка или палета."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            }
          }
        },
        "QuantsV1GetResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "result": {
              "description": "Информация о кванте.",
              "items": {
                "$ref": "#/components/schemas/QuantsV1GetResponseResult"
              }
            }
          }
        },
        "QuantsV1ShipRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "inv_quant_id": {
              "type": "integer",
              "format": "int64",
              "description": "Инвентарный идентификатор кванта."
            }
          },
          "required": [
            "inv_quant_id"
          ]
        },
        "QuantsV1StatusRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "inv_quant_id": {
              "type": "integer",
              "format": "int64",
              "description": "Инвентарный идентификатор кванта."
            }
          },
          "required": [
            "inv_quant_id"
          ]
        },
        "QuantsV1StatusResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/v1QuantStatus"
            }
          }
        },
        "v1QuestionAnswerCreateRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "question_id": {
              "type": "string",
              "description": "Идентификатор вопроса."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "text": {
              "type": "string",
              "description": "Текст ответа объёмом от 2 до 3000 символов."
            }
          },
          "required": [
            "question_id",
            "sku",
            "text"
          ]
        },
        "v1QuestionAnswerCreateDefault": {
          "type": "object",
          "title": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "string",
              "description": "Дополнительная информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Описание ошибки."
            }
          }
        },
        "v1QuestionAnswerCreateResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "answer_id": {
              "type": "string",
              "description": "Идентификатор ответа на вопрос."
            }
          }
        },
        "v1QuestionAnswerDeleteRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "answer_id": {
              "type": "string",
              "description": "Идентификатор ответа."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "required": [
            "answer_id",
            "sku"
          ]
        },
        "v1QuestionAnswerListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "last_id": {
              "type": null,
              "description": "Идентификатор последнего значения на странице. \n\nЕсли запрос первый, оставьте поле пустым. Для следующих значений указывайте `last_id` из ответа предыдущего запроса.\n"
            },
            "question_id": {
              "type": "string",
              "description": "Идентификатор вопроса."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "required": [
            "question_id",
            "sku"
          ]
        },
        "v1QuestionAnswerListResponseAnswers": {
          "type": "object",
          "title": "object",
          "properties": {
            "author_name": {
              "type": "string",
              "description": "Автор ответа."
            },
            "id": {
              "type": "string",
              "description": "Идентификатор ответа."
            },
            "published_at": {
              "type": "timestamp",
              "description": "Дата публикации ответа."
            },
            "question_id": {
              "type": "string",
              "description": "Идентификатор вопроса."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "text": {
              "type": "string",
              "description": "Текст ответа."
            }
          }
        },
        "v1QuestionAnswerListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "answers": {
              "description": "Ответы.",
              "items": {
                "$ref": "#/components/schemas/v1QuestionAnswerListResponseAnswers"
              }
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            }
          }
        },
        "v1QuestionChangeStatusRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "question_ids": {
              "items": {
                "type": "string"
              },
              "description": "Идентификаторы вопросов."
            },
            "status": {
              "type": "string",
              "description": "Статусы вопросов:\n  - `NEW` — новые,\n  - `VIEWED` — просмотренные,\n  - `PROCESSED` — обработанные.\n"
            }
          },
          "required": [
            "question_ids",
            "status"
          ]
        },
        "v1QuestionCountResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "all": {
              "type": "int64",
              "description": "Всего вопросов."
            },
            "new": {
              "type": "int64",
              "description": "Новые вопросы."
            },
            "processed": {
              "type": "int64",
              "description": "Обработанные вопросы."
            },
            "unprocessed": {
              "type": "int64",
              "description": "Необработанные вопросы."
            },
            "viewed": {
              "type": "int64",
              "description": "Просмотренные вопросы."
            }
          }
        },
        "v1QuestionInfoRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "question_id": {
              "type": "string",
              "description": "Идентификатор вопроса"
            }
          },
          "required": [
            "question_id"
          ]
        },
        "v1QuestionInfoResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "answers_count": {
              "type": "int64",
              "description": "Количество ответов на вопрос."
            },
            "author_name": {
              "type": "string",
              "description": "Автор вопроса."
            },
            "id": {
              "type": "string",
              "description": "Идентификатор вопроса."
            },
            "product_url": {
              "type": "string",
              "description": "Ссылка на товар."
            },
            "published_at": {
              "type": "timestamp",
              "description": "Дата публикации вопроса."
            },
            "question_link": {
              "type": "string",
              "description": "Ссылка на вопрос."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "status": {
              "type": "enum",
              "description": "Статус вопроса:\n  - `NEW` — новый,\n  - `ALL` — все вопросы,\n  - `VIEWED` — просмотренный,\n  - `PROCESSED` — обработанный,\n  - `UNPROCESSED` — необработанный.\n"
            },
            "text": {
              "type": "string",
              "description": "Текст вопроса."
            }
          }
        },
        "v1QuestionListRequestFilter": {
          "type": "object",
          "title": "object",
          "description": "Фильтр.",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода."
            },
            "status": {
              "type": "string",
              "description": "Статусы вопроса:\n  - `NEW` — новый,\n  - `ALL` — все вопросы,\n  - `VIEWED` — просмотренный,\n  - `PROCESSED` — обработанный,\n  - `UNPROCESSED` — необработанный.\n"
            }
          }
        },
        "v1QuestionListRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v1QuestionListRequestFilter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. \n\nОставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            }
          }
        },
        "v1QuestionListResponseQuestions": {
          "type": "object",
          "title": "object",
          "properties": {
            "answers_count": {
              "type": "int64",
              "description": "Количество ответов на вопрос."
            },
            "author_name": {
              "type": "string",
              "description": "Имя автора вопроса."
            },
            "id": {
              "type": "string",
              "description": "Идентификатор вопроса."
            },
            "product_url": {
              "type": "string",
              "description": "Ссылка на товар."
            },
            "published_at": {
              "type": "timestamp",
              "description": "Дата публикации вопроса."
            },
            "question_link": {
              "type": "string",
              "description": "Ссылка на вопрос."
            },
            "sku": {
              "type": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "status": {
              "type": "enum",
              "description": "Статусы вопроса:\n  - `NEW` — новый,\n  - `ALL` — все вопросы,\n  - `VIEWED` — просмотренный,\n  - `PROCESSED` — обработанный,\n  - `UNPROCESSED` — необработанный.\n"
            },
            "text": {
              "type": "string",
              "description": "Текст вопроса."
            }
          }
        },
        "v1QuestionListResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "questions": {
              "description": "Вопросы.",
              "items": {
                "$ref": "#/components/schemas/v1QuestionListResponseQuestions"
              }
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            }
          }
        },
        "v1QuestionTopSkuRequest": {
          "type": "object",
          "title": "object",
          "properties": {
            "limit": {
              "type": "int64",
              "description": "Количество значений в ответе: максимум — 100, минимум — 1.\n"
            }
          },
          "required": [
            "limit"
          ]
        },
        "v1QuestionTopSkuResponse": {
          "type": "object",
          "title": "object",
          "properties": {
            "sku": {
              "description": "Список Идентификаторы товаров в системе Ozon — SKU.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        }
      },
      "requestBodies": {
        "v1StrategyRequest": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1StrategyRequest"
              }
            }
          },
          "required": true
        },
        "v1ItemIDsRequest": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ItemIDsRequest"
              }
            }
          },
          "required": true
        },
        "v1PostingFbsSplitRequest": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1PostingFbsSplitRequest"
              }
            }
          },
          "required": true
        },
        "v2ConditionalCancellationMoveV2Request": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v2ConditionalCancellationMoveV2Request"
              }
            }
          },
          "required": true
        },
        "QuestionAPI_GetQuestionCountBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        }
      }
    }
  }