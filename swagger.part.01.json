{
    "openapi": "3.0.0",
    "info": {
      "title": "Документация Ozon Seller API",
      "version": 2.1,
      "x-logo": {
        "url": "https://cdn1.ozonusercontent.com/s3/redoc/ozon-seller-logo.svg",
        "backgroundColor": null,
        "altText": "Ozon logo"
      },
      "description": "По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.\n\n> [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)\n\n> [Информационная платформа и сообщество разработчиков Ozon for dev](https://dev.ozon.ru/)\n"
    },
    "paths": {
      "/v1/description-category/tree": {
        "post": {
          "tags": [
            "CategoryAPI"
          ],
          "summary": "Дерево категорий и типов товаров",
          "description": "Возвращает категории и типы для товаров в виде дерева.\n\nСоздание товаров доступно только в категориях последнего уровня, сравните именно их с категориями на своей площадке.\nКатегории не создаются по запросу пользователя.\n\n<aside class=\"warning\">\n  Внимательно выбирайте категорию для товара: для разных категорий применяется разный размер комиссии.\n</aside>\n",
          "operationId": "DescriptionCategoryAPI_GetTree",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetTreeRequest"
                },
                "example": {
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Дерево категорий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetTreeResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "description_category_id": 17027492,
                        "category_name": "Канцелярские товары",
                        "disabled": false,
                        "children": [
                          {
                            "description_category_id": 17029016,
                            "category_name": "Печати и штампы",
                            "disabled": false,
                            "children": [
                              {
                                "type_name": "Пистолет-маркиратор",
                                "type_id": 970778135,
                                "disabled": false,
                                "children": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/description-category/attribute": {
        "post": {
          "tags": [
            "CategoryAPI"
          ],
          "summary": "Список характеристик категории",
          "description": "Получение характеристик для указанных категории и типа товара.\n\nЕсли у `dictionary_id` значение `0`, у атрибута нет вложенных справочников.\nЕсли значение другое, то справочники есть. Запросите их методом [/v1/description-category/attribute/values](#operation/DescriptionCategoryAPI_GetAttributeValues).\n",
          "operationId": "DescriptionCategoryAPI_GetAttributes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAttributesRequest"
                },
                "example": {
                  "description_category_id": 200000933,
                  "language": "DEFAULT",
                  "type_id": 93080
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Характеристики категории",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetAttributesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 31,
                        "attribute_complex_id": 0,
                        "name": "Бренд в одежде и обуви",
                        "description": "Укажите наименование бренда, под которым произведён товар. Если товар не имеет бренда, используйте значение \"Нет бренда\"",
                        "type": "string",
                        "is_collection": false,
                        "is_required": true,
                        "is_aspect": false,
                        "max_value_count": 0,
                        "group_name": "",
                        "group_id": 0,
                        "dictionary_id": 28732849,
                        "category_dependent": true,
                        "complex_is_collection": true
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/description-category/attribute/values": {
        "post": {
          "tags": [
            "CategoryAPI"
          ],
          "summary": "Справочник значений характеристики",
          "description": "Возвращает справочник значений характеристики.\n\nУзнать, есть ли вложенный справочник, можно через метод [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes). \n",
          "operationId": "DescriptionCategoryAPI_GetAttributeValues",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAttributeValuesRequest"
                },
                "example": {
                  "attribute_id": 85,
                  "description_category_id": 17054869,
                  "language": "DEFAULT",
                  "last_value_id": 0,
                  "limit": 100,
                  "type_id": 97311
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Справочник характеристик",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetAttributeValuesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 5055881,
                        "value": "Sunshine",
                        "info": "",
                        "picture": "https://cdn1.ozone.ru/s3/multimedia-i/6010930878.jpg"
                      },
                      {
                        "id": 5056737,
                        "value": "Essence",
                        "info": "Красота и здоровье",
                        "picture": "https://cdn1.ozone.ru/s3/multimedia-v/6088253599.jpg"
                      }
                    ],
                    "has_next": true
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/description-category/attribute/values/search": {
        "post": {
          "tags": [
            "CategoryAPI"
          ],
          "summary": "Поиск по справочным значениям характеристики",
          "description": "Возвращает справочные значения характеристики по заданному значению `value` в запросе.\n\nУзнать, есть ли вложенный справочник, можно через метод [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes).\n",
          "operationId": "DescriptionCategoryAPI_SearchAttributeValues",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SearchAttributeValuesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Справочные значения характеристики.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SearchAttributeValuesResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/product/import": {
        "post": {
          "summary": "Создать или обновить товар",
          "description": "\nМетод для создания товаров и обновления информации о них.\n\nВ сутки можно создать или обновить определённое количество товаров. Чтобы узнать лимит, используйте\n[/v4/product/info/limit](#operation/ProductAPI_GetUploadQuota). Если количество загрузок и обновлений товаров\nпревысит лимит, появится ошибка `item_limit_exceeded`.\n\nВ одном запросе можно передать до 100 товаров. Каждый товар — это отдельный элемент в массиве `items`. Укажите\nвсю информацию о товаре: его характеристики, штрихкод, изображения, габариты, цену и валюту цены.\n\nПри обновлении товара передайте в запросе всю информацию о нём.\n\nУказанная валюта должна совпадать с той, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\nНапример, если у вас установлена валюта юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nТовар не будет создан или обновлён, если вы заполните неправильно или не укажете:\n   - **Обязательные характеристики**: характеристики отличаются для разных категорий — их можно посмотреть в [Базе знаний продавца](https://docs.ozon.ru/global/products/requirements/product-info/product-characteristics/#обязательные-характеристики) или получить методом [/v1/description-category/attribute](#operation/DescriptionCategoryAPI_GetAttributes).\n   - **Реальные объёмно-весовые характеристики**: `depth`, `width`, `height`, `dimension_unit`, `weight`, `weight_unit`. Не пропускайте эти параметры в запросе и не указывайте 0.\n\nДля некоторых характеристик можно использовать HTML-теги.\n\nПосле модерации товар появится в вашем личном кабинете, но не будет виден пользователям, пока вы не выставите его\nна продажу.\n\nКаждый товар в запросе — отдельный элемент массива `items`.\n\nЧтобы объединить две карточки, для каждой передайте `9048` в массиве `attributes`. Все атрибуты в этих карточках, кроме размера или цвета, должны совпадать.\n\n## Загрузка изображений\n\nДля загрузки передайте в запросе ссылки на изображения в общедоступном облачном хранилище.\nФормат изображения по ссылке — JPG или PNG.\n\nИзображения в массиве `images` располагайте в соответствии с желаемым порядком на сайте. Для загрузки главного\nизображения товара используйте параметр `primary_image`. Если не передать значение `primary_image`, главным будет\nпервое изображение в массиве `images`.\n\nДля каждого товара вы можете загрузить до 15 изображений, включая главное.\nЕсли передать значение `primary_image`, максимальное количество изображений в `images` — 14.\nЕсли параметр `primary_image` пустой, то в `images` можно передать до 15 изображений.\n\nДля загрузки изображений 360 используйте поле `images360`, для загрузки маркетингового цвета — `color_image`.\n\nЕсли вы хотите изменить состав или порядок изображений, получите информацию с помощью метода\n[/v3/product/info/list](#operation/ProductAPI_GetProductInfoList) — в нём отображается текущий порядок и\nсостав изображений. Скопируйте данные полей `images`, `images360`, `color_image`, измените и дополните состав или\nпорядок в соответствии с необходимостью.\n\n## Загрузка видео\n\nДля загрузки передайте в запросе ссылки на видео.\n\nДля этого в параметре `complex_attributes` передайте объект. В нём в массиве `attributes` передайте 2 объекта с `complex_id = 100001`:\n\n- В первом передайте укажите `id = 21841` и в массиве `values` передайте объект с ссылкой на видео.\n\n  __Пример__:\n\n  ```\n  {\n    \"complex_id\": 100001,\n    \"id\": 21841,\n    \"values\": [\n      {\n        \"value\": \"https://www.youtube.com/watch?v=ZwM0iBn03dY\"\n      }\n    ]\n  }\n  ```\n\n- Во втором укажите значение `id = 21837` и в массиве `values` передайте объект с названием видео.\n\n  __Пример__:\n\n  ```\n  {\n    \"complex_id\": 100001,\n    \"id\": 21837,\n    \"values\": [\n      {\n        \"value\": \"videoName_1\"\n      }\n    ]\n  }\n  ```\n\nЕсли вы хотите загрузить несколько видео, передавайте значения для каждого видео в разных объектах массива `values`.\n\n  __Пример__:\n\n  ```\n  {\n    \"complex_id\": 100001,\n    \"id\": 21837,\n    \"values\": [\n      {\n        \"value\": \"videoName_1\"\n      },\n      {\n        \"value\": \"videoName_2\"\n      }\n    ]\n  },\n  {\n    \"complex_id\": 100001,\n    \"id\": 21841,\n    \"values\": [\n      {\n        \"value\": \"https://www.youtube.com/watch?v=ZwM0iBn03dY\"\n      },\n      {\n        \"value\": \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n      }\n    ]\n  }\n```\n\n## Загрузка таблицы размеров\nВы можете добавить в карточку товара таблицу размеров, созданную с помощью [конструктора](https://table-constructor.ozon.ru/visual-editor). Передайте её в массиве `attributes` в формате JSON как Rich-контент `id = 13164`. <br><br>\n[Конструктор в формате JSON](https://table-constructor.ozon.ru/schema.json)<br>\n[Подробнее о конструкторе в Базе знаний продавца](https://docs.ozon.ru/global/products/requirements/size-table-constructor/)\n\n## Загрузка видеообложки\n\nВы можете загрузить видеообложку через `complex_attributes`.\n\n__Пример__:\n\n```\n\"complex_attributes\": [\n  {\n    \"attributes\": [\n      {\n        \"id\": 21845,\n        \"complex_id\": 100002,\n        \"values\": [\n          {\n          \"dictionary_value_id\": 0,\n          \"value\": \"https://v.ozone.ru/vod/video-10/01GFATWQVCDE7G5B721421P1231Q7/asset_1.mp4\"\n          }\n        ]\n      }\n    ]\n  }\n]\n```\n",
          "operationId": "ProductAPI_ImportProductsV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3ImportProductsRequest"
                },
                "examples": {
                  "withoutVideo": {
                    "summary": "Пример запроса без загрузки видео",
                    "value": {
                      "items": [
                        {
                          "attributes": [
                            {
                              "complex_id": 0,
                              "id": 5076,
                              "values": [
                                {
                                  "dictionary_value_id": 971082156,
                                  "value": "Стойка для акустической системы"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 9048,
                              "values": [
                                {
                                  "value": "Комплект защитных плёнок для X3 NFC. Темный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 8229,
                              "values": [
                                {
                                  "dictionary_value_id": 95911,
                                  "value": "Комплект защитных плёнок для X3 NFC. Темный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 85,
                              "values": [
                                {
                                  "dictionary_value_id": 5060050,
                                  "value": "Samsung"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 10096,
                              "values": [
                                {
                                  "dictionary_value_id": 61576,
                                  "value": "серый"
                                }
                              ]
                            }
                          ],
                          "barcode": "112772873170",
                          "description_category_id": 17028922,
                          "new_description_category_id": 0,
                          "color_image": "",
                          "complex_attributes": [],
                          "currency_code": "RUB",
                          "depth": 10,
                          "dimension_unit": "mm",
                          "height": 250,
                          "images": [],
                          "images360": [],
                          "name": "Комплект защитных плёнок для X3 NFC. Темный хлопок",
                          "offer_id": "143210608",
                          "old_price": "1100",
                          "pdf_list": [],
                          "price": "1000",
                          "primary_image": "",
                          "promotions": [
                            {
                              "operation": "UNKNOWN",
                              "type": "REVIEWS_PROMO"
                            }
                          ],
                          "vat": "0.1",
                          "weight": 100,
                          "weight_unit": "g",
                          "width": 150
                        }
                      ]
                    }
                  },
                  "withVideo": {
                    "summary": "Пример запроса с загрузкой видео",
                    "value": {
                      "items": [
                        {
                          "attributes": [
                            {
                              "complex_id": 0,
                              "id": 5076,
                              "values": [
                                {
                                  "dictionary_value_id": 971082156,
                                  "value": "Стойка для акустической системы"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 9048,
                              "values": [
                                {
                                  "value": "Комплект защитных плёнок для X3 NFC. Тёмный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 8229,
                              "values": [
                                {
                                  "dictionary_value_id": 95911,
                                  "value": "Комплект защитных плёнок для X3 NFC. Тёмный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 85,
                              "values": [
                                {
                                  "dictionary_value_id": 5060050,
                                  "value": "Samsung"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 10096,
                              "values": [
                                {
                                  "dictionary_value_id": 61576,
                                  "value": "серый"
                                }
                              ]
                            }
                          ],
                          "barcode": "112772873170",
                          "description_category_id": 17028922,
                          "new_description_category_id": 0,
                          "color_image": "",
                          "complex_attributes": [
                            {
                              "attributes": [
                                {
                                  "complex_id": 100001,
                                  "id": 21841,
                                  "values": [
                                    {
                                      "value": "https://www.youtube.com/watch?v=ZwM0iBn03dY"
                                    }
                                  ]
                                },
                                {
                                  "complex_id": 100001,
                                  "id": 21837,
                                  "values": [
                                    {
                                      "value": "videoName_1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "attributes": [
                                {
                                  "complex_id": 100001,
                                  "id": 21841,
                                  "values": [
                                    {
                                      "value": "https://www.youtube.com/watch?v=pz15NanA740"
                                    }
                                  ]
                                },
                                {
                                  "complex_id": 100001,
                                  "id": 21837,
                                  "values": [
                                    {
                                      "value": "videoName_2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "currency_code": "RUB",
                          "depth": 10,
                          "dimension_unit": "mm",
                          "height": 250,
                          "images": [],
                          "images360": [],
                          "name": "Комплект защитных плёнок для X3 NFC. Тёмный хлопок",
                          "offer_id": "143210608",
                          "old_price": "1100",
                          "pdf_list": [],
                          "price": "1000",
                          "primary_image": "",
                          "promotions": [
                            {
                              "operation": "UNKNOWN",
                              "type": "REVIEWS_PROMO"
                            }
                          ],
                          "vat": "0.1",
                          "weight": 100,
                          "weight_unit": "g",
                          "width": 150
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Создан новый товар / Информация о товаре обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3ImportProductsResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 172549793
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/import/info": {
        "post": {
          "summary": "Узнать статус добавления или обновления товара",
          "description": "Позволяет получить статус создания или обновления карточки товара.",
          "operationId": "ProductAPI_GetImportProductsInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGetImportProductsInfoRequest"
                },
                "example": {
                  "task_id": "172549793"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус добавления или обновления товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productGetImportProductsInfoResponse"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "offer_id": "143210608",
                          "product_id": 137285792,
                          "status": "imported",
                          "errors": []
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/import-by-sku": {
        "post": {
          "summary": "Создать товар по SKU",
          "description": "Метод создаёт [копию карточки товара](https://seller-edu.ozon.ru/work-with-goods/zagruzka-tovarov/creating-goods/cherez-kopirovanie)\nс указанным SKU.\n\nСоздать копию не получится, если продавец запретил копирование своих карточек.\n\nОбновить товар по SKU нельзя.\n",
          "operationId": "ProductAPI_ImportProductsBySKU",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsBySKURequest"
                },
                "example": {
                  "items": [
                    {
                      "sku": 298789742,
                      "name": "string",
                      "offer_id": "91132",
                      "currency_code": "RUB",
                      "old_price": "2590",
                      "price": "2300",
                      "vat": "0.1"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsBySKUResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 176594213,
                      "unmatched_sku_list": []
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/attributes/update": {
        "post": {
          "summary": "Обновить характеристики товара",
          "operationId": "ProductAPI_ProductUpdateAttributes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUpdateAttributesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Создано задание на обновление товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUpdateAttributesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/pictures/import": {
        "post": {
          "summary": "Загрузить или обновить изображения товара",
          "description": "Метод для загрузки или обновления изображений товара.\n\nПри каждом вызове метода передавайте все изображения, которые должны быть на карточке товара. Например, если вы вызвали метод и загрузили 10 изображений, а затем вызвали метод второй раз и загрузили ещё одно,\nто все 10 предыдущих сотрутся.\n\nДля загрузки передайте адрес ссылки на изображение в общедоступном облачном хранилище.\nФормат изображения по ссылке — JPG или PNG.\n\nИзображения в массиве `images` располагайте в соответствии с желаемым порядком на сайте. Главным будет\nпервое изображение в массиве.\n\nДля каждого товара вы можете загрузить до 15 изображений.\n\nДля загрузки изображений 360 используйте поле `images360`, для загрузки маркетингового цвета — `color_image`.\n\nЕсли вы хотите изменить состав или порядок изображений, получите информацию с помощью метода\n[/v3/product/info/list](#operation/ProductAPI_GetProductInfoList) — в нём отображается текущий порядок и\nсостав изображений. Скопируйте данные полей `images`, `images360`, `color_image`, измените и дополните состав или\nпорядок в соответствии с необходимостью.\n",
          "operationId": "ProductAPI_ProductImportPictures",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv1ProductImportPicturesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Предварительный результат работы метода",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv1ProductInfoPicturesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v3/product/list": {
        "post": {
          "summary": "Список товаров",
          "operationId": "ProductAPI_GetProductList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "description": "Метод для получения списка всех товаров.\n\nЕсли вы используете фильтр по идентификатору `offer_id` или `product_id`, остальные параметры заполнять не обязательно.\nЗа один раз вы можете использовать только одну группу идентификаторов, не больше 1000 товаров.\n\nЕсли вы не используете для отображения идентификаторы, укажите `limit` и `last_id` в следующих запросах.\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv3GetProductListRequest"
                },
                "example": {
                  "filter": {
                    "offer_id": [
                      "136748"
                    ],
                    "product_id": [
                      "223681945"
                    ],
                    "visibility": "ALL"
                  },
                  "last_id": "",
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv3GetProductListResponse"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "archived": true,
                          "has_fbo_stocks": true,
                          "has_fbs_stocks": true,
                          "is_discounted": true,
                          "offer_id": "136748",
                          "product_id": 223681945,
                          "quants": [
                            {
                              "quant_code": "string",
                              "quant_size": 0
                            }
                          ]
                        }
                      ],
                      "total": 1,
                      "last_id": "bnVсbA=="
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/rating-by-sku": {
        "post": {
          "summary": "Получить контент-рейтинг товаров по SKU",
          "description": "Метод для получения контент-рейтинга товаров, а также рекомендаций по его увеличению.\n\n[Подробнее о контент-рейтинге](https://seller-edu.ozon.ru/docs/work-with-goods/content-rating.html)\n",
          "operationId": "ProductAPI_GetProductRatingBySku",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductRatingBySkuRequest"
                },
                "example": {
                  "skus": [
                    "179737222"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Контент-рейтинг товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductRatingBySkuResponse"
                  },
                  "example": {
                    "products": [
                      {
                        "sku": 179737222,
                        "rating": 42.5,
                        "groups": [
                          {
                            "key": "media",
                            "name": "Медиа",
                            "rating": 70,
                            "weight": 25,
                            "conditions": [
                              {
                                "key": "media_images_2",
                                "description": "Добавлено 2 изображения",
                                "fulfilled": true,
                                "cost": 50
                              },
                              {
                                "key": "media_images_3",
                                "description": "Добавлено 3 изображения и более",
                                "fulfilled": true,
                                "cost": 20
                              },
                              {
                                "key": "media_image_3d",
                                "description": "Добавлено 3D-изображение",
                                "fulfilled": false,
                                "cost": 15
                              },
                              {
                                "key": "media_video",
                                "description": "Добавлено видео",
                                "fulfilled": false,
                                "cost": 15
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4074,
                                "name": "Код ролика на YouTube"
                              },
                              {
                                "id": 4080,
                                "name": "3D-изображение"
                              }
                            ],
                            "improve_at_least": 2
                          },
                          {
                            "key": "important_attributes",
                            "name": "Важные атрибуты",
                            "rating": 50,
                            "weight": 30,
                            "conditions": [
                              {
                                "key": "important_2",
                                "description": "Заполнено 2 атрибута и более",
                                "fulfilled": true,
                                "cost": 50
                              },
                              {
                                "key": "important_50_percent",
                                "description": "Заполнено более 50% атрибутов",
                                "fulfilled": false,
                                "cost": 25
                              },
                              {
                                "key": "important_70_percent",
                                "description": "Заполнено более 70% атрибутов",
                                "fulfilled": false,
                                "cost": 25
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4385,
                                "name": "Гарантийный срок"
                              },
                              {
                                "id": 4389,
                                "name": "Страна-изготовитель"
                              },
                              {
                                "id": 8513,
                                "name": "Количество в упаковке, шт"
                              },
                              {
                                "id": 8590,
                                "name": "Макс. диагональ, дюймы"
                              },
                              {
                                "id": 8591,
                                "name": "Мин. диагональ, дюймы"
                              },
                              {
                                "id": 9336,
                                "name": "Модель браслета/умных часов"
                              },
                              {
                                "id": 11046,
                                "name": "Покрытие"
                              },
                              {
                                "id": 11047,
                                "name": "Прозрачность покрытия"
                              },
                              {
                                "id": 11048,
                                "name": "Дополнительные свойства покрытия"
                              },
                              {
                                "id": 11049,
                                "name": "Вид стекла"
                              },
                              {
                                "id": 11603,
                                "name": "Размер циферблата"
                              }
                            ],
                            "improve_at_least": 6
                          },
                          {
                            "key": "other_attributes",
                            "name": "Остальные атрибуты",
                            "rating": 0,
                            "weight": 25,
                            "conditions": [
                              {
                                "key": "other_2",
                                "description": "Заполнено 2 атрибута и более",
                                "fulfilled": false,
                                "cost": 50
                              },
                              {
                                "key": "other_50_percent",
                                "description": "Заполнено более 50% атрибутов",
                                "fulfilled": false,
                                "cost": 50
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4382,
                                "name": "Размеры, мм"
                              }
                            ],
                            "improve_at_least": 1
                          },
                          {
                            "key": "text",
                            "name": "Текстовое описание",
                            "rating": 50,
                            "weight": 20,
                            "conditions": [
                              {
                                "key": "text_annotation_100_chars",
                                "description": "Аннотация более 100 знаков",
                                "fulfilled": true,
                                "cost": 25
                              },
                              {
                                "key": "text_annotation_500_chars",
                                "description": "Аннотация более 500 знаков",
                                "fulfilled": true,
                                "cost": 25
                              },
                              {
                                "key": "text_rich",
                                "description": "Заполнен Rich-контент",
                                "fulfilled": false,
                                "cost": 100
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 11254,
                                "name": "Rich-контент JSON"
                              }
                            ],
                            "improve_at_least": 1
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v3/product/info/list": {
        "post": {
          "summary": "Получить информацию о товарах по идентификаторам",
          "description": "Метод для получения информации о товарах по их идентификаторам.\n\nВ теле запроса должен быть массив однотипных идентификаторов, в ответе будет массив `items`.\n\nВ одном запросе вы можете передать не больше 1000 товаров по параметрам `offer_id`, `product_id` и `sku` в сумме.\n",
          "operationId": "ProductAPI_GetProductInfoList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetProductInfoListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetProductInfoListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v4/product/info/attributes": {
        "post": {
          "summary": "Получить описание характеристик товара",
          "description": "Возвращает описание характеристик товаров по идентификатору и видимости. Товар можно искать по `offer_id`, `product_id` или `sku`.",
          "operationId": "ProductAPI_GetProductAttributesV4",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv4GetProductAttributesV4Request"
                },
                "example": {
                  "filter": {
                    "product_id": [
                      "213761435"
                    ],
                    "offer_id": [
                      "testtest5"
                    ],
                    "sku": [
                      "123495432"
                    ],
                    "visibility": "ALL"
                  },
                  "limit": 100,
                  "sort_dir": "ASC"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Описание характеристик товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv4GetProductAttributesV4Response"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 213761435,
                        "barcode": "",
                        "barcodes": [
                          "123124123",
                          "123342455"
                        ],
                        "name": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G",
                        "offer_id": "21470",
                        "type_id": 124572394,
                        "height": 10,
                        "depth": 210,
                        "width": 140,
                        "dimension_unit": "mm",
                        "weight": 50,
                        "weight_unit": "g",
                        "primary_image": "https://cdn1.ozone.ru/s3/multimedia-4/6804736960.jpg",
                        "sku": 423434534,
                        "model_info": {
                          "model_id": 43445453,
                          "count": 4
                        },
                        "images": [
                          "https://cdn1.ozone.ru/s3/multimedia-4/6804736960.jpg",
                          "https://cdn1.ozone.ru/s3/multimedia-j/6835412647.jpg"
                        ],
                        "pdf_list": [],
                        "attributes": [
                          {
                            "id": 5219,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970718176,
                                "value": "универсальный"
                              }
                            ]
                          },
                          {
                            "id": 11051,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970736931,
                                "value": "Прозрачный"
                              }
                            ]
                          },
                          {
                            "id": 10100,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "false"
                              }
                            ]
                          },
                          {
                            "id": 11794,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970860783,
                                "value": "safe"
                              }
                            ]
                          },
                          {
                            "id": 9048,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G"
                              }
                            ]
                          },
                          {
                            "id": 5076,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 39638,
                                "value": "Xiaomi"
                              }
                            ]
                          },
                          {
                            "id": 9024,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "21470"
                              }
                            ]
                          },
                          {
                            "id": 10015,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "false"
                              }
                            ]
                          },
                          {
                            "id": 85,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 971034861,
                                "value": "Brand"
                              }
                            ]
                          },
                          {
                            "id": 9461,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 349824787,
                                "value": "Защитная пленка для смартфона"
                              }
                            ]
                          },
                          {
                            "id": 4180,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G"
                              }
                            ]
                          },
                          {
                            "id": 4191,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка предназначена для модели Xiaomi Redmi Note 10 Pro 5G. Защитная гидрогелевая пленка обеспечит защиту вашего смартфона от царапин, пыли, сколов и потертостей."
                              }
                            ]
                          },
                          {
                            "id": 8229,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 91521,
                                "value": "Защитная пленка"
                              }
                            ]
                          }
                        ],
                        "complex_attributes": [],
                        "color_image": "",
                        "description_category_id": 71107562
                      }
                    ],
                    "total": 1,
                    "last_id": "onVsfA=="
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/info/description": {
        "post": {
          "summary": "Получить описание товара",
          "operationId": "ProductAPI_GetProductInfoDescription",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGetProductInfoDescriptionRequest"
                },
                "example": {
                  "offer_id": "5",
                  "product_id": 73453843
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Описание товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productGetProductInfoDescriptionResponse"
                  },
                  "example": {
                    "result": {
                      "id": 73453843,
                      "offer_id": "5",
                      "name": "Онлайн курс по дрессировке собак \"Воспитанная собака за 3 недели\"",
                      "description": "Экспресс-курс - это сокращённый вариант курса \"Собака: инструкция по применению\", дающий базовый минимум знаний, навыков, умений. Это оптимальный вариант для совершения первых шагов по воспитанию!<br/><br/>Что дает Экспресс-курс:<ul><li>Контакт с собакой </li></ul>К концу экспресс-курса дрессировки вы получаете воспитанного друга и соратника, который ориентируется на вас в любой ситуации.<ul><li>Уверенность в безопасности</li></ul>Благополучие собаки: больше не будет срывов с поводка, преследования кошек, попыток съесть что-либо на улице и т. д.<ul><li>Комфортная жизнь</li></ul>Принципиально другой уровень общения, без раздражения, криков и недовольства поведением животного."
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v4/product/info/limit": {
        "post": {
          "summary": "Лимиты на ассортимент, создание и обновление товаров",
          "operationId": "ProductAPI_GetUploadQuota",
          "description": "Метод для получения информации о лимитах:\n- На ассортимент — сколько всего товаров можно создать в вашем личном кабинете.\n- На создание товаров — сколько товаров можно создать в сутки.\n- На обновление товаров — сколько товаров можно отредактировать в сутки.\n\nЕсли у вас есть лимит на ассортимент и вы израсходуете его, вы не сможете создавать новые товары.\n\n[Подробнее о лимитах в Базе знаний продавца](https://seller-edu.ozon.ru/work-with-goods/zagruzka-tovarov/creating-goods/limit/)\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Лимиты на ассортмент, создание и обновление товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v4GetUploadQuotaResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/update/offer-id": {
        "post": {
          "summary": "Изменить артикулы товаров из системы продавца",
          "description": "Метод для изменения `offer_id`, привязанных к товарам. Вы можете изменить несколько `offer_id`.\n\nРекомендуем передавать до 250 значений в массиве.\n",
          "operationId": "ProductAPI_ProductUpdateOfferID",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUpdateOfferIdRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об изменении артикулов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUpdateOfferIdResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/archive": {
        "post": {
          "summary": "Перенести товар в архив",
          "operationId": "ProductAPI_ProductArchive",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductArchiveRequest"
                },
                "example": {
                  "product_id": [
                    "125529926"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар перенесён в архив",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/unarchive": {
        "post": {
          "summary": "Вернуть товар из архива",
          "operationId": "ProductAPI_ProductUnarchive",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductUnarchiveRequest"
                },
                "example": {
                  "product_id": [
                    "125529926"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар из архива возвращён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v2/products/delete": {
        "post": {
          "summary": "Удалить товар без SKU из архива",
          "description": "В одном запросе можно передать до 500 идентификаторов.",
          "operationId": "ProductAPI_DeleteProducts",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2DeleteProductsRequest"
                },
                "example": {
                  "products": [
                    {
                      "offer_id": "033"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2DeleteProductsResponse"
                  },
                  "example": {
                    "status": [
                      {
                        "offer_id": "033",
                        "is_deleted": true,
                        "error": ""
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/upload_digital_codes": {
        "post": {
          "summary": "Загрузить коды активации для услуг и цифровых товаров",
          "description": "Загрузите коды активации, если вы загружаете цифровые товары или услуги. Код активации привязывается к карточке цифрового товара.\n",
          "operationId": "ProductAPI_UploadDigitalCode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUploadDigitalCodesRequest"
                },
                "example": {
                  "digital_codes": [
                    "764282654334"
                  ],
                  "product_id": 73160317
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор задачи на загрузку кодов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 172549811
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/upload_digital_codes/info": {
        "post": {
          "summary": "Статус загрузки кодов активации",
          "description": "Метод для получения статуса загрузки кодов активации для услуг и цифровых товаров.",
          "operationId": "ProductAPI_UploadDigitalCodeInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUploadDigitalCodesRequestInfo"
                },
                "example": {
                  "task_id": 178574231
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус задачи на загрузку кодов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseInfo"
                  },
                  "example": {
                    "result": {
                      "status": "imported"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/product/info/subscription": {
        "post": {
          "summary": "Количество подписавшихся на товар пользователей",
          "description": "Метод для получения количества пользователей, которые нажали **Узнать о поступлении** на странице товара.\n\nВы можете передать несколько товаров в запросе.\n",
          "tags": [
            "ProductAPI"
          ],
          "operationId": "ProductAPI_GetProductInfoSubscription",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductInfoSubscriptionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество подписавшихся пользователей",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductInfoSubscriptionResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/related-sku/get": {
        "post": {
          "summary": "Получить связанные SKU",
          "description": "Метод для получения единого SKU по старым идентификаторам SKU FBS и SKU FBO. \nВ ответе будут все SKU, связанные с переданными.\n\nМетод может обработать любые SKU, даже скрытые или удалённые.\n\nПередавайте до 200 SKU в одном запросе.\n",
          "operationId": "ProductAPI_ProductGetRelatedSKU",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductGetRelatedSKURequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об SKU",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductGetRelatedSKUResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v2/product/pictures/info": {
        "post": {
          "summary": "Получить изображения товаров",
          "operationId": "ProductAPI_ProductInfoPicturesV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ProductInfoPicturesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Изображения товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ProductInfoPicturesResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ProductAPI"
          ]
        }
      },
      "/v1/barcode/add": {
        "post": {
          "summary": "Привязать штрихкод к товару",
          "description": "Если у товара есть штрихкод, который не указан в системе Ozon, привяжите его с помощью этого метода.\nЕсли штрихкода нет, вы можете создать его через метод [/v1/barcode/generate](#operation/generate-barcode).\n\nЗа один запрос вы можете назначить штрихкод не больше чем на 100 товаров. \nНа одном товаре может быть до 100 штрихкодов. \nС одного аккаунта продавца можно использовать метод не больше 20 раз в минуту.\n",
          "tags": [
            "BarcodeAPI"
          ],
          "operationId": "add-barcode",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddBarcodeRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Штрихкод привязан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AddBarcodeResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/barcode/generate": {
        "post": {
          "summary": "Создать штрихкод для товара",
          "description": "Если у товара нет штрихкода, вы можете создать его с помощью этого метода.\nЕсли штрихкод уже есть, но он не указан в системе Ozon, вы можете привязать его через метод [/v1/barcode/add](#operation/add-barcode).\n\nЗа один запрос вы можете создать штрихкоды не больше чем для 100 товаров.\nС одного аккаунта продавца можно использовать метод не больше 20 раз в минуту.\n",
          "tags": [
            "BarcodeAPI"
          ],
          "operationId": "generate-barcode",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GenerateBarcodeRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Штрихкод создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GenerateBarcodeResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/import/stocks": {
        "post": {
          "summary": "Обновить остатки",
          "description": "\n<aside class=\"warning\">\nМетод будет отключён 27 мая 2025 года. Переключитесь на <a href=\"#operation/ProductAPI_ProductsStocksV2\">/v2/products/stocks</a>.\n</aside>\n\nПозволяет изменить информацию о количестве товара в наличии:\n\n- когда у вас один склад;\n- когда у вас много складов, но FBS склад, на котором будет обновлён остаток, только один.\n\n<aside class=\"warning\">\nПереданный остаток — количество товара в наличии без учёта зарезервированных товаров. Перед обновлением остатков проверьте количество зарезервированных товаров с помощью метода <a href=\"#operation/ProductAPI_ProductStocksByWarehouseFbs\">/v1/product/info/stocks-by-warehouse/fbs</a>.\n</aside>\n\nЗа один запрос можно изменить наличие для 100 товаров. С одного аккаунта продавца можно отправить до 80 запросов в минуту.\n\n<aside class=\"warning\">Обновлять остатки товара на одном складе можно только 1 раз в 2 минуты, иначе в ответе будет ошибка <code>TOO_MANY_REQUESTS</code>.</aside>\n\nВы можете задать наличие товара только после того, как его статус сменится на `price_sent`.\n",
          "operationId": "ProductAPI_ImportProductsStocks",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsStocksRequest"
                },
                "example": {
                  "stocks": [
                    {
                      "offer_id": "PG-2404С1",
                      "product_id": 55946,
                      "stock": 4
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Информация об остатках обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsStocksResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "product_id": 55946,
                        "offer_id": "PG-2404С1",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v2/products/stocks": {
        "post": {
          "summary": "Обновить количество товаров на складах",
          "description": "Позволяет изменить информацию о количестве товара в наличии.\n\n<aside class=\"warning\">\nПереданный остаток — количество товара в наличии без учёта зарезервированных товаров. Перед обновлением остатков проверьте количество зарезервированных товаров с помощью метода <a href=\"#operation/ProductAPI_ProductStocksByWarehouseFbs\">/v1/product/info/stocks-by-warehouse/fbs</a>.\n</aside>\n\nЗа один запрос можно изменить наличие для 100 товаров. С одного аккаунта продавца можно отправить до 80 запросов в минуту.\n\n<aside class=\"warning\">Обновлять остатки товара на одном складе можно только 1 раз в 30 секунд, иначе в ответе будет ошибка <code>TOO_MANY_REQUESTS</code>.</aside>\n\nВы можете задать наличие товара только после того, как его статус сменится на `price_sent`.\n\nОстатки крупногабаритных товаров можно обновлять только на предназначенных для них складах.\n\nЕсли запрос содержит оба параметра — `offer_id` и `product_id`, изменения применятся к товару с `offer_id`. Для избежания неоднозначности используйте только один из параметров.\n",
          "operationId": "ProductAPI_ProductsStocksV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2ProductsStocksRequest"
                },
                "example": {
                  "stocks": [
                    {
                      "offer_id": "PH11042",
                      "product_id": 313455276,
                      "quant_size": 1,
                      "stock": 100,
                      "warehouse_id": 22142605386000
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товаров обновлено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2ProductsStocksResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "warehouse_id": 22142605386000,
                        "product_id": 118597312,
                        "quant_size": 1,
                        "offer_id": "PH11042",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v4/product/info/stocks": {
        "post": {
          "summary": "Информация о количестве товаров",
          "description": "Возвращает информацию о ĸоличестве товаров по схемам FBS и rFBS:\n  - сĸольĸо единиц есть в наличии,\n  - сĸольĸо зарезервировано поĸупателями.\n\nЧтобы получить информацию об остатках по схеме FBO, используйте метод [v1/analytics/manage/stocks](#operation/AnalyticsAPI_ManageStocks).\n",
          "operationId": "ProductAPI_GetProductInfoStocks",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v4GetProductInfoStocksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v4GetProductInfoStocksResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v1/product/info/stocks-by-warehouse/fbs": {
        "post": {
          "summary": "Информация об остатках на складах продавца (FBS и rFBS)",
          "operationId": "ProductAPI_ProductStocksByWarehouseFbs",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товаров на складах FBS и rFBS",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v1/product/import/prices": {
        "post": {
          "summary": "Обновить цену",
          "description": "Позволяет изменить цену одного или нескольких товаров.\nЦену каждого товара можно обновлять не больше 10 раз в час.\nЧтобы сбросить `old_price`, поставьте `0` у этого параметра. \n\nЕсли у товара установлена минимальная цена и включено автоприменение в акции, отключите его и обновите \nминимальную цену, иначе вернётся ошибка `action_price_enabled_min_price_missing`.\n\nЕсли запрос содержит оба параметра — `offer_id` и `product_id`, изменения применятся к товару с `offer_id`. Для избежания неоднозначности используйте только один из параметров.\n",
          "operationId": "ProductAPI_ImportProductsPrices",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsPricesRequest"
                },
                "example": {
                  "prices": [
                    {
                      "auto_action_enabled": "UNKNOWN",
                      "auto_add_to_ozon_actions_list_enabled": "UNKNOWN",
                      "currency_code": "RUB",
                      "min_price": "800",
                      "min_price_for_auto_actions_enabled": true,
                      "net_price": "650",
                      "offer_id": "",
                      "old_price": "0",
                      "price": "1448",
                      "price_strategy_enabled": "UNKNOWN",
                      "product_id": 1386,
                      "quant_size": 1,
                      "vat": "0.1"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Цена обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsPricesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "product_id": 1386,
                        "offer_id": "PH8865",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v5/product/info/prices": {
        "post": {
          "summary": "Получить информацию о цене товара",
          "operationId": "ProductAPI_GetProductInfoPrices",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv5GetProductInfoPricesV5Request"
                },
                "example": {
                  "cursor": "",
                  "filter": {
                    "offer_id": [
                      "356792"
                    ],
                    "product_id": [
                      "243686911"
                    ],
                    "visibility": "ALL"
                  },
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о цене товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv5GetProductInfoPricesV5Response"
                  },
                  "example": {
                    "cursor": "string",
                    "items": [
                      {
                        "acquiring": 0,
                        "commissions": {
                          "fbo_deliv_to_customer_amount": 14.75,
                          "fbo_direct_flow_trans_max_amount": 46.5,
                          "fbo_direct_flow_trans_min_amount": 31,
                          "fbo_return_flow_amount": 50,
                          "fbs_deliv_to_customer_amount": 60,
                          "fbs_direct_flow_trans_max_amount": 61.5,
                          "fbs_direct_flow_trans_min_amount": 41,
                          "fbs_first_mile_max_amount": 25,
                          "fbs_first_mile_min_amount": 0,
                          "fbs_return_flow_amount": 40,
                          "sales_percent_fbo": 15,
                          "sales_percent_fbs": 0
                        },
                        "marketing_actions": {
                          "actions": [
                            {
                              "date_from": "2024-12-13T06:49:37.591Z",
                              "date_to": "2024-12-13T06:49:37.591Z",
                              "title": "string",
                              "value": 0
                            }
                          ],
                          "current_period_from": "2024-12-13T06:49:37.591Z",
                          "current_period_to": "2024-12-13T06:49:37.591Z",
                          "ozon_actions_exist": true
                        },
                        "offer_id": "356792",
                        "price": {
                          "auto_action_enabled": true,
                          "auto_add_to_ozon_actions_list_enabled": true,
                          "currency_code": "RUB",
                          "marketing_price": 0,
                          "marketing_seller_price": 0,
                          "min_price": 0,
                          "old_price": 579,
                          "price": 499,
                          "retail_price": 0,
                          "vat": 0.2
                        },
                        "price_indexes": {
                          "color_index": "WITHOUT_INDEX",
                          "external_index_data": {
                            "min_price": 0,
                            "min_price_currency": "string",
                            "price_index_value": 0
                          },
                          "ozon_index_data": {
                            "min_price": 0,
                            "min_price_currency": "string",
                            "price_index_value": 0
                          },
                          "self_marketplaces_index_data": {
                            "min_price": 0,
                            "min_price_currency": "string",
                            "price_index_value": 0
                          }
                        },
                        "product_id": 243686911,
                        "volume_weight": 0
                      }
                    ],
                    "total": 0
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v1/product/info/discounted": {
        "post": {
          "summary": "Узнать информацию об уценке и основном товаре по SKU уценённого товара",
          "description": "Метод для получения информации о состоянии и дефектах уценённого товара по его SKU. Работает только с уценёнными товарами по схеме FBO. Также метод возвращает SKU основного товара.",
          "operationId": "ProductAPI_GetProductInfoDiscounted",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductInfoDiscountedRequest"
                },
                "example": {
                  "discounted_skus": [
                    "635548518"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об уценке и основном товаре",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductInfoDiscountedResponse"
                  },
                  "example": {
                    "items": [
                      {
                        "discounted_sku": 635548518,
                        "sku": 320067758,
                        "condition_estimation": "4",
                        "packaging_violation": "",
                        "warranty_type": "",
                        "reason_damaged": "Механическое повреждение",
                        "comment_reason_damaged": "повреждена заводская упаковка",
                        "defects": "",
                        "mechanical_damage": "",
                        "package_damage": "",
                        "shortage": "",
                        "repair": "",
                        "condition": ""
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v1/product/update/discount": {
        "post": {
          "summary": "Установить скидку на уценённый товар",
          "description": "Метод для установки размера скидки на уценённые товары, продающиеся по схеме FBS.",
          "operationId": "ProductAPI_ProductUpdateDiscount",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUpdateDiscountRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUpdateDiscountResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Prices&StocksAPI"
          ]
        }
      },
      "/v1/actions": {
        "get": {
          "tags": [
            "Promos"
          ],
          "operationId": "Promos",
          "summary": "Список акций",
          "description": "Метод для получения списка акций Ozon, в которых можно участвовать.\n\n[Подробнее об акциях Ozon](https://seller-edu.ozon.ru/ceny-i-akcii/akcii-skidki-i-kupony/promo)\n",
          "responses": {
            "200": {
              "description": "Список акций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerActionsV1Response"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 71342,
                        "title": "test voucher #2",
                        "date_start": "2021-11-22T09:46:38Z",
                        "date_end": "2021-11-30T20:59:59Z",
                        "potential_products_count": 0,
                        "is_participating": true,
                        "participating_products_count": 5,
                        "description": "",
                        "action_type": "DISCOUNT",
                        "banned_products_count": 0,
                        "with_targeting": false,
                        "discount_type": "UNKNOWN",
                        "discount_value": 0,
                        "order_amount": 0,
                        "freeze_date": "",
                        "is_voucher_action": true
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/candidates": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Список доступных для акции товаров",
          "description": "Метод для получения списка товаров, которые могут участвовать в акции, по её идентификатору.\n<br> \n<aside class=\"warning\">\nС 5 мая 2025 параметр пагинации <tt>offset<tt> будет отключён. Переключитесь на параметр <tt>last_id<tt>.\n</aside>\n",
          "operationId": "PromosCandidates",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiGetSellerProductV1Request"
                },
                "example": {
                  "action_id": 63337,
                  "limit": 10,
                  "offset": 0,
                  "last_id": "bnVсbA=="
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerProductV1Response"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "id": 226,
                          "price": 250,
                          "action_price": 0,
                          "max_action_price": 175,
                          "add_mode": "NOT_SET",
                          "stock": 0,
                          "min_stock": 0
                        },
                        {
                          "id": 1366,
                          "price": 2300,
                          "action_price": 630,
                          "max_action_price": 770,
                          "add_mode": "MANUAL",
                          "stock": 0,
                          "min_stock": 0
                        }
                      ],
                      "total": 2,
                      "last_id": "bnVсbA=="
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Список участвующих в акции товаров",
          "description": "Метод для получения списка товаров, участвующих в акции, по её идентификатору.\n<br> \n<aside class=\"warning\">\nС 5 мая 2025 параметр пагинации <tt>offset<tt> будет отключён. Переключитесь на параметр <tt>last_id<tt>.\n</aside>\n",
          "operationId": "PromosProducts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiGetSellerProductV1Request"
                },
                "example": {
                  "action_id": 66011,
                  "limit": 10,
                  "offset": 0,
                  "last_id": "bnVсbA=="
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerProductV1Response"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "id": 1383,
                          "price": 5503,
                          "action_price": 621,
                          "max_action_price": 3712.1,
                          "add_mode": "MANUAL",
                          "stock": 0,
                          "min_stock": 0
                        }
                      ],
                      "total": 2,
                      "last_id": "bnVсbA=="
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products/activate": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Добавить товар в акцию",
          "description": "Метод для добавления товаров в доступную акцию.",
          "operationId": "PromosProductsActivate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiActivateProductV1Request"
                },
                "example": {
                  "action_id": 60564,
                  "products": [
                    {
                      "action_price": 356,
                      "product_id": 1389,
                      "stock": 10
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар добавлен в акцию",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiProductV1Response"
                  },
                  "example": {
                    "result": {
                      "product_ids": [
                        1389
                      ],
                      "rejected": []
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products/deactivate": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Удалить товары из акции",
          "description": "Метод для удаления товаров из акции.",
          "operationId": "PromosProductsDeactivate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiProductIDsV1Request"
                },
                "example": {
                  "action_id": 66011,
                  "product_ids": [
                    14975
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товары удалены из акции",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiProductV1ResponseDeactivate"
                  },
                  "example": {
                    "result": {
                      "product_ids": [
                        14975
                      ],
                      "rejected": []
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/list": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Список заявок на скидку",
          "description": "Метод для получения списка товаров, которые покупатели хотят купить со скидкой.",
          "operationId": "promos_task_list",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDiscountTaskListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetDiscountTaskListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/approve": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Согласовать заявку на скидку",
          "description": "Вы можете согласовывать заявки в статусах: `NEW` — новые, `SEEN` — просмотренные.\n",
          "operationId": "promos_task_approve",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ApproveDiscountTasksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявки согласованы",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/decline": {
        "post": {
          "tags": [
            "Promos"
          ],
          "summary": "Отклонить заявку на скидку",
          "description": "Вы можете отклонить заявки в статусах: `NEW` — новые, `SEEN` — просмотренные.\n",
          "operationId": "promos_task_decline",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeclineDiscountTasksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявки отклонены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/competitors/list": {
        "post": {
          "summary": "Список конкурентов",
          "description": "Метод для получения списка конкурентов — продавцов с похожими товарами в других интернет-магазинах и маркетплейсах.",
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_competitors",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCompetitorsRequest"
                },
                "example": {
                  "page": 1,
                  "limit": 20
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список конкурентов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetCompetitorsResponse"
                  },
                  "example": {
                    "competitor": [
                      {
                        "competitor_name": "string",
                        "competitor_id": 0
                      }
                    ],
                    "total": 0
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/list": {
        "post": {
          "summary": "Список стратегий",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_list",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetStrategyListRequest"
                },
                "example": {
                  "page": 1,
                  "limit": 20
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список стратегий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyListResponse"
                  },
                  "example": {
                    "strategies": [
                      {
                        "strategy_id": "string",
                        "strategy_name": "string",
                        "type": "string",
                        "update_type": "string",
                        "updated_at": "string",
                        "products_count": 0,
                        "competitors_count": 0,
                        "enabled": true
                      }
                    ],
                    "total": 0
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/create": {
        "post": {
          "summary": "Создать стратегию",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreatePricingStrategyRequest"
                },
                "example": {
                  "strategy_name": "Новая стратегия",
                  "competitors": [
                    {
                      "competitor_id": 1008426,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 204,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 91,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 48,
                      "coefficient": 1
                    }
                  ],
                  "company_id": 7
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Стратегия создана",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CreatePricingStrategyResponse"
                  },
                  "example": {
                    "result": {
                      "id": "4f3a1d4c-5833-4f04-b69b-495cbc1f6f1c"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/info": {
        "post": {
          "summary": "Информация о стратегии",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_info",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest",
            "example": {
              "strategy_id": "4f3a1d4c-5833-4f04-b69b-495cbc1f6f1c"
            }
          },
          "responses": {
            "200": {
              "description": "Информация о стратегии",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyResponse"
                  },
                  "example": {
                    "result": {
                      "strategy_name": "тест1",
                      "enabled": true,
                      "update_type": "strategyItemsListChanged",
                      "type": "COMP_PRICE",
                      "competitors": [
                        {
                          "competitor_id": 204,
                          "coefficient": 1
                        },
                        {
                          "competitor_id": 1008426,
                          "coefficient": 1
                        }
                      ]
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/update": {
        "post": {
          "summary": "Обновить стратегию",
          "description": "Можно обновить все стратегии кроме системной.",
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_update",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdatePricingStrategyRequest"
                },
                "example": {
                  "strategy_id": "a3de1826-9c54-40f1-bb6d-1a9e2638b058",
                  "strategy_name": "Новая стратегия",
                  "competitors": [
                    {
                      "competitor_id": 1008426,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 204,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 91,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 48,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 45,
                      "coefficient": 1
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Стратегия обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/add": {
        "post": {
          "summary": "Добавить товары в стратегию",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_items-add",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddStrategyItemsRequest"
                },
                "example": {
                  "product_id": [
                    "29209"
                  ],
                  "strategy_id": "e29114f0-177d-4160-8d06-2bc528470dda"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ошибки при добавлении товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AddStrategyItemsResponse"
                  },
                  "example": {
                    "result": {
                      "failed_product_count": 0
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/strategy-ids-by-product-ids": {
        "post": {
          "summary": "Список идентификаторов стратегий",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_ids",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1ItemIDsRequest"
          },
          "responses": {
            "200": {
              "description": "Список идентификаторов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyIDsByItemIDsResponse"
                  },
                  "example": {
                    "result": {
                      "products_info": [
                        {
                          "product_id": 29209,
                          "strategy_id": "b7cd30e6-5667-424d-b105-fbec30a52477"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/list": {
        "post": {
          "summary": "Список товаров в стратегии",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_items-list",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest"
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyItemsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/product/info": {
        "post": {
          "summary": "Цена товара у конкурента",
          "description": "Если вы добавили товар в стратегию ценообразования, метод вернёт цену и ссылку на товар у конкурента.",
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_items-info",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetStrategyItemInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Цена товара у конкурента",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyItemInfoResponse"
                  },
                  "example": {
                    "result": {
                      "strategy_id": "string",
                      "is_enabled": true,
                      "strategy_product_price": 0,
                      "price_downloaded_at": "2022-11-17T15:33:53.936Z",
                      "strategy_competitor_id": 0,
                      "strategy_competitor_product_url": "string"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/delete": {
        "post": {
          "summary": "Удалить товары из стратегии",
          "description": null,
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_items-delete",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1ItemIDsRequest",
            "example": {
              "product_id": [
                "29209"
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Ошибки при удалении товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DeleteStrategyItemsResponse"
                  },
                  "example": {
                    "result": {
                      "failed_product_count": 0
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/status": {
        "post": {
          "summary": "Изменить статус стратегии",
          "description": "Можно изменить статус любой стратегии кроме системной.",
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_status",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateStatusStrategyRequest"
                },
                "example": {
                  "strategy_id": "c7516438-7124-4e2c-85d3-ccd92b6b9b65",
                  "enabled": true
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус стратегии изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/delete": {
        "post": {
          "summary": "Удалить стратегию",
          "description": "Можно удалить любую стратегию кроме системной.",
          "tags": [
            "PricingStrategyAPI"
          ],
          "operationId": "pricing_delete",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest",
            "example": {
              "strategy_id": "c7516438-7124-4e2c-85d3-ccd92b6b9b65"
            }
          },
          "responses": {
            "200": {
              "description": "Стратегия удалена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pass/list": {
        "post": {
          "tags": [
            "Pass"
          ],
          "summary": "Список пропусков",
          "operationId": "PassList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrivalpassArrivalPassListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список пропусков",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/arrivalpassArrivalPassListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/carriage/pass/create": {
        "post": {
          "tags": [
            "Pass"
          ],
          "summary": "Создать пропуск",
          "description": "Идентификатор созданного пропуска добавится к перевозке.",
          "operationId": "carriagePassCreate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sellerSellerAPIArrivalPassCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/sellerSellerAPIArrivalPassCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/carriage/pass/update": {
        "post": {
          "tags": [
            "Pass"
          ],
          "summary": "Обновить пропуск",
          "operationId": "carriagePassUpdate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sellerSellerAPIArrivalPassUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск обновлён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Пропуск обновлён"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/carriage/pass/delete": {
        "post": {
          "tags": [
            "Pass"
          ],
          "summary": "Удалить пропуск",
          "description": null,
          "operationId": "carriagePassDelete",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sellerSellerAPIArrivalPassDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Пропуск удалён"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/pass/create": {
        "post": {
          "tags": [
            "Pass"
          ],
          "operationId": "returnPassCreate",
          "summary": "Создать пропуск для возврата",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrivalpassArrivalPassCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/arrivalpassArrivalPassCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/pass/update": {
        "post": {
          "tags": [
            "Pass"
          ],
          "operationId": "returnPassUpdate",
          "summary": "Обновить пропуск для возврата",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrivalpassArrivalPassUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск обновлён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/pass/delete": {
        "post": {
          "tags": [
            "Pass"
          ],
          "operationId": "returnPassDelete",
          "summary": "Удалить пропуск для возврата",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrivalpassArrivalPassDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Пропуск удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/brand/company-certification/list": {
        "post": {
          "summary": "Список сертифицируемых брендов",
          "description": "Метод для получения списка брендов, для которых требуется предоставить сертификат. Ответ содержит список брендов,\nтовары которых есть в вашем личном кабинете.\n\nСписок брендов может изменяться, если Ozon получит требование от бренда предоставлять сертификат.\n",
          "operationId": "BrandAPI_BrandCompanyCertificationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/brandBrandCompanyCertificationListRequest"
                },
                "example": {
                  "page": 0,
                  "page_size": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список брендов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/brandBrandCompanyCertificationListResponse"
                  },
                  "example": {
                    "result": {
                      "brand_certification": [
                        {
                          "brand_id": 135476863,
                          "brand_name": "Sea of Spa",
                          "has_certificate": false
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BrandAPI"
          ]
        }
      },
      "/v1/product/certificate/accordance-types": {
        "get": {
          "summary": "Список типов соответствия требованиям (версия 1)",
          "operationId": "ProductAPI_ProductCertificateAccordanceTypes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Cправочник типов соответствия требованиям",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificateAccordanceTypesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "ГОСТ",
                        "value": "gost"
                      },
                      {
                        "name": "Технический регламент РФ",
                        "value": "technical_regulations_rf"
                      },
                      {
                        "name": "Технический регламент ТС",
                        "value": "technical_regulations_cu"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v2/product/certificate/accordance-types/list": {
        "get": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateAccordanceTypes",
          "summary": "Список типов соответствия требованиям (версия 2)",
          "description": null,
          "responses": {
            "200": {
              "description": "Список типов соответствия требованиям",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/types": {
        "get": {
          "summary": "Справочник типов документов",
          "operationId": "ProductAPI_ProductCertificateTypes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Справочник типов документов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificateTypesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "Сертификат соответствия",
                        "value": "certificate_of_conformity"
                      },
                      {
                        "name": "Декларация",
                        "value": "declaration"
                      },
                      {
                        "name": "Свидетельство о гос регистрации",
                        "value": "certificate_of_registration"
                      },
                      {
                        "name": "Регистрационное удостоверение",
                        "value": "registration_certificate"
                      },
                      {
                        "name": "Отказное письмо",
                        "value": "refused_letter"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v2/product/certification/list": {
        "post": {
          "summary": "Список сертифицируемых категорий",
          "operationId": "ProductAPI_ProductCertificationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ProductCertificationListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список сертифицируемых категорий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ProductCertificationListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v1/product/certification/list": {
        "post": {
          "summary": "Список сертифицируемых категорий",
          "operationId": "ProductAPI_V1ProductCertificationList",
          "description": "<aside class=\"warning\">\n14 апреля 2025 года метод будет отключён. Переключитесь на <a href=\"#operation/ProductAPI_ProductCertificationList\">/v2/product/certification/list</a>.\n</aside>\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductCertificationListRequest"
                },
                "example": {
                  "page": 1,
                  "page_size": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список сертифицируемых категорий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificationListResponse"
                  },
                  "example": {
                    "result": {
                      "certification": [
                        {
                          "is_required": true,
                          "category_name": "Витаминно-минеральные комплексы для взрослых"
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v1/product/certificate/create": {
        "post": {
          "summary": "Добавить сертификаты для товаров",
          "operationId": "ProductAPI_ProductCertificateCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "description": "Массив сертификатов для товара. Допустимые расширения jpg, jpeg, png, pdf.",
                      "type": "array",
                      "items": {
                        "type": "file"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Название сертификата. Максимум 100 символов."
                    },
                    "number": {
                      "type": "string",
                      "description": "Номер сертификата. Максимум 100 символов."
                    },
                    "type_code": {
                      "type": "string",
                      "description": "Тип сертификата. Чтобы получить доступные типы, используйте метод [GET /v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes).",
                      "enum": [
                        "certificate_of_conformity",
                        "declaration",
                        "certificate_of_registration",
                        "registration_certificate",
                        "refused_letter"
                      ]
                    },
                    "accordance_type_code": {
                      "type": "string",
                      "description": "Тип соответствия требованиям. Чтобы получить доступные типы, используйте метод [GET /v1/product/certificate/accordance-types](#operation/ProductAPI_ProductCertificateAccordanceTypes).",
                      "enum": [
                        "technical_regulations_rf",
                        "technical_regulations_cu",
                        "gost"
                      ]
                    },
                    "issue_date": {
                      "type": "string",
                      "format": "date-time",
                      "default": "2021-04-30T11:31:26Z",
                      "description": "Дата начала действия сертификата."
                    },
                    "expire_date": {
                      "description": "Дата окончания действия сертификата. Может быть пустым для бессрочных сертификатов.\n\nФормат: `2021-04-30T11:31:26Z`.\n",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "files",
                    "name",
                    "number",
                    "type_code",
                    "issue_date"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор загруженного сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "example": {
                      "id": 50058
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v1/product/certificate/bind": {
        "post": {
          "summary": "Привязать сертификат к товару",
          "operationId": "ProductAPI_ProductCertificateBind",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductCertificateBindRequest"
                },
                "example": {
                  "certificate_id": 50058,
                  "product_id": [
                    290
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Сертификат привязан к товару",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CertificationAPI"
          ]
        }
      },
      "/v1/product/certificate/delete": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateDelete",
          "summary": "Удалить сертификат",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат удаления сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateDeleteResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/info": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateInfo",
          "summary": "Информация о сертификате",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о сертификате",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/list": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateList",
          "summary": "Список сертификатов",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список сертификатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/product_status/list": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "ProductStatusList",
          "summary": "Список возможных статусов товаров",
          "description": "Метод для получения списка возможных статусов товаров при их привязке к сертификату.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateProductStatusListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список статусов товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateProductStatusListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/products/list": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateProductsList",
          "summary": "Список товаров, привязанных к сертификату",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateProductsListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateProductsListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/unbind": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateUnbind",
          "summary": "Отвязать товар от сертификата",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateUnbindRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар отвязан от сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateUnbindResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/rejection_reasons/list": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "RejectionReasonsList",
          "summary": "Возможные причины отклонения сертификата",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateRejectionReasonsListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Причины отклонения сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateRejectionReasonsListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/status/list": {
        "post": {
          "tags": [
            "CertificationAPI"
          ],
          "operationId": "CertificateStatusList",
          "summary": "Возможные статусы сертификатов",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateStatusListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Возможные статусы сертификатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateStatusListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/warehouse/list": {
        "post": {
          "summary": "Список складов",
          "description": "Метод возвращает список складов FBS и rFBS. Чтобы получить список складов FBO, используйте метод [/v1/cluster/list](#operation/SupplyDraftAPI_DraftClusterList).",
          "operationId": "WarehouseAPI_WarehouseList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Список складов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/warehouseWarehouseListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "WarehouseAPI"
          ]
        }
      },
      "/v1/delivery-method/list": {
        "post": {
          "summary": "Список методов доставки склада",
          "description": null,
          "operationId": "WarehouseAPI_DeliveryMethodList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/warehouseDeliveryMethodListRequest"
                },
                "example": {
                  "filter": {
                    "provider_id": 0,
                    "status": "",
                    "warehouse_id": 15588127982000
                  },
                  "limit": 100,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список методов склада",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/warehouseDeliveryMethodListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 15588127982000,
                        "company_id": 1,
                        "name": "Ozon Логистика курьеру, Есипово",
                        "status": "ACTIVE",
                        "cutoff": "13:00",
                        "provider_id": 24,
                        "template_id": 0,
                        "warehouse_id": 15588127982000,
                        "created_at": "2019-04-04T15:22:31.048202Z",
                        "updated_at": "2021-08-15T10:21:44.854209Z",
                        "sla_cut_in": 1440
                      }
                    ],
                    "has_next": false
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "WarehouseAPI"
          ]
        }
      },
      "/v1/polygon/create": {
        "post": {
          "summary": "Создайте полигон доставки",
          "description": "Вы можете добавить полигон к методу доставки.\n\nСоздайте полигон, получив его координаты на https://geojson.io: отметьте на карте минимум 3 точки и соедините их линиями.\n",
          "operationId": "PolygonAPI_CreatePolygon",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/polygonv1PolygonCreateRequest"
                },
                "example": {
                  "coordinates": "[[[30.149574279785153,59.86550435303646],[30.21205902099609,59.846884387977326],[30.255661010742184,59.86240174913176],[30.149574279785153,59.86550435303646]]]"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Полигон создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/polygonv1PolygonCreateResponse"
                  },
                  "example": {
                    "polygonId": "1323"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus_v1PolygonCreate"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "PolygonAPI"
          ]
        }
      },
      "/v1/polygon/bind": {
        "post": {
          "summary": "Свяжите метод доставки с полигоном доставки",
          "operationId": "PolygonAPI_BindPolygon",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/polygonv1PolygonBindRequest"
                },
                "example": {
                  "delivery_method_id": 0,
                  "polygons": [
                    {
                      "polygon_id": "1323",
                      "time": "30"
                    }
                  ],
                  "warehouse_location": {
                    "lat": "58.52391272075821",
                    "lon": "31.236791610717773"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/polygonv1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus_v1PolygonBind"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "PolygonAPI"
          ]
        }
      },
      "/v2/posting/fbo/list": {
        "post": {
          "summary": "Список отправлений",
          "description": "Возвращает список отправлений за указанный период времени.\n Если период больше года, вернётся ошибка `PERIOD_IS_TOO_LONG`.\n \n Дополнительно можно отфильтровать отправления по их статусу.\n",
          "operationId": "PostingAPI_GetFboPostingList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFboPostingListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "since": "2021-09-01T00:00:00.000Z",
                    "status": "",
                    "to": "2021-11-17T10:44:12.828Z"
                  },
                  "limit": 5,
                  "offset": 0,
                  "translit": true,
                  "with": {
                    "analytics_data": true,
                    "financial_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FboPostingListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "order_id": 354680487,
                        "order_number": "16965409-0014",
                        "posting_number": "16965409-0014-1",
                        "status": "delivered",
                        "cancel_reason_id": 0,
                        "created_at": "2021-09-01T00:23:45.607000Z",
                        "in_process_at": "2021-09-01T00:25:30.120000Z",
                        "products": [
                          {
                            "sku": 160249683,
                            "name": "Так говорил Омар Хайям. Жизнеописание. Афоризмы и рубайят. Классика в словах и картинках",
                            "quantity": 1,
                            "offer_id": "978-5-906864-56-7",
                            "price": "81.00",
                            "digital_codes": [],
                            "currency_code": "RUB"
                          }
                        ],
                        "analytics_data": {
                          "city": "",
                          "delivery_type": "PVZ",
                          "is_premium": false,
                          "payment_type_group_name": "Карты оплаты",
                          "warehouse_id": 17717042026000,
                          "warehouse_name": "РОСТОВ-НА-ДОНУ_РФЦ",
                          "is_legal": false
                        },
                        "financial_data": {
                          "products": [
                            {
                              "commission_amount": 12.15,
                              "commission_percent": 15,
                              "payout": 68.85,
                              "product_id": 160249683,
                              "currency_code": "RUB",
                              "old_price": 115,
                              "price": 81,
                              "total_discount_value": 34,
                              "total_discount_percent": 29.57,
                              "actions": [
                                "Системная виртуальная скидка селлера"
                              ],
                              "quantity": 0
                            }
                          ]
                        },
                        "additional_data": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBO"
          ]
        }
      },
      "/v2/posting/fbo/get": {
        "post": {
          "summary": "Информация об отправлении",
          "description": "Возвращает информацию об отправлении по его идентификатору.",
          "operationId": "PostingAPI_GetFboPosting",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFboPostingRequest"
                },
                "example": {
                  "posting_number": "50520644-0012-7",
                  "translit": true,
                  "with": {
                    "analytics_data": true,
                    "financial_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FboPostingResponse"
                  },
                  "example": {
                    "result": {
                      "order_id": 354679434,
                      "order_number": "50520644-0012",
                      "posting_number": "50520644-0012-7",
                      "status": "delivered",
                      "cancel_reason_id": 0,
                      "created_at": "2021-09-01T00:34:56.563Z",
                      "in_process_at": "2021-09-01T00:34:56.103Z",
                      "products": [
                        {
                          "sku": 254665483,
                          "name": "Мочалка натуральная из люфы с деревянной ручкой",
                          "quantity": 1,
                          "offer_id": "PS1033",
                          "price": "137.00",
                          "digital_codes": [],
                          "currency_code": "RUB"
                        }
                      ],
                      "analytics_data": {
                        "city": "",
                        "delivery_type": "Courier",
                        "is_premium": false,
                        "payment_type_group_name": "Карты оплаты",
                        "warehouse_id": 15431806189000,
                        "warehouse_name": "ХОРУГВИНО_РФЦ",
                        "is_legal": false
                      },
                      "financial_data": {
                        "products": [
                          {
                            "commission_amount": 13.7,
                            "commission_percent": 10,
                            "payout": 123.3,
                            "product_id": 254665483,
                            "currency_code": "RUB",
                            "old_price": 198,
                            "price": 137,
                            "total_discount_value": 61,
                            "total_discount_percent": 30.81,
                            "actions": [
                              "Системная виртуальная скидка селлера"
                            ],
                            "quantity": 0
                          }
                        ]
                      },
                      "additional_data": []
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBO"
          ]
        }
      },
      "/v1/posting/fbo/cancel-reason/list": {
        "post": {
          "summary": "Причины отмены отправлений по схеме FBO",
          "description": "Возвращает список причин отмены для всех FBO-отправлений.",
          "operationId": "PostingAPI_GetPostingFboCancelReasonList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Причины отмены отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CancelReasonListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 352,
                        "title": "Товар закончился на складе продавца",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 401,
                        "title": "Продавец отклонил арбитраж",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      },
                      {
                        "id": 402,
                        "title": "Другое (вина продавца)",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 666,
                        "title": "Возврат из службы доставки: нет доставки в указанный регион",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBO"
          ]
        }
      },
      "/v1/supply-order/status/counter": {
        "post": {
          "summary": "Количество заявок по статусам",
          "description": "Возвращает количество заявок в конкретном статусе.",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_SupplyOrderStatusCounter",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonEmpty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус заявки и количество заявок в этом статусе",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplyOrderStatusCounterResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/bundle": {
        "post": {
          "tags": [
            "FBO"
          ],
          "summary": "Состав поставки или заявки на поставку",
          "operationId": "SupplyOrderBundle",
          "description": "Используйте метод, чтобы получить товарный состав поставки или черновика заявки на поставку.\nОдним вызовом метода можно получить состав одной поставки или черновика заявки.\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrderBundleRequest"
                },
                "example": {
                  "bundle_ids": [
                    "string"
                  ],
                  "is_asc": true,
                  "item_tags_calculation": {
                    "dropoff_warehouse_id": 1020001556240000,
                    "storage_warehouse_ids": [
                      1020001556240000
                    ]
                  },
                  "limit": 0,
                  "query": "",
                  "sort_field": "UNSPECIFIED"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Состав поставки",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrderBundleResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/supply-order/list": {
        "post": {
          "summary": "Список заявок на поставку на склад Ozon",
          "description": "Учитываются заявки с поставкой на конкретный склад и через [виртуальный распределительный центр (вРЦ)](https://seller-edu.ozon.ru/fbo/scheme-of-work/about#чем-отличаются-процессы-при-заявках-через-врц-и-напрямую-на-склад).",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_GetSupplyOrdersListV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2GetSupplyOrdersListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на поставку",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2GetSupplyOrdersListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/supply-order/get": {
        "post": {
          "summary": "Информация о заявке на поставку",
          "description": "Учитываются заявки с поставкой на конкретный склад и через [виртуальный распределительный центр (вРЦ)](https://seller-edu.ozon.ru/fbo/scheme-of-work/about#чем-отличаются-процессы-при-заявках-через-врц-и-напрямую-на-склад).",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_GetSupplyOrdersV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2GetSupplyOrdersRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о заявке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2GetSupplyOrdersResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/timeslot/get": {
        "post": {
          "summary": "Интервалы поставки",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_GetSupplyOrderTimeslots",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrderTimeslotsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список интервалов поставки",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrderTimeslotsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/timeslot/update": {
        "post": {
          "summary": "Обновить интервал поставки",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_UpdateSupplyOrderTimeslot",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateSupplyOrderTimeslotRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Интервал обновлён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1UpdateSupplyOrderTimeslotResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/timeslot/status": {
        "post": {
          "summary": "Статус интервала поставки",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_GetSupplyOrderTimeslotStatus",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrderTimeslotStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус данных",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrderTimeslotStatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/pass/create": {
        "post": {
          "summary": "Указать данные о водителе и автомобиле",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_SupplyOrderPassCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SupplyOrderPassCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные указаны",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplyOrderPassCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/pass/status": {
        "post": {
          "summary": "Статус ввода данных о водителе и автомобиле",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplyOrderAPI_SupplyOrderPassStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SupplyOrderPassStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplyOrderPassStatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supplier/available_warehouses": {
        "get": {
          "summary": "Загруженность складов Ozon",
          "description": "Метод возвращает список активных складов Ozon с информацией об их средней загруженности на ближайшее время.",
          "tags": [
            "FBO"
          ],
          "operationId": "SupplierAPI_SupplierAvailableWarehouses",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Информация о загруженности складов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplierAvailableWarehousesResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/cluster/list": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftClusterList",
          "summary": "Информация о кластерах и их складах",
          "description": "",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftClusterListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о кластерах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftClusterListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/warehouse/fbo/list": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftGetWarehouseFboList",
          "summary": "Поиск точек для отгрузки поставки",
          "description": "Используйте метод, чтобы найти сортировочное центры, пункты выдачи или приёма заказов, доступные для кросс-докинга\nи прямых поставок.\n\nВы можете посмотреть адреса всех точек на карте и в виде таблицы в [Базе знаний](https://seller-edu.ozon.ru/fbo/warehouses/adresa-skladov-fbo).\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftGetWarehouseFboListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о складах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftGetWarehouseFboListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/draft/create": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftCreate",
          "summary": "Создать черновик заявки на поставку",
          "description": "Создать черновик заявки на поставку — прямой или кросс-докинг, а также указать поставляемые товары.\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Черновик заявки создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/draft/create/info": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftCreateInfo",
          "summary": "Информация о черновике заявки на поставку",
          "description": "",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftCreateInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о черновике заявки на поставку",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftCreateInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/draft/timeslot/info": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftTimeslotInfo",
          "summary": "Доступные таймслоты",
          "description": "Доступные таймслоты на конечных складах отгрузки.\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftTimeslotInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Таймслоты",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftTimeslotInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/draft/supply/create": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftSupplyCreate",
          "summary": "Создать заявку на поставку по черновику",
          "description": "",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftSupplyCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка создана",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftSupplyCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/draft/supply/create/status": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "operationId": "SupplyDraftAPI_DraftSupplyCreateStatus",
          "summary": "Информация о создании заявки на поставку",
          "description": "",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DraftSupplyCreateStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о создании заявки на поставку",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DraftSupplyCreateStatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/cargoes/create": {
        "post": {
          "summary": "Установка грузомест",
          "description": "Используйте метод, чтобы передать грузоместа и товарный состав в заявку на поставку.\n",
          "operationId": "CargoesAPI_CargoesCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CargoesCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Грузоместа установлены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CargoesCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FboSupplyRequest"
          ]
        }
      },
      "/v1/cargoes/create/info": {
        "post": {
          "summary": "Получить информацию по установке грузомест",
          "description": "Используйте метод, чтобы получить информацию по установленным грузоместам.\n",
          "operationId": "CargoesAPI_CargoesCreateInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CargoesCreateInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CargoesCreateInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FboSupplyRequest"
          ]
        }
      },
      "/v1/cargoes-label/create": {
        "post": {
          "summary": "Сгенерировать этикетки для грузомест",
          "description": "Используйте метод, чтобы сгенерировать этикетки для грузомест из заявки на поставку.\n",
          "operationId": "CargoesAPI_CargoesLabelCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CargoesLabelCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CargoesLabelCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FboSupplyRequest"
          ]
        }
      },
      "/v1/cargoes-label/get": {
        "post": {
          "summary": "Получить идентификатор этикетки для грузомест",
          "description": "Используйте метод, чтобы получить статус формирования этикеток и идентификатор файла с ними.\n",
          "operationId": "CargoesAPI_CargoesLabelGet",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CargoesLabelGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Этикетка для грузомест",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CargoesLabelGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FboSupplyRequest"
          ]
        }
      },
      "/v1/cargoes-label/file/{file_guid}": {
        "get": {
          "summary": "Получить PDF с этикетками грузовых мест",
          "description": "",
          "operationId": "CargoesAPI_CargoesLabelFile",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Этикетки грузовых мест"
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FboSupplyRequest"
          ]
        }
      },
      "/v1/supply-order/cancel": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "summary": "Отменить заявку на поставку",
          "description": null,
          "operationId": "SupplyOrderAPI_SupplyOrderCancel",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SupplyOrderCancelRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отмена заявки на поставку в процессе",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplyOrderCancelResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/cancel/status": {
        "post": {
          "tags": [
            "FboSupplyRequest"
          ],
          "summary": "Получить статус отмены заявки на поставку",
          "description": null,
          "operationId": "SupplyOrderAPI_SupplyOrderCancelStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SupplyOrderCancelStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус отмены заявки на поставку",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SupplyOrderCancelStatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v5/fbs/posting/product/exemplar/create-or-get": {
        "post": {
          "tags": [
            "FBS&rFBSMarks"
          ],
          "summary": "Получить информацию об экземплярах",
          "description": "Метод для получения информации по экземплярам товаров из отправления.\nИспользуйте метод для получения `exemplar_id`.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarCreateOrGet",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v5FbsPostingProductExemplarCreateOrGetV5Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные экземпляров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v5FbsPostingProductExemplarCreateOrGetV5Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v4/fbs/posting/product/exemplar/validate": {
        "post": {
          "summary": "Валидация кодов маркировки",
          "description": "Метод для проверки кодов на соответствие требованиям по количеству и составу символов.<br>\n[Подробнее об ошибках в Базе знаний продавца](https://seller-edu.ozon.ru/fbs/ozon-logistika/markirovka#какие-могут-возникать-ошибки-при-проверке-кода-маркировки)\n\nЕсли у вас нет номера грузовой таможенной декларации (ГТД), вы можете его не указывать.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarValidate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2",
                  "products": [
                    {
                      "exemplars": [
                        {
                          "gtd": "",
                          "mandatory_mark": "010290000151642731tVMohkbfFgunB",
                          "jw_uin": ""
                        }
                      ],
                      "product_id": 476925391
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат валидации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateResponse"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "product_id": 476925391,
                          "exemplars": [
                            {
                              "mandatory_mark": "010290000151642731tVMohkbfFgunB",
                              "jw_uin": "",
                              "gtd": "",
                              "valid": true,
                              "errors": []
                            }
                          ],
                          "valid": true,
                          "error": ""
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v4/fbs/posting/product/exemplar/set": {
        "post": {
          "summary": "Проверить и сохранить данные экземпляров",
          "description": "\n<aside class=\"warning\">\n  В будущем метод будет отключён. Мы предупредим вас об этом за месяц в <a href=\"https://dev.ozon.ru/\">сообществе Ozon for Dev</a> и <a href=\"https://t.me/OZON_int\">чате для разработчиков</a>.\n\n  Переключитесь на <a href=\"#operation/PostingAPI_FbsPostingProductExemplarSet\">/v5/fbs/posting/product/exemplar/set</a>.\n</aside>\n\nАсинхронный метод:\n- для проверки наличия экземпляров в обороте в системе «Честный ЗНАК»;\n- для сохранения данных экземпляров. \n\nЧтобы получить результаты проверок, используйте метод [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\nПри необходимости укажите номер грузовой таможенной декларации в параметре `gtd`. Если его нет, передайте значение `is_gtd_absent = true`.\n\nЕсли у вас несколько одинаковых товаров в отправлении, укажите один `product_id` и массив `exemplars` для каждого товара из отправления.\n\nВсегда передавайте полный набор данных по экземплярам и продуктам. \n\nНапример, в вашей системе 10 экземпляров. Вы передали их для проверки и сохранения. Потом добавили в своей системе ещё 60 экземпляров.\nПри повторной передаче экземпляров для проверки и сохранения укажите все экземпляры: и старые, и только что добавленные.\n",
          "operationId": "PostingAPI_SetProductExemplar",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4SetProductExemplarRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2",
                  "products": [
                    {
                      "exemplars": [
                        {
                          "gtd": "",
                          "is_gtd_absent": true,
                          "jw_uin": "",
                          "mandatory_mark": "010290000151642731tVMohkbfFgunB"
                        }
                      ],
                      "product_id": 476925391
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Запрос обработан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4SetProductExemplarResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v5/fbs/posting/product/exemplar/set": {
        "post": {
          "tags": [
            "FBS&rFBSMarks"
          ],
          "summary": "Проверить и сохранить данные экземпляров (версия 5)",
          "description": "Асинхронный метод:\n- для проверки наличия экземпляров в обороте в системе «Честный ЗНАК»;\n- для сохранения данных экземпляров. \n\nИспользуйте метод только для отправлений в статусе `awaiting_packaging`, иначе вы получите ошибку `INVALID_POSTING_STATE`.\n\nЧтобы получить результаты проверок, используйте метод [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus). \nДля получения данных о созданных экземплярах, используйте метод [/v5/fbs/posting/product/exemplar/create-or-get](#operation/PostingAPI_FbsPostingProductExemplarCreateOrGet).\n\nПри необходимости укажите номер грузовой таможенной декларации в параметре `gtd`. \nЕсли его нет, передайте значение `is_gtd_absent = true`.\n\nЕсли у вас несколько одинаковых товаров в отправлении, укажите один `product_id` и массив `exemplars` для каждого товара из отправления.\n\nВсегда передавайте полный набор данных по экземплярам и продуктам. \n\nНапример, в вашей системе 10 экземпляров. \nВы передали их для проверки и сохранения. \nПотом добавили в своей системе ещё 60 экземпляров.\nПри повторной передаче экземпляров для проверки и сохранения укажите все экземпляры: и старые, и только что добавленные.\n\nОтличие от [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar) — вы можете передать в запросе больше информации по экземплярам.\n\nКод ответа 200 не гарантирует, что данные об экземплярах приняты. \nОн указывает, что создана задача для добавления информации. \nЧтобы проверить статус задачи, используйте метод [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarSet",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v5FbsPostingProductExemplarSetV5Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Запрос обработан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v5FbsPostingProductExemplarSetV5Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v4/fbs/posting/product/exemplar/status": {
        "post": {
          "summary": "Получить статус добавления экземпляров",
          "description": "Метод для получения статусов добавления экземпляров, переданных в методе [/v5/fbs/posting/product/exemplar/set](#operation/PostingAPI_FbsPostingProductExemplarSet). \nТакже возвращает данные по этим экземплярам. \n",
          "operationId": "PostingAPI_GetProductExemplarStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статусы проверки экземпляров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponse"
                  },
                  "example": {
                    "posting_number": "23281294-0063-2",
                    "products": [
                      {
                        "exemplars": [
                          {
                            "exemplar_id": "",
                            "gtd": "",
                            "gtd_check_status": "passed",
                            "gtd_error_codes": [],
                            "is_gtd_absent": true,
                            "is_rnpt_absent": true,
                            "jw_uin": "",
                            "jw_uin_check_status": "passed",
                            "jw_uin_error_codes": [],
                            "mandatory_mark": "010290000151642731tVMohkbfFgunB",
                            "mandatory_mark_check_status": "passed",
                            "mandatory_mark_error_codes": [],
                            "rnpt": "",
                            "rnpt_check_status": "passed",
                            "rnpt_error_codes": []
                          }
                        ],
                        "product_id": 476925391
                      }
                    ],
                    "status": "ship_available"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v4/posting/fbs/ship": {
        "post": {
          "tags": [
            "FBS&rFBSMarks"
          ],
          "summary": "Собрать заказ (версия 4)",
          "description": "Делит заказ на отправления и переводит его в статус `awaiting_deliver`.\n\nКаждый элемент в `packages` может содержать несколько элементов `products` или отправлений. \nКаждый элемент в `products` — это товар, включённый в данное отправление.\n\nРазделить заказ нужно, если:\n  - товары не помещаются в одну упаковку,\n  - товары нельзя сложить в одну упаковку.\n  \nЧтобы разделить заказ, передайте в массиве `packages` несколько объектов.\n\nПример запроса, когда заказ разделять не нужно: 2 товара будут в одном отправлении.\n```\n{\n  \"packages\": [\n    {\n      \"products\": [\n        {\n          \"product_id\": 185479045,\n          \"quantity\": 2\n        }\n      ]\n    }\n  ],\n  \"posting_number\": \"89491381-0072-1\"\n}\n```\n\nПример запроса, когда заказ нужно разделить: каждый товар будет в отдельном отправлении.\n\n```\n{\n  \"packages\": [\n    {\n      \"products\": [\n        {\n          \"product_id\": 185479045,\n          \"quantity\": 1\n        }\n      ]\n    },\n    {\n      \"products\": [\n        {\n          \"product_id\": 185479045,\n          \"quantity\": 1\n        }\n      ]\n    }\n  ],\n  \"posting_number\": \"89491381-0072-1\"\n}    \n```  \n\nЧтобы внести информацию по экземплярам, используйте метод [/v5/fbs/posting/product/exemplar/set](#operation/PostingAPI_FbsPostingProductExemplarSet).\n",
          "operationId": "PostingAPI_ShipFbsPostingV4",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4FbsPostingShipV4Request"
                },
                "example": {
                  "packages": [
                    {
                      "products": [
                        {
                          "product_id": 185479045,
                          "quantity": 1
                        }
                      ]
                    }
                  ],
                  "posting_number": "89491381-0072-1",
                  "with": {
                    "additional_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заказ собран",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4FbsPostingShipV4Response"
                  },
                  "example": {
                    "additional_data": [
                      {
                        "posting_number": "89491381-0072-1",
                        "products": [
                          {
                            "currency_code": "RUB",
                            "mandatory_mark": [
                              "123"
                            ],
                            "name": "string",
                            "offer_id": "17125",
                            "price": "2000",
                            "quantity": 1,
                            "sku": 149618972
                          }
                        ]
                      }
                    ],
                    "result": [
                      "89491381-0072-1"
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v4/posting/fbs/ship/package": {
        "post": {
          "tags": [
            "FBS&rFBSMarks"
          ],
          "summary": "Частичная сборка отправления (версия 4)",
          "description": "Если в запросе передать часть товаров из отправления, метод разделит первичное отправление на две части. \nВ первичном несобранном отправлении останется часть товаров, которую не передали в запросе.\n\nПо умолчанию статус созданных отправлений `awaiting_packaging` — ожидает сборки.\n\nСтатус изначального отправления изменится только после изменения статуса отправлений, на которые он разделился.\n",
          "operationId": "PostingAPI_ShipFbsPostingPackage",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v4FbsPostingShipPackageV4Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отправление собрано",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v4FbsPostingShipPackageV4Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v6/fbs/posting/product/exemplar/set": {
        "post": {
          "summary": "Проверить и сохранить данные экземпляров",
          "description": "Асинхронный метод:\n- для проверки наличия экземпляров в обороте в системе «Честный ЗНАК»;\n- для сохранения данных экземпляров. \n\nЧтобы получить результаты проверок, используйте метод [/v5/fbs/posting/product/exemplar/status](#operation/PostingAPI_FbsPostingProductExemplarStatusV5). \nДля получения данных о созданных экземплярах, используйте метод [/v6/fbs/posting/product/exemplar/create-or-get](#operation/PostingAPI_FbsPostingProductExemplarCreateOrGetV6).\n\nЕсли у вас несколько одинаковых товаров в отправлении, укажите один `product_id` и массив `exemplars` для каждого товара из отправления.\n\nВсегда передавайте полный набор данных по экземплярам и продуктам. \n\nНапример, в вашей системе 10 экземпляров. \nВы передали их для проверки и сохранения. \nПотом добавили в своей системе ещё 60 экземпляров.\nПри повторной передаче экземпляров для проверки и сохранения укажите все экземпляры: и старые, и только что добавленные.\n\nКод ответа 200 не гарантирует, что данные об экземплярах приняты. \nОн указывает, что создана задача для добавления информации. \nЧтобы проверить статус задачи, используйте метод [/v5/fbs/posting/product/exemplar/status](#operation/PostingAPI_FbsPostingProductExemplarStatusV5).\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarSetV6",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v6FbsPostingProductExemplarSetV6Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Запрос обработан"
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v6/fbs/posting/product/exemplar/create-or-get": {
        "post": {
          "summary": "Получить данные созданных экземпляров",
          "description": "Метод для получения информации по экземплярам товаров из отправления, переданных в методе [/v6/fbs/posting/product/exemplar/set](#operation/PostingAPI_FbsPostingProductExemplarSetV6).\n\nИспользуйте метод для получения `exemplar_id`.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarCreateOrGetV6",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v6FbsPostingProductExemplarCreateOrGetV6Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные экземпляров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v6FbsPostingProductExemplarCreateOrGetV6Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v5/fbs/posting/product/exemplar/status": {
        "post": {
          "summary": "Получить статус добавления экземпляров",
          "description": "Метод для получения статусов добавления экземпляров, переданных в методе [/v6/fbs/posting/product/exemplar/set](PostingAPI_FbsPostingProductExemplarSetV6). Также возвращает данные по этим экземплярам.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarStatusV5",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v5FbsPostingProductExemplarStatusV5Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статусы проверки экземпляров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v5FbsPostingProductExemplarStatusV5Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v5/fbs/posting/product/exemplar/validate": {
        "post": {
          "summary": "Валидация кодов маркировки",
          "description": "Метод для проверки кодов на соответствие требованиям системы «Честный ЗНАК» по количеству и составу символов.\n\nЕсли у вас нет номера грузовой таможенной декларации (ГТД), вы можете его не указывать.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarValidateV5",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат валидации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v5FbsPostingProductExemplarValidateV5Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v1/fbs/posting/product/exemplar/update": {
        "post": {
          "summary": "Обновить данные экземпляров",
          "description": "Используйте метод после передачи информации по экземплярам методом [/v6/fbs/posting/product/exemplar/set](#operation/PostingAPI_FbsPostingProductExemplarSetV6), чтобы сохранить обновлённые данные по экземплярам для отправлений в статусе «Ожидает отгрузки».\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarUpdate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1FbsPostingProductExemplarUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные обновлены"
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS&rFBSMarks"
          ]
        }
      },
      "/v1/carriage/create": {
        "post": {
          "summary": "Создание отгрузки",
          "description": "\nИспользуйте метод для создания первой FBS отгрузки. В неё попадут все отправления со статусом «Готов к отгрузке». Созданная отгрузка получит статус `new`.\n\nДля отгрузки в статусе `new` можно перезаписать состав отправлений методом [/v1/carriage/set-postings](#operation/CarriageAPI_SetPostings). Если из отгрузки исключить часть отправлений, они могут попасть в следующую отгрузку. \n\nЧтобы получить список отправлений в отгрузке, используйте метод [/v2/posting/fbs/act/get-postings](#operation/PostingAPI_ActPostingList).\n",
          "operationId": "CarriageAPI_CarriageCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CarriageCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отгрузке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CarriageCreateResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v1/carriage/approve": {
        "post": {
          "summary": "Подтверждение отгрузки",
          "description": "\nИспользуйте метод, чтобы подтвердить отгрузку после её создания.\nПосле подтверждения отгрузка перейдёт в статус «Сформирована».\n\nПосле подтверждения отгрузки вы можете получить лист отгрузки методом [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct) и штрихкод отгрузки методом [/v2/posting/fbs/act/get-barcode](#operation/PostingAPI_PostingFBSGetBarcode). \n",
          "operationId": "CarriageAPI_CarriageApprove",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CarriageApproveRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отгрузка подтверждена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CarriageApproveResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v1/carriage/delivery/list": {
        "post": {
          "summary": "Список методов доставки и отгрузок",
          "description": "\nИспользуйте метод, чтобы получить список созданных отгрузок для метода доставки и их статусы.    \n",
          "operationId": "CarriageAPI_CarriageDeliveryList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CarriageDeliveryListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список методов и отгрузок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CarriageDeliveryListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v2/posting/fbs/act/create": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Подтвердить отгрузку и создать документы",
          "description": "Подтверждает отгрузку и запускает формирование транспортной накладной и штрихкода для отгрузки.\nДля продавцов из России также запускается формирование листа отгрузки, а для продавцов из СНГ — акта приёма-передачи.\n\nЧтобы сформировать и получить документы, переведите отправление в статус `awaiting_deliver`.\n",
          "operationId": "PostingAPI_PostingFBSActCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActCreateRequest"
                },
                "example": {
                  "containers_count": 1,
                  "delivery_method_id": 230039077005,
                  "departure_date": "2022-06-10T11:42:06.444Z"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отгрузка подтверждена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActCreateResponse"
                  },
                  "example": {
                    "result": {
                      "id": 5819327210249
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/carriage-available/list": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Список доступных перевозок",
          "description": "Метод для получения перевозок, по которым нужно распечатать штрихкод для отгрузки и документы:\n- для продацов из России — лист отгрузки и транспортную накладную;\n- для продавцов из СНГ — акт и транспортную накладную.\n",
          "operationId": "PostingAPI_GetCarriageAvailableList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv1GetCarriageAvailableListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список перевозок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv1GetCarriageAvailableListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/carriage/get": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Информация о перевозке",
          "operationId": "CarriageGet",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/carriageCarriageGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о перевозке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/carriageCarriageGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/fbs/split": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "operationId": "FbsSplit",
          "summary": "Разделить заказ на отправления без сборки",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1PostingFbsSplitRequest"
          },
          "responses": {
            "200": {
              "description": "Заказ разделён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFbsSplitResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/act/get-postings": {
        "post": {
          "summary": "Список отправлений в акте",
          "description": "Возвращает список отправлений в акте по его идентификатору.",
          "operationId": "PostingAPI_ActPostingList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSActGetPostingsRequest"
                },
                "example": {
                  "id": 900000250859000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSActGetPostingsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v2/posting/fbs/act/get-container-labels": {
        "post": {
          "summary": "Этикетки для грузового места",
          "description": "Метод создает этикетки для грузового места.",
          "operationId": "PostingAPI_PostingFBSActGetContainerLabels",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActGetContainerLabelsRequest"
                },
                "example": {
                  "id": 295662811
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Этикетки для грузового места",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActGetContainerLabelsResponse"
                  },
                  "example": {
                    "content_type": "application/pdf",
                    "file_name": "carriage-containers-20903594.pdf",
                    "file_content": "%PDF-1.4\n%âãÏÓ\n2 0 obj\n<</Length 2992/Filter/FlateDecode>>stream\nxµ}[ێ\u001c·\u0011}¯èç\u0000¦Èb\u0015/ @»+\u0019y0Ë\u0002ù\u0000%q\u0010X\u0001ìü?Ãn²ÉéfÍì(ò®\u001duMÝ/<Å\u0019\u001bòyýY,0Ã?=[ccyýåëå×K¡§\u000bAÂâ؉x\u001dßþqùÛ\u001fÿà-dp¢UÔø\u001aün)¿ùqÙ^üöóåݏùù¿«X¶i\t²JúçåÏøýõÙ$Gxn²\u0011&\u000f¥ÉCj¾§2aæºr&^,~hI²)F¤ù7¥íu£:oÊ\u0013Ùȹ0ûLdB\u001a\u0018y§xk;ë<^Lv)%¼)í\u0014öcyóÎX:\u0018ÚõIXå\u0015\u0013╏\rõɌ5dýÆ\u0016Ê!6Ñpys\u001aÄXYÃ1Ô\r:H©(%U´³bR"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v2/posting/fbs/act/get-barcode": {
        "post": {
          "summary": "Штрихкод для отгрузки отправления",
          "description": "Метод для получения штрихкода, который нужно показать в пункте выдачи или сортировочном центре при отгрузке отправления.",
          "operationId": "PostingAPI_PostingFBSGetBarcode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSGetBarcodeRequest"
                },
                "example": {
                  "id": "295662811"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Штрихкод для отправления",
              "content": {
                "image/png": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSGetBarcodeResponse"
                  },
                  "example": {
                    "content_type": "image/png",
                    "file_name": "20913984_barcode.png",
                    "file_content": "PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0003\u0010\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000íZ\u000e'\u0000\u0000\u0002pIDATxìÕÁJ\u00031\u0014@Q+þÿ/×E\u0017\u000e¼\u0010u¡-ç¬$£Éˌp?î÷·§t» }ýü¸Ãcåz¹2wOWû\\Ϛ뫧×Ùö;ì|rÇýßîç¼úî{§¬N?í7oìv¸®µ¹Ãùû¹¾ÿÏ9ÿî?a¸ºéê7O&߿É9çÉ\u000eÏáý¯\u0007\u0000à\u0012\b\u0000@\u0000\u0004\u0002$\u0010\u0000$\u0000 \t\u0004\u0000I \u0000H\u0002\u0001@\u0012\b\u0000@\u0000\u0004\u0002$\u0010\u0000$\u0000 \t\u0004\u0000I \u0000H\u0002\u0001@\u0012\b\u0000@\u0000\u0004\u0002$\u0010\u0000$\u0000 \t\u0004\u0000I \u0000H\u0002\u0001@\u0012\b\u0000@\u0000\u0004\u0002$\u0010\u0000$\u0000 \t\u0004\u0000I \u0000H\u0002\u0001@\u0012\b\u0000@\u0000\u0004\u0002$\u0010\u0000"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "DeliveryFBS"
          ]
        }
      },
      "/v2/posting/fbs/act/get-barcode/text": {
        "post": {
          "summary": "Значение штрихкода для отгрузки отправления",
          "description": "Используйте этот метод, чтобы получить штрихкод из ответа\n[/v2/posting/fbs/act/get-barcode](#operation/PostingAPI_PostingFBSGetBarcode) в текстовом виде.\n",
          "tags": [
            "DeliveryFBS"
          ],
          "operationId": "PostingAPI_PostingFBSGetBarcodeText",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSGetBarcodeRequest"
                },
                "example": {
                  "id": "295662811"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Значение штрихкода",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSGetBarcodeTextResponse"
                  },
                  "example": {
                    "result": "%303%24276481394"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/digital/act/check-status": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Статус формирования накладной",
          "operationId": "PostingAPI_PostingFBSDigitalActCheckStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSDigitalActCheckStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус формирования накладной",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSDigitalActCheckStatusResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/act/get-pdf": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Получить PDF c документами",
          "description": "С помощью метода можно получить:\n- продацам из России — лист отгрузки и транспортную накладную;\n- продавцам из СНГ — акт и транспортную накладную.\n",
          "operationId": "PostingAPI_PostingFBSGetAct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSGetActRequest"
                },
                "example": {
                  "id": 22435521842000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Документы",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSGetActResponse"
                  },
                  "example": {
                    "content_type": "application/pdf",
                    "file_name": "20928233.pdf",
                    "file_content": "%PDF-1.4\n%âãÏÓ\n2 0 obj\n<</Length 13528/Filter/FlateDecode>>stream\nxí }[ ¯ä:vÞ{ ÿz\u000e{ { { }\\\\x1d\\\\xde/\\\\xc0{ } } } ]µw\u000fò` 9ój8ö\u0000í$¶\u0003ä燔Dº|\"µo ]ÝØ})D\\\\÷õNHßÿº°ðûoºì¿NñÎsïÝå\u001fþõÇÿù\u0011¯\u000be}ǍÑ\u0017©í¤4âòïÿøãïþËåßÂ7dÇ\u0014÷BðþYËÿGðKüýßÿt\u0019þñïýñ۟äå¯ÿÑ?Ùq}\u0011Éø¸ê?añ«Ã?ú¯ªøÕN_\r8®.9\u0013¿þ\u001fáÜ]ò?íÛ\u000fç\u0011½Há/V°ø\"qÄø«O\\G\u000bµþDëõ'έ>ñ|}ëïpÆÅæ#³\u0018?ܣDxM>èT?¹ìÏ8ï͇aÞ×ßüöß.øÃo{û¯¯"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/act/list": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Список актов по отгрузкам",
          "description": "Возвращает список актов по отгрузкам с возможностью отфильтровать отгрузки по периоду, статусу и типу интеграции.",
          "operationId": "PostingAPI_FbsActList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSActListRequest"
                },
                "example": {
                  "filter": {
                    "date_from": "2021-08-04",
                    "date_to": "2022-08-04",
                    "integration_type": "ozon",
                    "status": [
                      "delivered"
                    ]
                  },
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список актов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSActListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/digital/act/get-pdf": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Получить лист отгрузки по перевозке",
          "description": "Вы можете получить документы, если в ответе метода [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) был один из статусов:\n- `FORMED` — перевозка сформирована успешно,\n- `CONFIRMED` — перевозка подтверждена Ozon,\n- `CONFIRMED_WITH_MISMATCH` — перевозка принята Ozon с расхождениями.\n",
          "operationId": "PostingAPI_PostingFBSGetDigitalAct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSGetDigitalActRequest"
                },
                "example": {
                  "id": 900000250859000,
                  "doc_type": "act_of_acceptance"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Файл с документом",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSGetDigitalActResponse"
                  },
                  "example": {
                    "content_type": "application/pdf",
                    "file_name": "20816409_act_of_mismatch.pdf",
                    "file_content": "%PDF-1.4\n%ÓôÌá\n1 0 obj\n<<\n/Creator(Chromium)\n/Producer(PDFsharp 1.50.5147 \\([www.pdfsharp.com|http://www.pdfsharp.com/]\\) \\(Original: Skia/PDF m103\\))\n/CreationDate(D:20230625092529+00'00')\n/ModDate(D:20230625092529+00'00')\n>>\nendobj\n2 0 obj\n<<\n/Type/Page\n/Resources\n<<\n/ProcSet[/PDF/Text/ImageB/ImageC/ImageI]\n/ExtGState\n<<\n/G3 3 0 R\n/G8 8 0 R\n>>\n/XObject\n<<\n/X6 6 0 R\n/X7 7 0 R\n>>\n/Font\n<<\n/F4 4 0 R\n/F5 5 0 R\n>>\n>>\n/MediaBox[0 0 594.96 841.92]\n/Contents 9 0 R\n/StructParents 0\n/Parent 13 0 R\n/Group\n<<\n/CS/DeviceRGB\n/S/Transparency\n>>\n>>\nendobj\n3 0 obj\n<<\n/ca 1\n/BM/Normal\n>>\nendobj\n4 0 obj\n<<\n/Type/Font\n/Subtype/Type0\n/BaseFont/AAAAAA+LiberationSans\n/Encoding/Identity-H\n/DescendantFonts[160 0 R]\n/ToUnicode 161 0 R\n>>\nendobj\n5 0 obj\n<<\n/Type/Font\n/Subtype/Type0\n/BaseFont/BAAAAA+LiberationSans-Bold\n/Encoding/Identity-H\n/DescendantFonts[164 0"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/act/check-status": {
        "post": {
          "tags": [
            "DeliveryFBS"
          ],
          "summary": "Статус отгрузки и документов",
          "description": "Возвращает статус формирования штрихкода для отгрузки и документов:\n- для продавцов из России — транспортной накладной и листа отгрузки;\n- для продавцов из СНГ — транспортной накладной и акта приёма-передачи.\n",
          "operationId": "PostingAPI_PostingFBSActCheckStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActCheckStatusRequest"
                },
                "example": {
                  "id": 900000250859000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус отгрузки и документов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActCheckStatusResponse"
                  },
                  "example": {
                    "result": {
                      "added_to_act": [
                        "true"
                      ],
                      "removed_from_act": [
                        "false"
                      ],
                      "status": "ready"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/fbs/posting/tracking-number/set": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Добавить трек-номера",
          "description": "Добавить трек-номера к отправлениям. Вы можете передать до 20 трек-номеров за раз.",
          "operationId": "PostingAPI_FbsPostingTrackingNumberSet",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingTrackingNumberSetRequest"
                },
                "example": {
                  "tracking_numbers": [
                    {
                      "posting_number": "48173252-0033-2",
                      "tracking_number": "123123123"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Трек-номер добавлен",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": "",
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/fbs/posting/sent-by-seller": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Изменить статус на «Отправлено продавцом»",
          "description": "Перевести отправление в статус «Отправлено продавцом». Статус доступен только продавцам с первой милей, продающим из-за рубежа.",
          "operationId": "PostingAPI_FbsPostingSentbyseller",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingSentbysellerRequest"
                },
                "example": {
                  "posting_number": [
                    "47173252-0073-1"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingSentbysellerResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": null,
                        "posting_number": "47173252-0073-1",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/fbs/posting/delivering": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Изменить статус на «Доставляется»",
          "description": "Перевести отправление в статус «Доставляется», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingDelivering",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingDeliveringRequest"
                },
                "example": {
                  "posting_number": [
                    "33920157-0018-1"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "33920157-0018-1",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/fbs/posting/last-mile": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Изменить статус на «Последняя миля»",
          "description": "Перевести отправление в статус «Последняя миля», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingLastMile",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingLastMileRequest"
                },
                "example": {
                  "posting_number": [
                    "48173252-0033-2"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid parameter",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Access denied",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Response not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Request conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/fbs/posting/delivered": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Изменить статус на «Доставлено»",
          "description": "Перевести отправление в статус «Доставлено», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingDelivered",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingDeliveredRequest"
                },
                "example": {
                  "posting_number": [
                    "48173252-0033-2"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/fbs/timeslot/change-restrictions": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Доступные даты для переноса доставки",
          "description": "Метод для получения доступных дат для переноса доставки и количества доступных переносов.\n",
          "operationId": "PostingAPI_PostingTimeslotChangeRestrictions",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Доступные даты и количество",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsResponse"
                  },
                  "example": {
                    "delivery_interval": {
                      "begin": "2023-03-27T08:43:05.658Z",
                      "end": "2023-03-27T08:43:05.658Z"
                    },
                    "remaining_changes_count": 0
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/fbs/timeslot/set": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Перенести дату доставки",
          "description": "Вы можете изменить дату доставки отправления не больше двух раз.\n",
          "operationId": "PostingAPI_SetPostingTimeslot",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingFbsTimeslotSetRequest"
                },
                "example": {
                  "new_timeslot": {
                    "from": "2023-03-25T08:51:56.932Z",
                    "to": "2023-03-25T08:51:56.932Z"
                  },
                  "posting_number": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFbsTimeslotSetResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/cutoff/set": {
        "post": {
          "tags": [
            "DeliveryrFBS"
          ],
          "summary": "Уточнить дату отгрузки отправления",
          "description": "Метод для отправлений, которые доставляет продавец или неинтегрированный перевозчик.\n",
          "operationId": "PostingAPI_SetPostingCutoff",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetPostingCutoffRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат уточнения даты",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SetPostingCutoffResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/posting/fbs/unfulfilled/list": {
        "post": {
          "summary": "Список необработанных отправлений (версия 3)",
          "description": "Возвращает список необработанных отправлений за указанный период времени — он должен быть не больше одного года.\n\nВозможные статусы отправлений:\n- `awaiting_registration` — ожидает регистрации,\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `cancelled` — отменено,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n\nЧтобы получать актуальную дату отгрузки, регулярно обновляйте информацию об отправлениях или подключите [пуш-уведомления](#tag/push_start).\n",
          "operationId": "PostingAPI_GetFbsPostingUnfulfilledList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "cutoff_from": "2021-08-24T14:15:22Z",
                    "cutoff_to": "2021-08-31T14:15:22Z",
                    "delivery_method_id": [],
                    "is_quantum": false,
                    "provider_id": [],
                    "status": "awaiting_packaging",
                    "warehouse_id": []
                  },
                  "limit": 100,
                  "offset": 0,
                  "with": {
                    "analytics_data": true,
                    "barcodes": true,
                    "financial_data": true,
                    "translit": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список необработанных отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListResponse"
                  },
                  "example": {
                    "result": {
                      "postings": [
                        {
                          "posting_number": "23713478-0018-3",
                          "order_id": 559293114,
                          "order_number": "33713378-0051",
                          "pickup_code_verified_at": "2025-01-17T11:03:00.124Z",
                          "status": "awaiting_packaging",
                          "delivery_method": {
                            "id": 15110442724000,
                            "name": "Ozon Логистика курьеру, Москва",
                            "warehouse_id": 15110442724000,
                            "warehouse": "Склад на Ленина",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика"
                          },
                          "tracking_number": "",
                          "tpl_integration_type": "ozon",
                          "in_process_at": "2021-08-25T10:48:38Z",
                          "shipment_date": "2021-08-26T10:00:00Z",
                          "delivering_date": null,
                          "optional": {
                            "products_with_possible_mandatory_mark": [
                              0
                            ]
                          },
                          "cancellation": {
                            "cancel_reason_id": 0,
                            "cancel_reason": "",
                            "cancellation_type": "",
                            "cancelled_after_ship": false,
                            "affect_cancellation_rating": false,
                            "cancellation_initiator": ""
                          },
                          "customer": null,
                          "quantum_id": 0,
                          "products": [
                            {
                              "price": "1259",
                              "currency_code": "RUB",
                              "is_blr_traceable": true,
                              "offer_id": "УТ-0001365",
                              "name": "Мяч, цвет: черный, 5 кг",
                              "sku": 140048123,
                              "quantity": 1,
                              "products_requiring_jw_uin": "0"
                            }
                          ],
                          "addressee": null,
                          "barcodes": {
                            "upper_barcode": "%101%806044518",
                            "lower_barcode": "23024930500000"
                          },
                          "analytics_data": {
                            "region": "Санкт-Петербург",
                            "city": "Санкт-Петербург",
                            "delivery_type": "PVZ",
                            "is_premium": false,
                            "payment_type_group_name": "Карты оплаты",
                            "warehouse_id": 15110442724000,
                            "warehouse": "Склад на Ленина",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика",
                            "delivery_date_begin": "2022-08-28T14:00:00Z",
                            "delivery_date_end": "2022-08-28T18:00:00Z",
                            "is_legal": false
                          },
                          "financial_data": {
                            "products": [
                              {
                                "commission_amount": 0,
                                "commission_percent": 0,
                                "payout": 0,
                                "product_id": 140048123,
                                "old_price": 1888,
                                "price": 1259,
                                "total_discount_value": 629,
                                "total_discount_percent": 33.32,
                                "actions": [
                                  "Системная виртуальная скидка селлера"
                                ],
                                "quantity": 1
                              }
                            ]
                          },
                          "is_express": false,
                          "requirements": {
                            "products_requiring_gtd": [],
                            "products_requiring_country": [],
                            "products_requiring_jwn": []
                          },
                          "tariffication": [
                            {
                              "current_tariff_rate": 0,
                              "current_tariff_type": "",
                              "current_tariff_charge": "",
                              "current_tariff_charge_currency_code": "",
                              "next_tariff_rate": 0,
                              "next_tariff_type": "",
                              "next_tariff_charge": "",
                              "next_tariff_starts_at": "2023-11-13T08:05:57.657Z",
                              "next_tariff_charge_currency_code": ""
                            }
                          ]
                        }
                      ],
                      "count": 55
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v3/posting/fbs/list": {
        "post": {
          "summary": "Список отправлений (версия 3)",
          "description": "Возвращает список отправлений за указанный период времени — он должен быть не больше одного года.\n\nДополнительно можно отфильтровать отправления по их статусу — список доступных для выдачи статусов указан в описании параметра `filter.status`.\n\n`has_next = true` в ответе может значить, что вернули не весь массив отправлений. Чтобы получить информацию об остальных отправлениях, сделайте новый запрос с другим значением `offset`.\n\n Чтобы получать актуальную дату отгрузки, регулярно обновляйте информацию об отправлениях или подключите [пуш-уведомления](#tag/push_start).\n",
          "operationId": "PostingAPI_GetFbsPostingListV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "delivery_method_id": [
                      "string"
                    ],
                    "is_quantum": false,
                    "last_changed_status_date": {
                      "from": "2023-11-03T11:47:39.878Z",
                      "to": "2023-11-03T11:47:39.878Z"
                    },
                    "order_id": 0,
                    "provider_id": [
                      "string"
                    ],
                    "since": "2023-11-03T11:47:39.878Z",
                    "status": "awaiting_packaging",
                    "to": "2023-11-03T11:47:39.878Z",
                    "warehouse_id": [
                      "string"
                    ]
                  },
                  "limit": 0,
                  "offset": 0,
                  "with": {
                    "analytics_data": true,
                    "barcodes": true,
                    "financial_data": true,
                    "translit": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetFbsPostingListResponseV3"
                  },
                  "example": {
                    "result": {
                      "postings": [
                        {
                          "posting_number": "05708065-0029-1",
                          "order_id": 680420041,
                          "order_number": "05708065-0029",
                          "pickup_code_verified_at": "2025-01-17T10:59:26.614Z",
                          "status": "awaiting_deliver",
                          "substatus": "posting_awaiting_passport_data",
                          "delivery_method": {
                            "id": 21321684811000,
                            "name": "Ozon Логистика самостоятельно, Красногорск",
                            "warehouse_id": 21321684811000,
                            "warehouse": "Стим Тойс Нахабино",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика"
                          },
                          "tracking_number": "",
                          "tpl_integration_type": "ozon",
                          "in_process_at": "2022-05-13T07:07:32Z",
                          "shipment_date": "2022-05-13T10:00:00Z",
                          "delivering_date": null,
                          "optional": {
                            "products_with_possible_mandatory_mark": [
                              0
                            ]
                          },
                          "cancellation": {
                            "cancel_reason_id": 0,
                            "cancel_reason": "",
                            "cancellation_type": "",
                            "cancelled_after_ship": false,
                            "affect_cancellation_rating": false,
                            "cancellation_initiator": ""
                          },
                          "customer": null,
                          "products": [
                            {
                              "price": "1390.000000",
                              "currency_code": "RUB",
                              "is_blr_traceable": true,
                              "offer_id": "205953",
                              "name": " Электронный конструктор PinLab Позитроник",
                              "sku": 358924380,
                              "quantity": 1
                            }
                          ],
                          "addressee": null,
                          "barcodes": null,
                          "analytics_data": null,
                          "financial_data": null,
                          "is_express": false,
                          "quantum_id": 0,
                          "requirements": {
                            "products_requiring_gtd": [],
                            "products_requiring_country": [],
                            "products_requiring_mandatory_mark": [],
                            "products_requiring_jwn": []
                          },
                          "tariffication": [
                            {
                              "current_tariff_rate": 0,
                              "current_tariff_type": "",
                              "current_tariff_charge": "",
                              "current_tariff_charge_currency_code": "",
                              "next_tariff_rate": 0,
                              "next_tariff_type": "",
                              "next_tariff_charge": "",
                              "next_tariff_starts_at": "2023-11-13T08:05:57.657Z",
                              "next_tariff_charge_currency_code": ""
                            }
                          ]
                        }
                      ],
                      "has_next": true
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v3/posting/fbs/get": {
        "post": {
          "summary": "Получить информацию об отправлении по идентификатору",
          "description": "Чтобы получать актуальную дату отгрузки, регулярно обновляйте информацию об отправлениях или подключите [пуш-уведомления](#tag/push_start).",
          "operationId": "PostingAPI_GetFbsPostingV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingRequest"
                },
                "example": {
                  "posting_number": "57195475-0050-3",
                  "with": {
                    "analytics_data": false,
                    "barcodes": false,
                    "financial_data": false,
                    "product_exemplars": false,
                    "translit": false
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetFbsPostingResponseV3"
                  },
                  "example": {
                    "result": {
                      "posting_number": "57195475-0050-3",
                      "order_id": 438764970,
                      "order_number": "57195475-0050",
                      "pickup_code_verified_at": "2025-01-17T11:04:59.958Z",
                      "status": "awaiting_packaging",
                      "substatus": "posting_awaiting_passport_data",
                      "previous_substatus": "posting_transferring_to_delivery",
                      "delivery_method": {
                        "id": 18114520187000,
                        "name": "Ozon Логистика самостоятельно, Москва",
                        "warehouse_id": 18114520187000,
                        "warehouse": "Москва основной",
                        "tpl_provider_id": 24,
                        "tpl_provider": "Ozon Логистика"
                      },
                      "tracking_number": "",
                      "tpl_integration_type": "ozon",
                      "in_process_at": "2021-11-20T09:14:16Z",
                      "shipment_date": "2021-11-23T10:00:00Z",
                      "delivering_date": null,
                      "provider_status": "",
                      "delivery_price": "",
                      "optional": {
                        "products_with_possible_mandatory_mark": [
                          0
                        ]
                      },
                      "cancellation": {
                        "cancel_reason_id": 0,
                        "cancel_reason": "",
                        "cancellation_type": "",
                        "cancelled_after_ship": false,
                        "affect_cancellation_rating": false,
                        "cancellation_initiator": ""
                      },
                      "customer": null,
                      "addressee": null,
                      "products": [
                        {
                          "currency_code": "RUB",
                          "is_blr_traceable": true,
                          "price": "279.0000",
                          "offer_id": "250-7898-1",
                          "name": "Кофе ароматизированный \"Шоколадный апельсин\" 250 гр",
                          "sku": 180550365,
                          "quantity": 1,
                          "jw_uin": [],
                          "dimensions": {
                            "height": "40.00",
                            "length": "240.00",
                            "weight": "260",
                            "width": "140.00"
                          }
                        }
                      ],
                      "barcodes": null,
                      "analytics_data": null,
                      "financial_data": null,
                      "additional_data": [],
                      "is_express": false,
                      "requirements": {
                        "products_requiring_gtd": [],
                        "products_requiring_country": [],
                        "products_requiring_jwn": []
                      },
                      "product_exemplars": null,
                      "tariffication": [
                        {
                          "current_tariff_rate": 0,
                          "current_tariff_type": "",
                          "current_tariff_charge": "",
                          "current_tariff_charge_currency_code": "",
                          "next_tariff_rate": 0,
                          "next_tariff_type": "",
                          "next_tariff_charge": "",
                          "next_tariff_starts_at": "2023-11-13T08:05:57.657Z",
                          "next_tariff_charge_currency_code": ""
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/get-by-barcode": {
        "post": {
          "summary": "Получить информацию об отправлении по штрихкоду",
          "operationId": "PostingAPI_GetFbsPostingByBarcode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFbsPostingByBarcodeRequest"
                },
                "example": {
                  "barcode": "20325804886000"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingResponse"
                  },
                  "example": {
                    "result": {
                      "posting_number": "57195475-0050-3",
                      "order_id": 438764970,
                      "order_number": "57195475-0050",
                      "status": "awaiting_packaging",
                      "delivery_method": {
                        "id": 18114520187000,
                        "name": "Ozon Логистика самостоятельно, Москва",
                        "warehouse_id": 18114520187000,
                        "warehouse": "Москва основной",
                        "tpl_provider_id": 24,
                        "tpl_provider": "Ozon Логистика"
                      },
                      "tracking_number": "",
                      "tpl_integration_type": "ozon",
                      "in_process_at": "2021-11-20T09:14:16Z",
                      "shipment_date": "2021-11-23T10:00:00Z",
                      "delivering_date": null,
                      "provider_status": "",
                      "delivery_price": "",
                      "cancellation": {
                        "cancel_reason_id": 0,
                        "cancel_reason": "",
                        "cancellation_type": "",
                        "cancelled_after_ship": false,
                        "affect_cancellation_rating": false,
                        "cancellation_initiator": ""
                      },
                      "customer": null,
                      "addressee": null,
                      "products": [
                        {
                          "price": "279.0000",
                          "offer_id": "250-7898-1",
                          "name": "Кофе ароматизированный \"Шоколадный апельсин\" 250 гр",
                          "sku": 180550365,
                          "quantity": 1,
                          "dimensions": {
                            "height": "40.00",
                            "length": "240.00",
                            "weight": "260",
                            "width": "140.00"
                          }
                        }
                      ],
                      "barcodes": null,
                      "analytics_data": null,
                      "financial_data": null,
                      "additional_data": [],
                      "is_express": false,
                      "requirements": {
                        "products_requiring_gtd": [],
                        "products_requiring_country": []
                      },
                      "product_exemplars": null
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v3/posting/multiboxqty/set": {
        "post": {
          "summary": "Указать количество коробок для многокоробочных отправлений",
          "description": "Метод для передачи количества коробок для отправлений, в которых есть многокоробочные товары.\n\nИспользуйте метод при работе по схеме rFBS Агрегатор — c доставкой партнёрами Ozon.\n",
          "operationId": "PostingAPI_PostingMultiBoxQtySetV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество коробок указано",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3Response"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/product/change": {
        "post": {
          "summary": "Добавить вес для весовых товаров в отправлении",
          "operationId": "PostingAPI_ChangeFbsPostingProduct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingProductChangeRequest"
                },
                "example": {
                  "items": [
                    {
                      "sku": 1231428352,
                      "weightReal": [
                        0.3
                      ]
                    }
                  ],
                  "posting_number": "33920158-0006-1"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Данные добавлены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingProductChangeResponse"
                  },
                  "example": {
                    "result": "33920158-0006-1"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/product/country/list": {
        "post": {
          "tags": [
            "FBS"
          ],
          "summary": "Список доступных стран-изготовителей",
          "description": "Метод для получения списка доступных стран-изготовителей и их ISO кодов.",
          "operationId": "PostingAPI_ListCountryProductFbsPostingV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2FbsPostingProductCountryListRequest"
                },
                "example": {
                  "name_search": ""
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список доступных стран-изготовителей",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingProductCountryListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "Алжир",
                        "country_iso_code": "DZ"
                      },
                      {
                        "name": "Ангилья",
                        "country_iso_code": "AI"
                      },
                      {
                        "name": "Виргинские Острова (Великобритания)",
                        "country_iso_code": "VG"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/product/country/set": {
        "post": {
          "tags": [
            "FBS"
          ],
          "summary": "Добавить информацию о стране-изготовителе товара",
          "description": "Метод для добавления на продукт атрибута «Страна-изготовитель», если он не был указан.",
          "operationId": "PostingAPI_SetCountryProductFbsPostingV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2FbsPostingProductCountrySetRequest"
                },
                "example": {
                  "country_iso_code": "NO",
                  "posting_number": "57195475-0050-3",
                  "product_id": 180550365
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Страна-изготовитель добавлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingProductCountrySetResponse"
                  },
                  "example": {
                    "product_id": 180550365,
                    "is_gtd_needed": true
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/fbs/restrictions": {
        "post": {
          "tags": [
            "FBS"
          ],
          "summary": "Получить ограничения пункта приёма",
          "description": "Метод для получения габаритных, весовых и прочих ограничений пункта приёма по номеру отправления. Метод применим только для работы по схеме FBS.",
          "operationId": "PostingAPI_GetRestrictions",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRestrictionsRequest"
                },
                "example": {
                  "posting_number": "76673629-0020-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ограничения пункта приёма",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetRestrictionsResponse"
                  },
                  "example": {
                    "result": {
                      "posting_number": "76673629-0020-1",
                      "max_posting_weight": 40000,
                      "min_posting_weight": 0,
                      "width": 500,
                      "height": 500,
                      "length": 500,
                      "max_posting_price": 500000,
                      "min_posting_price": 0
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/package-label": {
        "post": {
          "summary": "Напечатать этикетку",
          "description": "<aside class=\"warning\">\nЕсли вы работаете по схеме rFBS или rFBS Express, изучите процесс печати этикетки в <a href=\"https://seller-edu.ozon.ru/rfbs/scheme-of-work\">Базе знаний продавца</a>.\n</aside>\n\nГенерирует PDF-файл с этикетками для указанных отправлений. В одном запросе можно передать не больше 20 идентификаторов. Если хотя бы для одного отправления возникнет ошибка, этикетки не будут подготовлены для всех отправлений в запросе.\n\nРекомендуем запрашивать этикетки через 45–60 секунд после сборки заказа.\n\nОшибка `The next postings aren't ready` означает, что этикетки ещё не готовы, повторите запрос позднее.\n",
          "operationId": "PostingAPI_PostingFBSPackageLabel",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSPackageLabelRequest"
                },
                "example": {
                  "posting_number": [
                    "48173252-0034-4"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Маркировка напечатана",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSPackageLabelResponse"
                  },
                  "example": {
                    "content_type": "application/pdf",
                    "file_name": "ticket-170660-2023-07-13T13:17:06Z.pdf",
                    "file_content": "%PDF-1.7\n%âãÏÓ\n53 0 obj\n<</MarkInfo<</Marked true/Type/MarkInfo>>/Pages 9 0 R/StructTreeRoot 10 0 R/Type/Catalog>>\nendobj\n8 0 obj\n<</Filter/FlateDecode/Length 2888>>\nstream\nxå[[ݶ\u0011~?¿BÏ\u0005Bs\u001c^\u0000Àwí5ú\u0010 m\u0016Èsà¦)\n;hÒ\u0014èÏïG\u0014)<{äµ] ]?¬¬oIÎ}¤F±óϤñï\u001bÕü×X´OÏï?^~¹$<ø¨È9q\u0013Y\u0012åñì§_¼|ÿégü\t+\u0012\u001bxª}Æxҿ¿¼_º¼xg¦þ5OkuÌ3ýíògüûå\"Ni\u0016C\u0001°\u000fA9g'r¢\"\u0013YóĪ\u0018NÑ{\u001dÕóZ¬\\Ô\""
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v1/posting/fbs/package-label/create": {
        "post": {
          "summary": "Создать задание на выгрузку этикеток",
          "description": "<aside class=\"warning\">\nВ будущем метод будет отключён. Мы предупредим вас об этом за месяц. Переключитесь на <a href=\"#operation/PostingAPI_CreateLabelBatchV2\">/v2/posting/fbs/package-label/create</a>.\n</aside>\n\nМетод для создания задания на асинхронное формирование этикеток.\n\nДля получения этикеток, созданных в результате вызова метода, используйте [/v1/posting/fbs/package-label/get](#operation/PostingAPI_GetLabelBatch).\n",
          "operationId": "PostingAPI_CreateLabelBatch",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateLabelBatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор задания на формирование этикеток",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CreateLabelBatchResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 5819327210249
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/package-label/create": {
        "post": {
          "summary": "Создать задание на формирование этикеток",
          "description": "Метод для создания задания на асинхронное формирование этикеток.\nМетод может вернуть несколько заданий: на формирование маленькой и большой этикетки.\n\nЧтобы получить созданные этикетки, используйте [/v1/posting/fbs/package-label/get](#operation/PostingAPI_GetLabelBatch).\n",
          "operationId": "PostingAPI_CreateLabelBatchV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateLabelBatchRequest"
                },
                "example": {
                  "posting_number": [
                    "4708216109137",
                    "3697105098026"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Задания на формирование этикеток",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2CreateLabelBatchResponse"
                  },
                  "example": {
                    "result": {
                      "tasks": [
                        {
                          "task_id": 5819327210248,
                          "task_type": "big_label"
                        },
                        {
                          "task_id": 5819327210249,
                          "task_type": "small_label"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v1/posting/fbs/package-label/get": {
        "post": {
          "summary": "Получить файл с этикетками",
          "description": "Метод для получения этикеток после вызова [/v1/posting/fbs/package-label/create](#operation/PostingAPI_CreateLabelBatch).",
          "operationId": "PostingAPI_GetLabelBatch",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetLabelBatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус формирования этикеток или файл с ними",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetLabelBatchResponse"
                  },
                  "example": {
                    "result": {
                      "status": "completed",
                      "file_url": "https://cdn1.ozone.ru/s3/sc-temporary/e6/0c/e60cdfd7aed78c2b44d134504fbd591d.pdf"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v1/posting/fbs/cancel-reason": {
        "post": {
          "summary": "Причины отмены отправления",
          "description": "Возвращает список причин отмены для конкретных отправлений.",
          "operationId": "PostingAPI_GetPostingFbsCancelReasonV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingCancelReasonRequest"
                },
                "example": {
                  "related_posting_numbers": [
                    "73837363-0010-3"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Причины отмены отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingCancelReasonResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "posting_number": "73837363-0010-3",
                        "reasons": [
                          {
                            "id": 352,
                            "title": "Товар закончился на складе продавца",
                            "type_id": "seller"
                          },
                          {
                            "id": 400,
                            "title": "Остался только бракованный товар",
                            "type_id": "seller"
                          },
                          {
                            "id": 402,
                            "title": "Другое (вина продавца)",
                            "type_id": "seller"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/cancel-reason/list": {
        "post": {
          "summary": "Причины отмены отправлений",
          "description": "Возвращает список причин отмены для всех отправлений.",
          "operationId": "PostingAPI_GetPostingFbsCancelReasonList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Причины отмены отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingCancelReasonListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 352,
                        "title": "Товар закончился на складе продавца",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 401,
                        "title": "Продавец отклонил арбитраж",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      },
                      {
                        "id": 402,
                        "title": "Другое (вина продавца)",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 666,
                        "title": "Возврат из службы доставки: нет доставки в указанный регион",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/product/cancel": {
        "post": {
          "summary": "Отменить отправку некоторых товаров в отправлении",
          "description": "Используйте метод, если вы не можете отправить часть продуктов из отправления.\n\nЧтобы получить идентификаторы причин отмены `cancel_reason_id` при работе по схемам FBS или rFBS, используйте метод [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList).\n\nУсловно-доставленные отправления отменить нельзя.\n",
          "operationId": "PostingAPI_CancelFbsPostingProduct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingProductCancelRequest"
                },
                "example": {
                  "cancel_reason_id": 352,
                  "cancel_reason_message": "Product is out of stock",
                  "items": [
                    {
                      "quantity": 5,
                      "sku": 150587396
                    }
                  ],
                  "posting_number": "33920113-1231-1"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Отправка отменена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingProductCancelResponse"
                  },
                  "example": {
                    "result": ""
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/cancel": {
        "post": {
          "summary": "Отменить отправление",
          "description": "Меняет статус отправления на `cancelled`.\n\nПеред началом работы проверьте причины отмены для конкретного отправления методом [/v1/posting/fbs/cancel-reason](#operation/PostingAPI_GetPostingFbsCancelReasonV1).\n\nУсловно-доставленные отправления отменить нельзя.\n\nЕсли значение параметра `cancel_reason_id` — 402, заполните поле `cancel_reason_message`.\n",
          "operationId": "PostingAPI_CancelFbsPosting",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingCancelFbsPostingRequest"
                },
                "example": {
                  "cancel_reason_id": 352,
                  "cancel_reason_message": "Product is out of stock",
                  "posting_number": "33920113-1231-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отправление отменено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/arbitration": {
        "post": {
          "summary": "Открыть спор по отправлению",
          "description": "Если отправление передано в доставку, но не просканировано в сортировочном центре, можно открыть спор. Открытый спор переведёт отправление в статус `arbitration`.",
          "operationId": "PostingAPI_MoveFbsPostingToArbitration",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingMovePostingRequest"
                },
                "example": {
                  "posting_number": [
                    "33920143-1195-1"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Открыт спор по отправлению",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/posting/fbs/awaiting-delivery": {
        "post": {
          "summary": "Передать отправление к отгрузке",
          "description": "Передает спорные заказы к отгрузке. Статус отправления изменится на `awaiting_deliver`.",
          "operationId": "PostingAPI_MoveFbsPostingToAwaitingDelivery",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2MovePostingToAwaitingDeliveryRequest"
                },
                "example": {
                  "posting_number": [
                    "33920143-1195-1"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Отправление передано к отгрузке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v1/posting/fbs/pick-up-code/verify": {
        "post": {
          "tags": [
            "FBS"
          ],
          "summary": "Проверить код курьера",
          "description": "Метод позволяет проверить код курьера при передаче отправлений realFBS Express. Подробнее о передаче отправлений в [Базе знаний продавца](https://seller-edu.ozon.ru/contract-for-sellers/regulations-fbs-realfbs/reglament-prodaji-so-svoego-sklada-fbs-express#7-порядок-передачи-отправлении-через-партнёров-ozon-при-экспресс-доставке).",
          "operationId": "PostingAPI_PostingFBSPickupCodeVerify",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingFBSPickupCodeVerifyRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат проверки",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFBSPickupCodeVerifyResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/global/etgb": {
        "post": {
          "tags": [
            "FBS"
          ],
          "summary": "Таможенные декларации ETGB",
          "description": "Метод для получения таможенных деклараций Elektronik Ticaret Gümrük Beyannamesi (ETGB) для продавцов из Турции.\n",
          "operationId": "PostingAPI_GetEtgb",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetEtgbRequest"
                },
                "example": {
                  "date": {
                    "from": "2023-02-13T12:13:16.818Z",
                    "to": "2023-02-13T12:13:16.818Z"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о декларациях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetEtgbResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/posting/unpaid-legal/product/list": {
        "post": {
          "summary": "Список неоплаченных товаров, заказанных юридическими лицами",
          "operationId": "PostingAPI_UnpaidLegalProductList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingUnpaidLegalProductListRequest"
                },
                "example": {
                  "cursor": "hCGiPPopcBFMgMErdzaCEpzQfinuPyEhUoSmBMADuoFAhBjXeA==",
                  "limit": 1000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список неоплаченных товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingUnpaidLegalProductListResponse"
                  },
                  "example": {
                    "products": [
                      {
                        "product_id": 145123054,
                        "offer_id": "10032",
                        "quantity": 1,
                        "name": "Телевизор LG",
                        "image_url": "https://url"
                      }
                    ],
                    "cursor": "hCGiPPopcBFMgMErdzaCEpzQfinuPyEhUoSmBMADuoFAhBjXeA=="
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FBS"
          ]
        }
      },
      "/v2/returns/rfbs/list": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Список заявок на возврат",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsListV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на возврат",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ReturnsRfbsListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/get": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Информация о заявке на возврат",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsGetV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о заявке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ReturnsRfbsGetResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/reject": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Отклонить заявку на возврат",
          "description": "Метод позволяет отклонить заявку на возврат rFBS-заказа. Вы можете объяснить своё решение в параметре `comment`.",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsRejectV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsRejectRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка отклонена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/compensate": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Вернуть часть стоимости товара",
          "description": "Метод для частичной компенсации стоимости товара: вы возвращаете часть денег покупателю, товар остаётся у него.\n",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsCompensateV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsCompensateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Частичная компенсация подтверждена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/verify": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Одобрить заявку на возврат",
          "description": "Метод позволяет одобрить заявку и согласиться на получение товара для проверки.\n\nПодтвердите получение товара с помощью метода [/v2/returns/rfbs/receive-return](#operation/RFBSReturnsAPI_ReturnsRfbsReceiveReturnV2).\n",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsVerifyV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsVerifyRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка одобрена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/receive-return": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Подтвердить получение товара на проверку",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsReceiveReturnV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsReceiveReturnRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Получение подтверждено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/rfbs/return-money": {
        "post": {
          "tags": [
            "RFBSReturnsAPI"
          ],
          "summary": "Вернуть деньги покупателю",
          "description": "Метод подтверждает возврат полной стоимости товара.\nИспользуйте метод, если согласны:\n- сразу вернуть стоимость товара и оставить его покупателю;\n- вернуть стоимость после получения и проверки товара.\n\nЕсли товар оказался ненадлежащего качества или с браком, вы возмещаете покупателю стоимость пересылки товара.\n",
          "operationId": "RFBSReturnsAPI_ReturnsRfbsReturnMoneyV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReturnsRfbsReturnMoneyRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Возврат денег подтверждён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/conditional-cancellation/get": {
        "post": {
          "summary": "Получить информацию о заявке на отмену rFBS",
          "description": "Метод для получения информации о заявке на отмену rFBS-заказа.",
          "operationId": "CancellationAPI_GetConditionalCancellation",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetConditionalCancellationRequest"
                },
                "example": {
                  "cancellation_id": 90066344
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о заявке на отмену",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetConditionalCancellationResponse"
                  },
                  "example": {
                    "result": {
                      "cancellation_id": 90066344,
                      "posting_number": "47134289-0029-1",
                      "cancellation_reason": {
                        "id": 508,
                        "name": "Покупатель отменил заказ"
                      },
                      "cancelled_at": "2022-04-07T06:37:26.871105Z",
                      "cancellation_reason_message": "Изменение пункта выдачи заказа.",
                      "tpl_integration_type": "ThirdPartyTracking",
                      "state": {
                        "id": 2,
                        "name": "Подтверждена",
                        "state": "APPROVED"
                      },
                      "cancellation_initiator": "CLIENT",
                      "order_date": "2022-04-06T17:17:24.517Z",
                      "approve_comment": "",
                      "approve_date": "2022-04-07T07:52:45.971824Z",
                      "auto_approve_date": "2022-04-09T06:37:26.871105Z"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CancellationAPI"
          ]
        }
      },
      "/v1/conditional-cancellation/list": {
        "post": {
          "summary": "Получить список заявок на отмену rFBS",
          "description": "Метод для получения списка заявок на отмену rFBS-заказов.",
          "operationId": "CancellationAPI_GetConditionalCancellationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetConditionalCancellationListRequest"
                },
                "example": {
                  "filters": {
                    "cancellation_initiator": [
                      "CLIENT"
                    ],
                    "posting_number": [],
                    "state": "ALL"
                  },
                  "limit": 2,
                  "offset": 0,
                  "with": {
                    "counters": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на отмену",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetConditionalCancellationListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "cancellation_id": 50186754,
                        "posting_number": "41267064-0032-1",
                        "cancellation_reason": {
                          "id": 508,
                          "name": "Покупатель отменил заказ"
                        },
                        "cancelled_at": "2021-09-03T07:17:12.116114Z",
                        "cancellation_reason_message": "",
                        "tpl_integration_type": "ThirdPartyTracking",
                        "state": {
                          "id": 2,
                          "name": "Подтверждена",
                          "state": "APPROVED"
                        },
                        "cancellation_initiator": "CLIENT",
                        "order_date": "2021-09-03T07:04:53.220Z",
                        "approve_comment": "",
                        "approve_date": "2021-09-03T09:13:12.614200Z",
                        "auto_approve_date": "2021-09-06T07:17:12.116114Z"
                      },
                      {
                        "cancellation_id": 51956491,
                        "posting_number": "14094410-0018-1",
                        "cancellation_reason": {
                          "id": 507,
                          "name": "Покупатель передумал"
                        },
                        "cancelled_at": "2021-09-13T15:03:25.155827Z",
                        "cancellation_reason_message": "",
                        "tpl_integration_type": "ThirdPartyTracking",
                        "state": {
                          "id": 5,
                          "name": "Автоматически отменена",
                          "state": "REJECTED"
                        },
                        "cancellation_initiator": "CLIENT",
                        "order_date": "2021-09-13T07:48:50.143Z",
                        "approve_comment": "",
                        "approve_date": null,
                        "auto_approve_date": "2021-09-16T15:03:25.155827Z"
                      }
                    ],
                    "total": 19,
                    "counters": {
                      "on_approval": 0,
                      "approved": 14,
                      "rejected": 5
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CancellationAPI"
          ]
        }
      },
      "/v1/conditional-cancellation/approve": {
        "post": {
          "summary": "Подтвердить заявку на отмену rFBS",
          "description": "Метод позволяет согласовать заявку на отмену в статусе `ON_APPROVAL`. Метод применим для rFBS-заказов. Заказ будет отменён, а деньги вернутся покупателю.",
          "operationId": "CancellationAPI_ConditionalCancellationApprove",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConditionalCancellationMoveRequest"
                },
                "example": {
                  "cancellation_id": 74393917
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка подтверждена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CancellationAPI"
          ]
        }
      },
      "/v1/conditional-cancellation/reject": {
        "post": {
          "summary": "Отклонить заявку на отмену rFBS",
          "description": "Метод позволяет отклонить заявку на отмену в статусе `ON_APPROVAL`. Метод применим для rFBS-заказов. Объясните своё решение в параметре `comment`. \n\nЗаказ останется в том же статусе, и его нужно будет доставить покупателю.\n",
          "operationId": "CancellationAPI_ConditionalCancellationReject",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConditionalCancellationMoveRequest"
                },
                "example": {
                  "cancellation_id": 52394916,
                  "comment": "Заявка на отмену отклоняется. Заказ будет доставлен в указанные сроки. При необходимости вы можете оформить возврат."
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка отклонена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "CancellationAPI"
          ]
        }
      },
      "/v1/returns/list": {
        "post": {
          "tags": [
            "ReturnsAPI"
          ],
          "summary": "Информация о возвратах FBO и FBS",
          "description": "Метод для получения информации о возвратах FBO и FBS.",
          "operationId": "returnsList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetReturnsListRequest"
                },
                "example": {
                  "filter": {
                    "logistic_return_date": {
                      "time_from": "2019-08-24T14:15:22Z",
                      "time_to": "2019-08-24T14:15:22Z"
                    },
                    "storage_tariffication_start_date": {
                      "time_from": "2019-08-24T14:15:22Z",
                      "time_to": "2019-08-24T14:15:22Z"
                    },
                    "visual_status_change_moment": {
                      "time_from": "2019-08-24T14:15:22Z",
                      "time_to": "2019-08-24T14:15:22Z"
                    },
                    "order_id": "0",
                    "posting_numbers": [
                      "string"
                    ],
                    "product_name": "string",
                    "offer_id": "string",
                    "visual_status_name": "string",
                    "warehouse_id": "911",
                    "barcode": "string",
                    "return_schema": "FBO"
                  },
                  "limit": 500,
                  "last_id": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация по возвратам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetReturnsListResponse"
                  },
                  "example": {
                    "returns": [
                      {
                        "exemplars": [
                          {
                            "id": "1019562967545956"
                          }
                        ],
                        "id": "1000015552",
                        "company_id": "3058",
                        "return_reason_name": "Покупатель отказался при вручении: недоволен качеством товара",
                        "type": "FullReturn",
                        "schema": "Fbs",
                        "order_id": "24540784250",
                        "order_number": "58544282-0057",
                        "place": {
                          "id": "23869688194000",
                          "name": "СЦ_Львовский_Возвраты",
                          "address": "Россия, обл. Московская, г. Подольск, промышленная зона Львовский, ул. Московская, д. 69, стр. 5"
                        },
                        "target_place": {
                          "id": "23869688194000",
                          "name": "СЦ_Львовский_Возвраты",
                          "address": "Россия, обл. Московская, г. Подольск, промышленная зона Львовский, ул. Московская, д. 69, стр. 5"
                        },
                        "storage": {
                          "sum": {
                            "currency_code": "RUB",
                            "price": "1231"
                          },
                          "tariffication_first_date": "2024-07-30T06:15:48.998146Z",
                          "tariffication_start_date": "2024-07-29T06:15:48.998146Z",
                          "arrived_moment": "2024-07-29T06:15:48.998146Z",
                          "days": "0",
                          "utilization_sum": {
                            "currency_code": "RUB",
                            "price": "1231"
                          },
                          "utilization_forecast_date": "2024-07-29T06:15:48.998146Z"
                        },
                        "product": {
                          "sku": "1100526203",
                          "offer_id": "81451",
                          "name": "Кукла Дотти Плачущий младенец Cry Babies Dressy Dotty",
                          "price": {
                            "currency_code": "RUB",
                            "price": "3318"
                          },
                          "price_without_commission": {
                            "currency_code": "RUB",
                            "price": "3318"
                          },
                          "commission_percent": "1.2",
                          "commission": {
                            "currency_code": "RUB",
                            "price": "2312"
                          },
                          "quantity": 1
                        },
                        "logistic": {
                          "technical_return_moment": "2024-07-29T06:15:48.998146Z",
                          "final_moment": "2024-07-29T06:15:48.998146Z",
                          "cancelled_with_compensation_moment": "2024-07-29T06:15:48.998146Z",
                          "return_date": "2024-07-29T06:15:48.998146Z",
                          "barcode": "ii5275210303"
                        },
                        "visual": {
                          "status": {
                            "id": 3,
                            "display_name": "В пункте выдачи",
                            "sys_name": "ArrivedAtReturnPlace"
                          },
                          "change_moment": "2024-07-29T06:15:48.998146Z"
                        },
                        "additional_info": {
                          "is_opened": true,
                          "is_super_econom": false
                        },
                        "source_id": "90426223",
                        "posting_number": "58544282-0057-1",
                        "clearing_id": "21190893156000",
                        "return_clearing_id": null
                      }
                    ],
                    "has_next": false
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/returns/company/fbs/info": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Количество возвратов FBS",
          "description": "Метод для получения информации о возвратах FBS и их количестве.",
          "operationId": "returnsCompanyFBSInfo",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ReturnsCompanyFbsInfoRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Количество возвратов FBS",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ReturnsCompanyFbsInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/is-enabled": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Проверить возможность получения возвратных отгрузок по штрихкоду",
          "description": "Если у вас есть доступ, в параметре `enabled` будет указано значение `true`.",
          "operationId": "ReturnAPI_GiveoutIsEnabled",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Результат проверки",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutIsEnabledResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/list": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Список возвратных отгрузок",
          "description": "Метод для получения списка активных возвратов.\nВозвратная отгрузка становится активной после сканирования штрихкода. \nПосле сканирования штрихкода второй раз активная выдача переходит в статус неактивной.\n",
          "operationId": "ReturnAPI_GiveoutList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GiveoutListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список возвратных отгрузок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/info": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Информация о возвратной отгрузке",
          "description": "Метод для получения информации о возвратной отгрузке. \nВ параметр `giveout_id` передаётся значение, полученное в методе [/v1/return/giveout/list](#operation/ReturnAPI_GiveoutList).\n",
          "operationId": "ReturnAPI_GiveoutInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GiveoutInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о возвратной отгрузке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/barcode": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Значение штрихкода для возвратных отгрузок",
          "description": "Используйте этот метод, чтобы получить штрихкод из ответа методов [/v1/return/giveout/get-png](#operation/ReturnAPI_GiveoutGetPNG) и [/v1/return/giveout/get-pdf](#operation/ReturnAPI_GiveoutGetPDF) в текстовом виде.",
          "operationId": "ReturnAPI_GiveoutGetBarcode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Значение штрихкода",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutGetBarcodeResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/get-pdf": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Штрихкод для получения возвратной отгрузки в формате PDF",
          "description": "Возвращает PDF-файл со штрихкодом. Метод работает только для схемы FBS.",
          "operationId": "ReturnAPI_GiveoutGetPDF",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Штрихкод для возвратной отгрузки",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutGetPDFResponse"
                  },
                  "example": {
                    "content_type": "application/pdf",
                    "file_name": "string",
                    "file_content": "string"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/get-png": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Штрихкод для получения возвратной отгрузки в формате PNG",
          "description": "Возвращает PNG-файл со штрихкодом.",
          "operationId": "ReturnAPI_GiveoutGetPNG",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Штрихкод для возвратной отгрузки",
              "content": {
                "image/png": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutGetPNGResponse"
                  },
                  "example": {
                    "content_type": "image/png",
                    "file_name": "string",
                    "file_content": "string"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/return/giveout/barcode-reset": {
        "post": {
          "tags": [
            "ReturnAPI"
          ],
          "summary": "Сгенерировать новый штрихкод",
          "description": "Используйте метод, если ваш штрихкод попал в посторонние руки.\n\nМетод возвращает PNG-файл с новым штрихкодом. После использования метода вы не сможете получить возвратную отгрузку по старым штрихкодам.\nЧтобы получить новый штрихкод в PDF-формате, запросите его методом [/v1/return/giveout/get-pdf](#operation/ReturnAPI_GiveoutGetPDF).\n",
          "operationId": "ReturnAPI_GiveoutBarcodeReset",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Новый штрихкод",
              "content": {
                "image/png": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GiveoutBarcodeResetResponse"
                  },
                  "example": {
                    "content_type": "image/png",
                    "file_name": "string",
                    "file_content": "string"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/chat/send/message": {
        "post": {
          "summary": "Отправить сообщение",
          "description": "Отправляет сообщение в существующий чат по его идентификатору.",
          "operationId": "ChatAPI_ChatSendMessage",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatSendMessageRequest"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "text": "test"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Сообщение отправлено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatSendMessageResponse"
                  },
                  "example": {
                    "result": "success"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v1/chat/send/file": {
        "post": {
          "summary": "Отправить файл",
          "description": "Отправляет файл в существующий чат по его идентификатору.",
          "operationId": "ChatAPI_ChatSendFile",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatSendFileRequest"
                },
                "example": {
                  "base64_content": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=",
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "name": "tempor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Файл отправлен",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatSendFileResponse"
                  },
                  "example": {
                    "result": "success"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v1/chat/start": {
        "post": {
          "summary": "Создать новый чат",
          "description": "Создает новый чат с покупателем по отправлению. Например, чтобы уточнить адрес или модель товара.",
          "operationId": "ChatAPI_ChatStart",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatStartRequest"
                },
                "example": {
                  "posting_number": "47873153-0052-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Создан новый чат",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatStartResponse"
                  },
                  "example": {
                    "result": {
                      "chat_id": "5969c331-2e64-44b7-8a0e-ff9526762c62"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v2/chat/list": {
        "post": {
          "summary": "Список чатов",
          "description": "Возвращает информацию о чатах по указанным фильтрам.",
          "operationId": "ChatAPI_ChatListV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatList"
                },
                "example": {
                  "filter": {
                    "chat_status": "Opened",
                    "unread_only": true
                  },
                  "limit": 1,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список чатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatListResponse"
                  },
                  "example": {
                    "chats": [
                      {
                        "chat": {
                          "created_at": "2022-07-22T08:07:19.581Z",
                          "chat_id": "5e767w03-b400-4y1b-a841-75319ca8a5c8",
                          "chat_status": "Opened",
                          "chat_type": "Seller_Support"
                        },
                        "first_unread_message_id": "3000000000118021931",
                        "last_message_id": "30000000001280042740",
                        "unread_count": 1
                      }
                    ],
                    "total_chats_count": 25,
                    "total_unread_count": 5
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v2/chat/history": {
        "post": {
          "summary": "История чата",
          "operationId": "ChatAPI_ChatHistoryV2",
          "description": "Возвращает историю сообщений чата. По умолчанию от самого нового сообщения к старым.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistory"
                },
                "example": {
                  "chat_id": "18b8e1f9-4ae7-461c-84ea-8e1f54d1a45e",
                  "direction": "Forward",
                  "from_message_id": 3000000000118032000,
                  "limit": 1
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "История чата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatHistoryResponse"
                  },
                  "example": {
                    "has_next": true,
                    "messages": [
                      {
                        "message_id": "3000000000817031942",
                        "user": {
                          "id": "115568",
                          "type": "Сustomer"
                        },
                        "created_at": "2022-07-18T20:58:04.528Z",
                        "is_read": true,
                        "data": [
                          "Здравствуйте, у меня вопрос по вашему товару \"Стекло защитное для смартфонов\", артикул 11223. Подойдет ли он на данную [ модель ](https://www.ozon.ru/product/smartfon-samsung-galaxy-a03s-4-64-gb-chernyy) телефона?"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v2/chat/read": {
        "post": {
          "summary": "Отметить сообщения как прочитанные",
          "description": "Метод для отметки выбранного сообщения и сообщений до него прочитанными.",
          "operationId": "ChatAPI_ChatReadV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRead"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "from_message_id": 3000000000118032000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatReadResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ChatAPI"
          ]
        }
      },
      "/v2/invoice/create-or-update": {
        "post": {
          "summary": "Создать или изменить счёт-фактуру",
          "description": "Создание или изменение таможенного счёта-фактуры для возврата НДС продавцам из Турции.",
          "operationId": "InvoiceAPI_InvoiceCreateOrUpdateV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2InvoiceCreateOrUpdateV2Request"
                },
                "example": {
                  "HS_code": [
                    {
                      "sku": "SKU123",
                      "code": "534758761999"
                    },
                    {
                      "sku": "SKU456",
                      "code": "534758761000"
                    },
                    {
                      "sku": "SKU789",
                      "code": "534758761777"
                    }
                  ],
                  "date": "2023-08-01T12:08:44.342Z",
                  "number": "424fdsf234",
                  "posting_number": "33920146-0252-1",
                  "price": 234.34,
                  "price_currency": "RUB",
                  "url": "https://cdn.ozone.ru/s3/ozon-disk-api/techdoc/seller-api/earsivfatura_1690960445.pdf"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Счёт-фактура создана или изменена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2InvoiceCreateOrUpdateV2Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "SupplierAPI"
          ]
        }
      },
      "/v1/invoice/file/upload": {
        "post": {
          "summary": "Загрузка счёта-фактуры",
          "description": "Доступные форматы: JPEG и PDF. Максимальный размер файла: 10 МБ.\n",
          "operationId": "invoice_upload",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceFileUploadRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ссылка на счёт-фактуру",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1InvoiceFileUploadResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "SupplierAPI"
          ]
        }
      },
      "/v2/invoice/get": {
        "post": {
          "summary": "Получить информацию о счёте-фактуре",
          "description": null,
          "operationId": "invoice_getV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о счёте-фактуре",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2InvoiceGetV2Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "SupplierAPI"
          ]
        }
      },
      "/v1/invoice/delete": {
        "post": {
          "summary": "Удалить ссылку на счёт-фактуру",
          "description": null,
          "operationId": "invoice_delete",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ссылка удалена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1InvoiceDeleteResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "SupplierAPI"
          ]
        }
      },
      "/v1/report/info": {
        "post": {
          "summary": "Информация об отчёте",
          "description": "Возвращает информацию о созданном ранее отчёте по его идентификатору.",
          "operationId": "ReportAPI_ReportInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportReportInfoRequest"
                },
                "example": {
                  "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отчёте",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportReportInfoResponse"
                  },
                  "example": {
                    "result": {
                      "code": "REPORT_seller_products_924336_1720170405_a9ea2f27",
                      "status": "success",
                      "error": "",
                      "file": "https://cdn1.ozone.ru/s3/item-picture-6/f3/ce/f4ceae54b323213d3e61e59c323bd8e5.csv",
                      "report_type": "seller_products",
                      "params": {},
                      "created_at": "2021-11-25T14:54:55.688260Z"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/report/list": {
        "post": {
          "summary": "Список отчётов",
          "description": "Возвращает список отчётов, которые были сформированы раньше.",
          "operationId": "ReportAPI_ReportList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportReportListRequest"
                },
                "example": {
                  "page": 0,
                  "page_size": 1000,
                  "report_type": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отчётов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportReportListResponse"
                  },
                  "example": {
                    "result": {
                      "reports": [
                        {
                          "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69",
                          "status": "success",
                          "error": "",
                          "file": "https://cdn1.ozone.ru/s3/item-picture-6/f3/ce/f4ceae54b323213d3e61e59c323bd8e5.csvv",
                          "report_type": "seller_products",
                          "params": {
                            "visibility": "3"
                          },
                          "created_at": "2019-02-06T12:09:47.258062Z"
                        },
                        {
                          "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69",
                          "status": "success",
                          "error": "",
                          "file": "https://cdn1.ozone.ru/s3/item-picture-6/f3/ce/f4ceae54b323213d3e61e59c323bd8e5.csv",
                          "report_type": "seller_products",
                          "params": {
                            "visibility": "3"
                          },
                          "created_at": "2019-02-15T08:34:32.267178Z"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/report/products/create": {
        "post": {
          "summary": "Отчёт по товарам",
          "description": "Метод для получения отчёта с данными о товарах. Например, Ozon ID, количества товаров, цен, статуса.\nСоответствует разделу/действию **Товары и цены → Список товаров → Скачать → Товары CSV** в личном кабинете.\n\nПояснения к некоторым полям:\n  - __Ozon Product ID__ — идентификатор товара в нашей системе. Например, если вы продаёте товар со склада Ozon и со своего склада, Ozon Product ID будет для них одинаковым.\n  - __FBO Ozon SKU ID__ — идентификатор товара, который продаётся со склада Ozon.\n  - __FBS Ozon SKU ID__ — идентификатор товара, который продаётся с вашего склада.\n  - __CrossBorder Ozon SKU__ — идентификатор товара, который продаётся из-за границы.\n  - __Barcode__ — штрихкод товара, который печатается на маркировке.\n  - __Статус товара__ — можно ли купить товар на Ozon. Если статус «Готов к продаже», товар купить нельзя.\n  - __Доступно на складе Ozon, шт__ — сколько штук товара на складе доступно для продажи. Это количество не включает зарезервированные товары.\n  - __Зарезервировано, шт__ — сколько штук товара со статусом «Зарезервировано». Товар зарезервирован с момента получения заказа на Ozon и до упаковки для передачи покупателю.\n  - __Текущая цена с учётом скидки, руб.__ — цена, по которой товар продаётся сейчас (на момент загрузки отчёта, с учётом скидки). Если товар участвует в акции, указана цена без её учёта.\n  - __Базовая цена (цена до скидок), руб.__ — цена без учёта скидки.\n  - __Цена Premium, руб.__ — цена для покупателей с подпиской Ozon Premium.\n  - __Рекомендованная цена, руб.__ — минимальная цена на товар на другой торговой площадке.\n  - __Актуальная ссылка на рекомендованную цену__ — ссылка на товар с рекомендованной ценой на другой торговой площадке.\n",
          "operationId": "ReportAPI_CreateCompanyProductsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyProductsReportRequest"
                },
                "example": {
                  "language": "DEFAULT",
                  "offer_id": [],
                  "search": "",
                  "sku": [],
                  "visibility": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по товарам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v2/report/returns/create": {
        "post": {
          "summary": "Отчёт о возвратах",
          "description": "Метод для получения отчёта о возвратах FBO и FBS.",
          "operationId": "ReportAPI_ReportReturnsCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2ReportReturnsCreateRequest"
                },
                "example": {
                  "filter": {
                    "delivery_schema": "fbs",
                    "date_from": "2024-09-16T00:00:00.000Z",
                    "date_to": "2024-09-19T23:59:59.999Z",
                    "status": "MovingToSeller"
                  },
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о возвратах FBO и FBS",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ReportReturnsCreateResponse"
                  },
                  "example": {
                    "result": {
                      "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/report/postings/create": {
        "post": {
          "summary": "Отчёт об отправлениях",
          "description": "Отчёт об отправлениях с информацией по заказам:\n  - статусы заказов,\n  - дата начала обработки,\n  - номера заказов,\n  - номера отправлений,\n  - стоимость отправлений,\n  - содержимое отправлений.\nСоответствует разделу **FBO → Заказы со склада Ozon** и **FBS → Заказы с моих складов → CSV** в личном кабинете.\n",
          "operationId": "ReportAPI_CreateCompanyPostingsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyPostingsReportRequest"
                },
                "example": {
                  "filter": {
                    "processed_at_from": "2021-09-02T17:10:54.861Z",
                    "processed_at_to": "2021-11-02T17:10:54.861Z",
                    "delivery_schema": [
                      "fbo"
                    ],
                    "sku": [],
                    "cancel_reason_id": [],
                    "offer_id": "",
                    "status_alias": [],
                    "statuses": [],
                    "title": ""
                  },
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт об отправлениях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "REPORT_seller_postings_514893_1722847571_32a3508c-6b53-408c-a212-6c97138d23ed"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/finance/cash-flow-statement/list": {
        "post": {
          "summary": "Финансовый отчёт",
          "operationId": "FinanceAPI_FinanceCashFlowStatementList",
          "description": "Метод для получения финансового отчёта за периоды с 01 по 15 и с 16 по 31. \nЗапросить отчёт за отдельные дни не получится. \nСоответствует разделу **Финансы → Список отчётов** в личном кабинете.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3FinanceCashFlowStatementListRequest"
                },
                "example": {
                  "date": {
                    "from": "2022-01-01T00:00:00.000Z",
                    "to": "2022-12-31T00:00:00.000Z"
                  },
                  "with_details": true,
                  "page": 1,
                  "page_size": 1
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Финансовый отчёт",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponse"
                  },
                  "example": {
                    "result": {
                      "cash_flows": [
                        {
                          "commission_amount": 1437,
                          "currency_code": "string",
                          "item_delivery_and_return_amount": 1991,
                          "orders_amount": 1000,
                          "period": {
                            "begin": "2023-04-03T09:12:10.239Z",
                            "end": "2023-04-03T09:12:10.239Z",
                            "id": 11567022278500
                          },
                          "returns_amount": -3000,
                          "services_amount": 8471.28
                        }
                      ],
                      "details": {
                        "period": {
                          "begin": "2023-04-03T09:12:10.239Z",
                          "end": "2023-04-03T09:12:10.239Z",
                          "id": 11567022278500
                        },
                        "payments": [
                          {
                            "payment": 0,
                            "currency_code": "string"
                          }
                        ],
                        "begin_balance_amount": 0,
                        "delivery": {
                          "total": 0,
                          "amount": 0,
                          "delivery_services": {
                            "total": 0,
                            "items": [
                              {
                                "name": "string",
                                "price": 0
                              }
                            ]
                          }
                        },
                        "return": {
                          "total": 0,
                          "amount": 0,
                          "return_services": {
                            "total": 0,
                            "items": [
                              {
                                "name": "string",
                                "price": 0
                              }
                            ]
                          }
                        },
                        "loan": 0,
                        "invoice_transfer": 0,
                        "rfbs": {
                          "total": 0,
                          "transfer_delivery": 0,
                          "transfer_delivery_return": 0,
                          "compensation_delivery_return": 0,
                          "partial_compensation": 0,
                          "partial_compensation_return": 0
                        },
                        "services": {
                          "total": 0,
                          "items": [
                            {
                              "name": "string",
                              "price": 0
                            }
                          ]
                        },
                        "others": {
                          "total": 0,
                          "items": [
                            {
                              "name": "string",
                              "price": 0
                            }
                          ]
                        },
                        "end_balance_amount": 0
                      }
                    },
                    "page_count": 15
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/report/discounted/create": {
        "post": {
          "summary": "Отчёт об уценённых товарах",
          "description": "Запускает генерацию отчёта по уценённым товарам на складе Ozon.\nOzon может сам уценить товар, например, при повреждении.\n\nВ результате запроса будет не сам отчёт, а его уникальный идентификатор. \nЧтобы получить отчёт, отправьте идентификатор в запросе метода [/v1/report/info](#operation/ReportAPI_ReportInfo).\n\nС одного аккаунта продавца можно отправить 1 запрос в минуту.\nСоответствует разделу **Аналитика → Отчёты → Продажи со склада Ozon → Товары, уценённые Ozon** в личном кабинете.\n",
          "operationId": "ReportAPI_CreateDiscountedReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateDiscountedRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateDiscountedResponse"
                  },
                  "example": {
                    "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/report/warehouse/stock": {
        "post": {
          "summary": "Отчёт об остатках на FBS-складе",
          "description": "\nОтчёт с информацией о количестве доступных и зарезервированных единиц товара на складе.\nСоответствует разделу **FBS → Управление логистикой → Управление остатками → Скачать в XLS** в личном кабинете.\n\nВ результате запроса будет не сам отчёт, а его уникальный идентификатор. \nЧтобы получить отчёт, отправьте идентификатор в запросе метода [/v1/report/info](#operation/ReportAPI_ReportInfo).\n",
          "operationId": "ReportAPI_CreateStockByWarehouseReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateStockByWarehouseReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/commonCreateReportResponse"
                  },
                  "example": {
                    "code": "REPORT_seller_products_924336_1720170405_a9ea2f27-a473-4b13-99f9-d0cfcb5b1a69"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "ReportAPI"
          ]
        }
      },
      "/v1/analytics/data": {
        "post": {
          "summary": "Данные аналитики",
          "description": "Уĸажите период и метриĸи, ĸоторые нужно посчитать. В ответе будет аналитиĸа, сгруппированная по параметру `dimensions`.\n\nДля продавцов без Premium-подписки:\n- доступны данные за последние 3 месяца,\n- есть ограничения по способам группировки данных и метрикам.\n\nДля продавцов с Premium-подпиской ограничений нет.\n\nМетод можно использовать не больше 1 раза в минуту.\nСоответствует разделу **Аналитика → Графики** в личном кабинете.\n",
          "operationId": "AnalyticsAPI_AnalyticsGetData",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsAnalyticsGetDataRequest"
                },
                "example": {
                  "date_from": "2020-09-01",
                  "date_to": "2021-10-15",
                  "metrics": [
                    "hits_view_search"
                  ],
                  "dimension": [
                    "sku",
                    "day"
                  ],
                  "filters": [],
                  "sort": [
                    {
                      "key": "hits_view_search",
                      "order": "DESC"
                    }
                  ],
                  "limit": 1000,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные аналитики",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/analyticsAnalyticsGetDataResponse"
                  },
                  "example": {
                    "result": {
                      "data": [],
                      "totals": [
                        0
                      ]
                    },
                    "timestamp": "2021-11-25 15:19:21"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "AnalyticsAPI"
          ]
        }
      },
      "/v2/analytics/stock_on_warehouses": {
        "post": {
          "summary": "Отчёт по остаткам и товарам",
          "description": "\n<aside class=\"warning\">\nВ будущем метод будет отключён. Переключитесь на <a href=\"#operation/AnalyticsAPI_AnalyticsStocks\">/v1/analytics/stocks</a>.\n</aside>\n\nМетод для получения отчёта по остаткам и товарам в перемещении по складам Ozon.\n\n<aside class=\"warning\">\nОтличается от отчёта в разделе <b>Аналитика → Отчёты → Отчёт по остаткам и товарам в пути на склады Ozon</b> в личном кабинете.\n</aside>\n",
          "operationId": "AnalyticsAPI_AnalyticsGetStockOnWarehousesV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsStockOnWarehouseRequest"
                },
                "example": {
                  "limit": 1000,
                  "offset": 0,
                  "warehouse_type": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по остаткам и товарам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/analyticsStockOnWarehouseResponse"
                  },
                  "example": {
                    "result": {
                      "rows": [
                        {
                          "free_to_sell_amount": 0,
                          "item_code": "string",
                          "item_name": "string",
                          "promised_amount": 0,
                          "reserved_amount": 0,
                          "sku": 0,
                          "warehouse_name": "string"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "AnalyticsAPI"
          ]
        }
      },
      "/v1/analytics/turnover/stocks": {
        "post": {
          "summary": "Оборачиваемость товара",
          "description": "Используйте метод, чтобы узнать оборачиваемость товара и количество дней, на которое хватит текущего остатка. \nМетод соответствует разделу [**FBO -> Управление остатками**](https://seller.ozon.ru/app/supply/stocks-management) в личном кабинете.\nВы можете делать не больше 1 запроса в минуту по одному кабинету `Client-Id`.\n    \nЕсли вы запрашиваете список товаров по `sku`, параметры `limit` и `offset` необязательны.\n",
          "operationId": "AnalyticsAPI_StocksTurnover",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsTurnoverStocksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об оборачиваемости",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsTurnoverStocksResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "AnalyticsAPI"
          ]
        }
      },
      "/v2/finance/realization": {
        "post": {
          "summary": "Отчёт о реализации товаров (версия 2)",
          "description": "Отчёт о реализации доставленных и возвращённых товаров за месяц. Отмены и невыкупы не включаются.\nСоответствует разделу **Финансы → Документы → Отчёты о реализации → Отчёт о реализации товара** в личном кабинете.\n\nОтчёт придёт не позднее 5-го числа следующего месяца.\n\n[Подробнее об отчёте в Базе знаний продавца](https://seller-edu.ozon.ru/docs/finances-documents/calculations-documents/otchet-o-realizacii-tovarov.html)\n",
          "operationId": "FinanceAPI_GetRealizationReportV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2GetRealizationReportRequestV2"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о реализации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2GetRealizationReportResponseV2"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FinanceAPI"
          ]
        }
      },
      "/v3/finance/transaction/list": {
        "post": {
          "summary": "Список транзакций",
          "description": "\n<aside class=\"warning\">\nИспользуйте метод с последовательной отправкой запросов.\n</aside>\n\nВозвращает подробную информацию по всем начислениям. Максимальный период, за который можно получить информацию в одном запросе — 1 месяц.\n\nЕсли в запросе не указывать `posting_number`, то в ответе будут все отправления за указанный период или отправления определённого типа.\nСоответствует разделу **Финансы → Начисления** в личном кабинете.\n",
          "operationId": "FinanceAPI_FinanceTransactionListV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/financev3FinanceTransactionListV3Request"
                },
                "example": {
                  "filter": {
                    "date": {
                      "from": "2021-11-01T00:00:00.000Z",
                      "to": "2021-11-02T00:00:00.000Z"
                    },
                    "operation_type": [],
                    "posting_number": "",
                    "transaction_type": "all"
                  },
                  "page": 1,
                  "page_size": 1000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список транзакций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/financev3FinanceTransactionListV3Response"
                  },
                  "example": {
                    "result": {
                      "operations": [
                        {
                          "operation_id": 11401182187840,
                          "operation_type": "MarketplaceMarketingActionCostOperation",
                          "operation_date": "2021-11-01 00:00:00",
                          "operation_type_name": "Услуги продвижения товаров",
                          "delivery_charge": 0,
                          "return_delivery_charge": 0,
                          "accruals_for_sale": 0,
                          "sale_commission": 0,
                          "amount": -6.46,
                          "type": "services",
                          "posting": {
                            "delivery_schema": "",
                            "order_date": "",
                            "posting_number": "",
                            "warehouse_id": 0
                          },
                          "items": [],
                          "services": []
                        }
                      ],
                      "page_count": 1,
                      "row_count": 355
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FinanceAPI"
          ]
        }
      },
      "/v3/finance/transaction/totals": {
        "post": {
          "summary": "Суммы транзакций",
          "description": "Возвращает итоговые суммы по транзакциям за указанный период. \nСоответствует разделу **Финансы → Начисления → Баннер с общими суммами** в личном кабинете.\n\nЕсли вы неправильно заполните номера отправлений, в ответе вернутся нулевые значения.\n",
          "operationId": "FinanceAPI_FinanceTransactionTotalV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3Request"
                },
                "example": {
                  "date": {
                    "from": "2021-11-01T00:00:00.000Z",
                    "to": "2021-11-02T00:00:00.000Z"
                  },
                  "posting_number": "",
                  "transaction_type": "all"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Суммы транзакций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3Response"
                  },
                  "example": {
                    "result": {
                      "accruals_for_sale": 96647.58,
                      "sale_commission": -11456.65,
                      "processing_and_delivery": -24405.68,
                      "refunds_and_cancellations": -330,
                      "services_amount": -1307.57,
                      "compensation_amount": 0,
                      "money_transfer": 0,
                      "others_amount": 113.05
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FinanceAPI"
          ]
        }
      },
      "/v1/finance/document-b2b-sales": {
        "post": {
          "summary": "Реестр продаж юридическим лицам",
          "description": "Используйте метод, чтобы получить отчёт по продажам юридическим лицам. Соответствует разделу **Финансы → Документы → Реестр продаж юр. лицам** в личном кабинете.",
          "operationId": "ReportAPI_CreateDocumentB2BSalesReport",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateDocumentB2BSalesReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/commonCreateReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FinanceAPI"
          ]
        }
      },
      "/v1/finance/mutual-settlement": {
        "post": {
          "summary": "Отчёт о взаиморасчётах",
          "description": "Используйте метод, чтобы получить отчёт о взаиморасчетах. Соответствует разделу **Финансы → Документы → Аналитические отчеты → Отчет о взаиморасчетах** в личном кабинете.",
          "operationId": "ReportAPI_CreateMutualSettlementReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateMutualSettlementReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/commonCreateReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "FinanceAPI"
          ]
        }
      },
      "/v1/rating/summary": {
        "post": {
          "tags": [
            "SellerRating"
          ],
          "summary": "Получить информацию о текущих рейтингах продавца",
          "description": "Рейтинг продавца по следующим показателям: индекс цен, доставки вовремя, процент отмен, жалобы и другие.\nСоответствует разделу **Рейтинги → Рейтинги продавца** в личном кабинете.\n",
          "operationId": "RatingAPI_RatingSummaryV1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о рейтингах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1RatingSummaryV1Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/rating/history": {
        "post": {
          "tags": [
            "SellerRating"
          ],
          "summary": "Получить информацию о рейтингах продавца за период",
          "description": "Информация о рейтингах за заданный период и с фильтром по нужному рейтингу.\nСоответствует разделу **Рейтинги → Рейтинги продавца** в личном кабинете.\n",
          "operationId": "RatingAPI_RatingHistoryV1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RatingHistoryV1Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о рейтингах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1RatingHistoryV1Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/analytics/manage/stocks": {
        "post": {
          "summary": "Управление остатками",
          "description": "\n<aside class=\"warning\">\nВ будущем метод будет отключён. Переключитесь на <a href=\"#operation/AnalyticsAPI_AnalyticsStocks\">/v1/analytics/stocks</a>.\n</aside>\n\nИспользуйте метод, чтобы узнать, сколько товаров осталось на складах FBO.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1106-Razdel-upravleniia-ostatkami-analytics-manage-stocks)\nв сообществе разработчиков Ozon for dev.\n",
          "operationId": "AnalyticsAPI_ManageStocks",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsManageStocksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об остатках",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsManageStocksResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/analytics/product-queries": {
        "post": {
          "summary": "Получить информацию о запросах моих товаров",
          "description": "Используйте метод, чтобы получить данные о запросах ваших товаров. Полная аналитика доступна с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus). Без подписки вы можете посмотреть часть показателей. Метод аналогичен вкладке **Товары в поиске → Запросы моего товара** в личном кабинете.\n\nАналитику по запросам можно проверить за определённые даты. Для этого укажите интервал в полях `date_from` и `date_to`. Данные за последний месяц доступны в любом интервале, кроме трёх дней от текущей даты — в эти дни происходит расчёт. Аналитика за даты позже, чем месяц назад, доступна только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus) и только по неделям — в запросе укажите параметр `date_from`.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1115-Metod-polucheniia-informatsii-o-zaprosakh-tovara) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "AnalyticsAPI_AnalyticsProductQueries",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsProductQueriesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о запросах моих товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsProductQueriesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/analytics/product-queries/details": {
        "post": {
          "summary": "Получить детализацию запросов по товару",
          "description": "Используйте метод, чтобы получить данные по запросам на конкретный товар. Полная аналитика доступна с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus). Без подписки вы можете посмотреть часть показателей. Метод аналогичен просмотру данных по товару на вкладке **Товары в поиске → Запросы моего товара** в личном кабинете.\n\nАналитику по запросам можно проверить за определённые даты. Для этого укажите интервал в полях `date_from` и `date_to`. Данные за последний месяц доступны в любом интервале, кроме трёх дней от текущей даты — в эти дни происходит расчёт. Аналитика за даты позже, чем месяц назад, доступна только с подпиской [Premium](https://seller-edu.ozon.ru/seller-rating/about-rating/premium-program) или [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus) и только по неделям — в запросе укажите параметр `date_from`.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1306-Metod-polucheniia-informatsii-o-zaprosakh-tovara-po-odnomu-tovaru) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "AnalyticsAPI_AnalyticsProductQueriesDetails",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsProductQueriesDetailsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о запросах по конкретному товару",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsProductQueriesDetailsResponse"
                  }
                }
              }
            },
            "400": {
              "403": {
                "description": "Доступ запрещён",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "../../components/schemas/rpcStatus.yaml"
                    }
                  }
                }
              },
              "404": {
                "description": "Ответ не найден",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "../../components/schemas/rpcStatus.yaml"
                    }
                  }
                }
              },
              "409": {
                "description": "Конфликт запроса",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "../../components/schemas/rpcStatus.yaml"
                    }
                  }
                }
              },
              "500": {
                "description": "Внутренняя ошибка сервера",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "../../components/schemas/rpcStatus.yaml"
                    }
                  }
                }
              },
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/analytics/stocks": {
        "post": {
          "summary": "Получить аналитику по остаткам",
          "description": "Используйте метод, чтобы получить аналитику по остаткам товаров на складах. Метод соответствует разделу [**FBO → Управление остатками**](https://seller.ozon.ru/app/fbo-stocks/stocks-management/) в личном кабинете. Аналитика обновляется раз в день в 05:00 UTC.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1341-Novyi-metod-analitiki-po-ostatkam-na-skladakh-Ozon) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "AnalyticsAPI_AnalyticsStocks",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsStocksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Аналитика по остаткам на складах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsStocksResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/carriage/set-postings": {
        "post": {
          "summary": "Изменение состава отгрузки",
          "description": "\n<aside class=\"warning\">\nМетод полностью перезаписывает список заказов в отгрузке. Передавайте только те заказы, которые находятся в статусе <code>Ожидает отгрузки</code>, и вы готовы их отгрузить.    \n</aside>\n\n<br>\n\n<aside class=\"notice\">\nЧтобы вернуться к списку заказов, удалите отгрузку с помощью метода <a href=\"#operation/CarriageAPI_CarriageCancel\">/v1/carriage/cancel</a>, и создайте новую.\n</aside>\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1182-Izmenenie-sostava-otgruzki)\nв сообществе разработчиков Ozon for dev.\n",
          "operationId": "CarriageAPI_SetPostings",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetPostingsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SetPostingsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/carriage/cancel": {
        "post": {
          "summary": "Удаление отгрузки",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1183-Otmena-aktualnoi-otgruzki-FBS)\nв сообществе разработчиков Ozon for dev.\n",
          "operationId": "CarriageAPI_CarriageCancel",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CarriageCancelRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CarriageCancelResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/finance/realization/by-day": {
        "post": {
          "summary": "Отчёт о реализации товаров за день",
          "description": "Метод возвращает данные о суммах реализации из [отчёта о реализации товаров](#operation/FinanceAPI_GetRealizationReportV2) за день. Отмены и невыкупы не включаются. Данные доступны не более чем за 32 календарных дня от текущей даты. Метод доступен только с подпиской [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1344-Metod-dlia-poluchenie-otcheta-o-realizatsii-za-den) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "FinanceAPI_GetRealizationByDayReportV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRealizationReportByDayRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о реализации за день",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRealizationReportByDayResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/finance/realization/posting": {
        "post": {
          "summary": "Позаказный отчёт о реализации товаров",
          "description": "Отчёт о реализации доставленных и возвращённых товаров с детализацией по каждому заказу. Отмены и невыкупы не включаются. Отчёт доступен с настоящего времени по август 2023 года включительно.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1347-Novyi-metod-dlia-polucheniia-pozakaznogo-otcheta-o-realizatsii) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "FinanceAPI_GetRealizationReportV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRealizationReportPostingRequest"
                },
                "example": {
                  "month": 2,
                  "year": 2025
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Позаказный отчёт о реализации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetRealizationReportPostingResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/finance/compensation": {
        "post": {
          "summary": "Отчёт о компенсациях",
          "description": "Метод для получения отчёта о компенсациях. Соответствует отчёту из раздела **Финансы → Документы → Компенсации и прочие начисления** в личном кабинете.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1352-Metody-polucheniia-otchetov-o-kompensatsiiakh-i-dekompesatsiiakh) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "BetaMethod"
          ],
          "operationId": "ReportAPI_GetCompensationReport",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCompensationReportRequest"
                },
                "example": {
                  "date": "2023-09",
                  "language": "RU"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о компенсациях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/finance/decompensation": {
        "post": {
          "summary": "Отчёт о декомпенсациях",
          "description": "Метод для получения отчёта о декомпенсациях. Соответствует отчёту из раздела **Финансы → Документы → Компенсации и прочие начисления** в личном кабинете.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1352-Metody-polucheniia-otchetov-o-kompensatsiiakh-i-dekompesatsiiakh) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "BetaMethod"
          ],
          "operationId": "ReportAPI_GetDecompensationReport",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDecompensationReportRequest"
                },
                "example": {
                  "date": "2023-09",
                  "language": "RU"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о декомпенсациях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/action/timer/update": {
        "post": {
          "summary": "Обновление таймера актуальности минимальной цены",
          "description": "\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1209-Uchet-minimalnoi-tseny) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "ProductAPI_ActionTimerUpdate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductActionTimerUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Обновлено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductActionTimerUpdateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v1/product/action/timer/status": {
        "post": {
          "summary": "Получить статус установленного таймера",
          "description": "\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1076-Beta-metody-dlia-polucheniia-otcheta-o-vzaimoraschetakh-i-otcheta-Reestr-prodazh-iur-litsam) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "ProductAPI_ActionTimerStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductActionTimerStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статусы",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductActionTimerStatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v3/chat/history": {
        "post": {
          "summary": "История чата",
          "tags": [
            "BetaMethod"
          ],
          "operationId": "ChatAPI_ChatHistoryV3",
          "description": "Возвращает историю сообщений чата. По умолчанию от самого нового сообщения к старым.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1299-Metod-dlia-polucheniia-istorii-chatov) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3ChatHistoryRequest"
                },
                "example": {
                  "chat_id": "18b8e1f9-4ae7-461c-84ea-8e1f54d1a45e",
                  "direction": "Forward",
                  "filter": {
                    "message_ids": [
                      "3000000300211559667"
                    ]
                  },
                  "from_message_id": 3000000000118032000,
                  "limit": 1
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "История чата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3ChatHistoryResponse"
                  },
                  "example": {
                    "has_next": true,
                    "messages": [
                      {
                        "context": {
                          "order_number": "123456789",
                          "sku": "987654321"
                        },
                        "created_at": "2019-08-24T14:15:22Z",
                        "data": [
                          "Здравствуйте, у меня вопрос по вашему товару \"Стекло защитное для смартфонов\", артикул 11223. Подойдет ли он на данную [ модель ](https://www.ozon.ru/product/smartfon-samsung-galaxy-a03s-4-64-gb-chernyy) телефона?"
                        ],
                        "is_image": true,
                        "is_read": true,
                        "message_id": "3000000000817031942",
                        "moderate_image_status": "SUCCESS",
                        "user": {
                          "id": "115568",
                          "type": "Сustomer"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/info/wrong-volume": {
        "post": {
          "summary": "Список товаров с некорректными ОВХ",
          "description": "Возвращает список товаров с некорректными объёмно-весовыми характеристиками (ОВХ). Если вы указали размеры правильно, обратитесь в поддержку Ozon.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1260-Informer-nekorrektnykh-OVKh) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "ProductAPI_ProductInfoWrongVolume",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductInfoWrongVolumeRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о товарах с некорректными ОВХ",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductInfoWrongVolumeResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "BetaMethod"
          ]
        }
      },
      "/v2/conditional-cancellation/approve": {
        "post": {
          "tags": [
            "BetaMethod"
          ],
          "summary": "Подтвердить заявку на отмену rFBS",
          "description": "Метод позволяет согласовать заявку на отмену в статусе `ON_APPROVAL`. Заказ будет отменён, а деньги вернутся покупателю.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1422-Novye-metody-dlia-raboty-zaiavkami-na-otmenu-rFBS) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "CancellationAPI_ConditionalCancellationApproveV2",
          "requestBody": {
            "$ref": "#/components/requestBodies/v2ConditionalCancellationMoveV2Request"
          },
          "responses": {
            "200": {
              "description": "Заявка подтверждена"
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/conditional-cancellation/list": {
        "post": {
          "tags": [
            "BetaMethod"
          ],
          "summary": "Получить список заявок на отмену rFBS",
          "description": "Метод для получения списка заявок на отмену rFBS-заказов.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1422-Novye-metody-dlia-raboty-zaiavkami-na-otmenu-rFBS) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "CancellationAPI_GetConditionalCancellationListV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2GetConditionalCancellationListV2Request"
                },
                "example": {
                  "filters": {
                    "cancellation_initiator": [
                      "CLIENT"
                    ],
                    "posting_number": [
                      "34009011-0094-1"
                    ],
                    "state": "ALL"
                  },
                  "limit": 500,
                  "last_id": 0,
                  "with": {
                    "counter": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на отмену",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2GetConditionalCancellationListV2Response"
                  },
                  "example": {
                    "result": [
                      {
                        "approve_comment": "string",
                        "approve_date": "2024-11-27T12:31:43.621Z",
                        "auto_approve_date": "2024-11-27T12:31:43.621Z",
                        "cancellation_id": 0,
                        "cancellation_initiator": "OZON",
                        "cancellation_reason": {
                          "id": 0,
                          "name": "string"
                        },
                        "cancellation_reason_message": "string",
                        "cancelled_at": "2024-11-27T12:31:43.621Z",
                        "order_date": "2024-11-27T12:31:43.621Z",
                        "posting_number": "string",
                        "state": {
                          "id": 0,
                          "name": "string",
                          "state": "ALL"
                        },
                        "tpl_integration_type": "string"
                      }
                    ],
                    "counter": "1",
                    "last_id": 283784254
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/conditional-cancellation/reject": {
        "post": {
          "tags": [
            "BetaMethod"
          ],
          "summary": "Отклонить заявку на отмену rFBS",
          "description": "Метод позволяет отклонить заявку на отмену в статусе `ON_APPROVAL`. В параметре `comment` опишите причину. Заказ останется в том же статусе, и его нужно будет доставить покупателю.\n    \nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1422-Novye-metody-dlia-raboty-zaiavkami-na-otmenu-rFBS) в сообществе разработчиков Ozon for dev.\n",
          "operationId": "CancellationAPI_ConditionalCancellationRejectV2",
          "requestBody": {
            "$ref": "#/components/requestBodies/v2ConditionalCancellationMoveV2Request"
          },
          "responses": {
            "200": {
              "description": "Заявка отклонена"
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/comment/create": {
        "post": {
          "summary": "Оставить комментарий на отзыв",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_CommentCreate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CommentCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Комментарий создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CommentCreateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/comment/delete": {
        "post": {
          "summary": "Удалить комментарий на отзыв",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_CommentDelete",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CommentDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Комментарий удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/comment/list": {
        "post": {
          "summary": "Список комментариев на отзыв",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n\nМетод возвращает информацию по комментариям на отзывы, которые прошли модерацию.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_CommentList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CommentListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о комментариях на отзыв",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CommentListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/change-status": {
        "post": {
          "summary": "Изменить статус отзывов",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_ReviewChangeStatus",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ReviewChangeStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/count": {
        "post": {
          "summary": "Количество отзывов по статусам",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_ReviewCount",
          "requestBody": {
            "$ref": "#/components/requestBodies/QuestionAPI_GetQuestionCountBody"
          },
          "responses": {
            "200": {
              "description": "Количество обработанных и необработанных отзывов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ReviewCountResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/info": {
        "post": {
          "summary": "Получить информацию об отзыве",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_ReviewInfo",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ReviewInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отзыве",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ReviewInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/review/list": {
        "post": {
          "summary": "Получить список отзывов",
          "description": "Доступно только для продавцов с подпиской Premium Plus.\n\nВы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1190-Metody-dlia-raboty-s-otzyvami) в сообществе разработчиков Ozon for dev.\n\nМетод не возвращает параметры «Достоинства» и «Недостатки», если они есть в отзывах на товар. Эти параметры устарели, в новых отзывах их нет.\n",
          "tags": [
            "ReviewAPI"
          ],
          "operationId": "ReviewAPI_ReviewList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ReviewListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отзывов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ReviewListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/quant/list": {
        "post": {
          "summary": "Список эконом-товаров",
          "operationId": "QuantProductList",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductV1QuantListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Эконом-товары",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductV1QuantListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/product/quant/info": {
        "post": {
          "summary": "Информация об эконом-товаре",
          "operationId": "QuantGetInfo",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductV1QuantInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об эконом-товаре",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductV1QuantInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/quant/list": {
        "post": {
          "summary": "Список квантов",
          "operationId": "QuantGetList",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuantsV1ListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список квантов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuantsV1ListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/quant/get": {
        "post": {
          "summary": "Информация о кванте и его отправлениях",
          "operationId": "QuantGet",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuantsV1GetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о кванте",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuantsV1GetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/quant/ship": {
        "post": {
          "summary": "Собрать отправления кванта",
          "operationId": "QuantShip",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuantsV1ShipRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отправления собираются",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/quant/status": {
        "post": {
          "summary": "Статус отправлений кванта",
          "operationId": "QuantStatus",
          "description": "Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1084-Metody-po-tarifu-Ekonom) в сообществе разработчиков Ozon for dev.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuantsV1StatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус отправлений кванта",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QuantsV1StatusResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": [
            "Quants"
          ]
        }
      },
      "/v1/question/answer/create": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Создать ответ на вопрос",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "QuestionAnswer_Create",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionAnswerCreateRequest"
                },
                "example": {
                  "question_id": "0192a009-769f-7ee9-b412-893045171a66",
                  "sku": 646399170,
                  "text": "текст"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор ответа на вопрос",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateResponse"
                  },
                  "example": {
                    "answer_id": "0192e7ce-e12c-7a74-afc7-26e877799204"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/answer/delete": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Удалить ответ на вопрос",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "QuestionAnswer_Delete",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionAnswerDeleteRequest"
                },
                "example": {
                  "answer_id": "0192e7ce-e12c-7a74-afc7-26e877799204",
                  "sku": 646399170
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ответ удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Ответ удалён"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/answer/list": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Список ответов на вопрос",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "QuestionAnswer_List",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionAnswerListRequest"
                },
                "example": {
                  "last_id": "string",
                  "question_id": "019228a7-91d8-76af-a73a-e989dfac7ac8",
                  "sku": 646399170
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список ответов на вопрос",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerListResponse"
                  },
                  "example": {
                    "answers": [
                      {
                        "author_name": "string",
                        "id": "string",
                        "published_at": "2024-08-14T11:44:35.352Z",
                        "question_id": "string",
                        "sku": 646399170,
                        "text": "string"
                      }
                    ],
                    "last_id": "string"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/change-status": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Изменить статус вопросов",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "Question_ChangeStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionChangeStatusRequest"
                },
                "example": {
                  "question_ids": [
                    "string"
                  ],
                  "status": "VIEWED"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Статус изменён."
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/count": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Количество вопросов по статусам",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "Question_Count",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Количество вопросов по статусам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionCountResponse"
                  },
                  "example": {
                    "all": 10,
                    "new": 3,
                    "processed": 4,
                    "unprocessed": 1,
                    "viewed": 1
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/info": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Информацию по вопросу",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "Question_Info",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionInfoRequest"
                },
                "example": {
                  "question_id": "string"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionInfoResponse"
                  },
                  "example": {
                    "answers_count": "0",
                    "author_name": "Пользователь OZON",
                    "product_url": "https://www.ozon.ru/product/149829950/",
                    "sku": 646399170,
                    "id": "0192a009-769f-7ee9-b412-893045171a66",
                    "text": "Я отказываюсь от твоего отказа!",
                    "question_link": "https://www.ozon.ru/product/149829950/questions/?qid=290125772&utm_campaign=reviews_sc_link&utm_medium=share_button&utm_source=smm",
                    "published_at": "2024-10-08T10:09:29.099284Z",
                    "status": "VIEWED"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/list": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Список вопросов",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "Question_List",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список вопросов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionListResponse"
                  },
                  "example": {
                    "questions": [
                      {
                        "answers_count": 1,
                        "author_name": "Пользователь OZON",
                        "id": "019294ff-6888-7009-89d8-26569e4e450d",
                        "sku": 646399170,
                        "product_url": "https://www.ozon.ru/product/1649246352/",
                        "published_at": "2024-08-14T12:02:01.889Z",
                        "question_link": "https://www.ozon.ru/product/1649246352/questions/?qid=290180206&utm_campaign=reviews_sc_link&utm_medium=share_button&utm_source=smm",
                        "text": "Новый вопрос о товаре Света",
                        "status": "PROCESSED"
                      }
                    ],
                    "last_id": "019228a7-91d8-76af-a73a-e989dfac7ac8"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/question/top_sku": {
        "post": {
          "tags": [
            "Questions&Answers"
          ],
          "summary": "Товары с наибольшим количеством вопросов",
          "description": "Метод доступен по подписке [Premium Plus](https://seller-edu.ozon.ru/seller-rating/about-rating/subscription-premium-plus).\n\nВы можете оставить обратную связь по этому методу в комментариях к обсуждению в [сообществе разработчиков Ozon for dev](https://dev.ozon.ru/community/1198-Metody-dlia-raboty-s-voprosami-otvetami).\n",
          "operationId": "Question_TopSku",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1QuestionTopSkuRequest"
                },
                "example": {
                  "limit": "100"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionTopSkuResponse"
                  },
                  "example": {
                    "sku": [
                      56371271
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1QuestionAnswerCreateDefault"
                  }
                }
              }
            }
          }
        }
      }
    }
  }